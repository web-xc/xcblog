<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Web APIs第一天 | XC's Blog</title><noscript>开启JavaScript才能访问本站哦~</noscript><link rel="icon" href="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><!-- index.css--><link rel="stylesheet" href="/css/index.css?v=1.5.1"><!-- inject head--><link rel="stylesheet" href="https://cdn.cbd.int/solitude-source/icon/scoicon.min.css"><link rel="stylesheet" href="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.css"><!-- aplayer--><link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css"><!-- swiper--><!-- Open Graph--><meta name="description" content="获取DOM元素、修改属性1. Web API 基本认知 就是使用 JS 去操作 html 和浏览器 分类：DOM (文档对象模型)、BOM（浏览器对象模型） 2. 什么是DOM DOM（Document Object Model——文档对象模型）是用来呈现以及与任意 HTML 或 XML文档交"><!-- pwa--><script>(win => {
        win.saveToLocal = {
            set: function setWithExpiry(key, value, ttl) {
                if (ttl === 0)
                    return
                const now = new Date()
                const expiryDay = ttl * 86400000
                const item = {
                    value: value,
                    expiry: now.getTime() + expiryDay,
                }
                localStorage.setItem(key, JSON.stringify(item))
            },

            get: function getWithExpiry(key) {
                const itemStr = localStorage.getItem(key)

                if (!itemStr) {
                    return undefined
                }
                const item = JSON.parse(itemStr)
                const now = new Date()

                if (now.getTime() > item.expiry) {
                    localStorage.removeItem(key)
                    return undefined
                }
                return item.value
            }
        }

        const DarkModeStatus = localStorage.getItem('theme')
        if (DarkModeStatus !== null) {
            if (DarkModeStatus === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark')
            } else {
                document.documentElement.setAttribute('data-theme', 'light')
            }
        }

        const asideStatus = saveToLocal.get('aside-status')
        if (asideStatus !== undefined) {
            if (asideStatus === 'hide') {
                document.documentElement.classList.add('hide-aside')
            } else {
                document.documentElement.classList.remove('hide-aside')
            }
        }
    }
)(window)

console.log(
    "%c Program: Hexo %c Theme: Hexo-Theme-Solitude %c Version: v1.5.1",
    "border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#ff3842;margin:10px 0",
    "padding: 5px 10px;color:white;background:#3e9f50;",
    "border-radius:0 5px 5px 0;padding: 5px 10px;background:#0084ff;"
);</script><!-- global head--><script>const GLOBAL_CONFIG = {
    root: '/',
    algolia: undefined,
    localsearch: undefined,
    runtime: '2021-04-20 00:00:00',
    lazyload: {
        enable: true,
        error: '/img/error_load.png'
    },
    hightlight: {
        enable: true,
        limit: 200,
        expand: false,
        copy: true,
    },
    randomlinks: false,
    lang: {
        theme: {
            dark: '已切换至深色模式',
            light: '已切换至浅色模式',
        },
        copy: {
            success: '复制成功',
            error: '复制失败',
        },
        backtop: '返回顶部',
        time: {
            recent: '最近',
            yesterday: '昨天',
            berforeyesterday: '前天',
            daybefore: '天前',
            runtime: '天',
        },
        search: {
            empty: '找不到你查询的内容：${query}',
            hit: '找到 ${hits} 条结果，用时 ${time} 毫秒',
            placeholder: '输入关键词快速查找',
        },
        chs: {
            chs_to_cht: '繁體中文',
            cht_to_chs: '简体中文',
        }
    },
    aside: {
        sayhello: {
            morning: '一日之计在于晨',
            noon: '吃饱了才有力气干活',
            afternoon: '集中精力，攻克难关',
            night: '不要太劳累了，早睡更健康',
            goodnight: '睡个好觉，保证精力充沛',
        },
        sayhello2: ["🤖️ 数码科技爱好者","🔍 分享与热心帮助","🏠 智能家居小能手","🔨 设计开发一条龙","🤝 专修交互与设计","🏃 脚踏实地行动派","🧱 团队小组发动机","💢 壮汉人狠话不多","🎮 电竞游戏爱好者"],
    },
    covercolor: {
        enable: true
    },
    comment: {
        enable: false,
        type: '',
        commentBarrage: false,
        randomInfoStart: ["聪敏的","可爱的","美丽的"],
        randomInfoEnd: ["白菜","小可爱","小仙女"],
        twikoo: {
            url: '',
            accessToken: ''
        },
        waline: {
            url: '',
        }
    },
    lightbox: 'null',
    rightside: {
        enable: false
    },
    ai: {
        enable: true,
        key: '',
        talk: '我是王卓Sco开发的摘要生成助理ScoGPT，ScoGPT在静态部署时进行摘要的撰写，并且在访客访问时通过ScoCorrection转译后的文本摘要实现工具。我在这里只负责已经生成的摘要显示，你无法与我直接沟通，但我可以回答一些预设的问题。',
        randomPost: false,
    },
    music: {
        enable: false,
    },
    translate: undefined,
};</script><meta name="generator" content="Hexo 6.3.0"></head><body id="body"><!-- universe--><canvas id="universe"></canvas><!-- loading--><!-- console--><div id="console"><div class="close-btn" onclick="sco.hideConsole()"><i class="scoicon sco-close-fill"></i></div><div class="button-group"><div class="console-btn-item"><a class="darkmode_switchbutton" onclick="sco.switchDarkMode()" title="昼夜切换" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i></a></div><div class="console-btn-item" id="consoleHideAside"><a class="asideSwitch" onclick="sco.switchHideAside()" title="边栏显示控制" href="javascript:void(0);"><i class="scoicon sco-side-bar-fill"></i></a></div><div class="console-btn-item" id="consoleMusic" onclick="sco.musicToggle()"><a class="music-switch" title="音乐开关" href="javascript:void(0);"><i class="scoicon sco-disc-fill"></i></a></div></div><div class="console-mask" onclick="sco.hideConsole()"></div></div><!-- sidebar--><div id="sidebar" style="zoom: 1;"><div id="menu-mask" style="display: none;"></div><div id="sidebar-menus"><span class="sidebar-menu-item-title">功能</span><div class="sidebar-menu-item"><a class="darkmode_switchbutton menu-child" onclick="sco.switchDarkMode()" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i><span>显示模式</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div><span class="sidebar-menu-item-title">标签</span><div class="card-widget card-tags card-archives card-webinfo card-allinfo"><div class="card-tag-cloud"><a href="/tags/Ajax%E7%AC%94%E8%AE%B0/">Ajax笔记<sup>6</sup></a><a href="/tags/Hexo/">Hexo<sup>6</sup></a><a href="/tags/Qexo/">Qexo<sup>1</sup></a><a href="/tags/GitHub/">GitHub<sup>3</sup></a><a href="/tags/JavaScript/">JavaScript<sup>3</sup></a><a href="/tags/Markdown/">Markdown<sup>2</sup></a><a href="/tags/JavaScript%E7%AC%94%E8%AE%B0/">JavaScript笔记<sup>5</sup></a><a href="/tags/Vscode/">Vscode<sup>2</sup></a><a href="/tags/Vue%E5%89%8D%E7%BD%AE%E5%9F%BA%E7%A1%80/">Vue前置基础<sup>5</sup></a><a href="/tags/Vue%E6%A1%86%E6%9E%B6%E7%AC%94%E8%AE%B0/">Vue框架笔记<sup>6</sup></a><a href="/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题<sup>2</sup></a><a href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/">Web APIs笔记<sup>10</sup></a><a href="/tags/JavaScript%E9%AB%98%E7%BA%A7/">JavaScript高级<sup>5</sup></a><a href="/tags/Windows/">Windows<sup>3</sup></a><a href="/tags/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF%E6%A0%88/">其他技术栈<sup>6</sup></a><a href="/tags/jQuery/">jQuery<sup>1</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88/">前端技术栈<sup>3</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CSS/">学习笔记-CSS<sup>9</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-HTML/">学习笔记-HTML<sup>2</sup></a><a href="/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/">移动开发<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%BB%8F%E9%AA%8C/">前端经验<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/">前端笔记<sup>3</sup></a><a href="/tags/%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90/">网站资源<sup>2</sup></a><a href="/tags/%E5%AE%89%E5%8D%93%E7%8E%A9%E6%9C%BA/">安卓玩机<sup>1</sup></a><a href="/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/">网络协议<sup>1</sup></a></div></div></div></div><!-- keyboard--><div class="post" id="body-wrap"><header class="post-bg" id="page-header"><nav class="show" id="nav"><div id="nav-group"><div id="blog_name"><a id="site-name" href="/" title="返回博客主页"><span class="title">XC's Blog</span></a></div><div id="page-name-mask"><div id="page-name"><a id="page-name-text" onclick="sco.toTop()">Web APIs第一天</a></div></div><div id="menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div></div><div id="nav-left"></div><div id="nav-right"><div class="nav-button" id="randomPost_button"><a class="site-page" onclick="toRandomPost()" title="随机一篇文章" href="javascript:void(0);"><i class="scoicon sco-signal-tower-fill"></i></a></div><div class="nav-button" id="nav-console"><a class="console_switchbutton" onclick="sco.showConsole()" title="中控台" href="javascript:void(0);"><i class="scoicon sco-dashboard-fill"></i></a></div><div class="nav-button" id="nav-totop" onclick="sco.toTop()"><a class="totopbtn"><i class="scoicon sco-arrow-up-line"></i><span id="percent">0</span></a></div><div id="toggle-menu"><a class="site-page"><i class="scoicon sco-menu-line"></i></a></div></div></div></nav><div class="coverdiv" id="coverdiv"><img class="nolazyload" id="post-cover" src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="Web APIs第一天"></div><div id="post-info"><div id="post-firstinfo"><div class="meta-firstline"><a class="post-meta-original" title="该文章为原创文章，注意版权协议">原创</a><span class="post-meta-categories"><a class="post-meta-categories" href="/categories/Web-APIs笔记/">Web APIs笔记</a></span><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-name tags-punctuation">Web APIs笔记</span></a></div></div></div></div><h1 class="post-title">Web APIs第一天</h1><div id="post-meta"><div class="meta-secondline"></div></div></div><section class="main-hero-waves-area waves-area"><svg class="waves-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z"></path></defs><g class="parallax"><use href="#gentle-wave" x="48" y="0"></use><use href="#gentle-wave" x="48" y="3"></use><use href="#gentle-wave" x="48" y="5"></use><use href="#gentle-wave" x="48" y="7"></use></g></svg></section></header><main class="layout" id="content-inner"><div id="post"><div class="post-ai"><div class="ai-title"><div class="ai-title-left"><i class="ai-title-icon scoicon sco-robot-fill"></i><div class="ai-title-text">文章摘要</div></div><div class="ai-tag" id="ai-tag">GPT 4</div></div><div class="ai-explanation" style="display: block;"></div><div class="ai-suggestions"></div><div class="ai-bottom"><div class="ai-tips">此内容根据文章生成，并经过人工审核，仅用于文章内容的解释与总结</div><a class="ai-report" title="投诉" target="_blank" rel="noopener" href="https://blog.wzsco.top/about/">投诉</a></div></div><article class="post-content" id="article-container"><h3 id="获取DOM元素、修改属性"><a href="#获取DOM元素、修改属性" class="headerlink" title="获取DOM元素、修改属性"></a>获取DOM元素、修改属性</h3><h4 id="1-Web-API-基本认知"><a href="#1-Web-API-基本认知" class="headerlink" title="1. Web API 基本认知"></a>1. Web API 基本认知</h4><ol>
<li>就是使用 JS 去操作 html 和浏览器</li>
<li>分类：DOM (文档对象模型)、BOM（浏览器对象模型）</li>
</ol>
<img src ="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapi基本认知.jpg " style="zoom:33%;" />

<h3 id="2-什么是DOM"><a href="#2-什么是DOM" class="headerlink" title="2. 什么是DOM"></a>2. 什么是DOM</h3><ol>
<li>DOM（Document Object Model——文档对象模型）是用来呈现以及与任意 HTML 或 XML文档交互的API</li>
<li>白话文：DOM是浏览器提供的一套专门用来 操作网页内容 的功能</li>
<li>DOM作用: 开发网页内容特效和实现用户交互</li>
<li>操作网页内容，可以开发网页内容特效和实现用户交互</li>
</ol>
<h4 id="3-DOM树"><a href="#3-DOM树" class="headerlink" title="3. DOM树"></a>3. DOM树</h4><ol>
<li>将 HTML 文档以树状结构直观的表现出来，我们称之为文档树或 DOM 树</li>
<li>描述网页内容关系的名词</li>
<li>作用：文档树直观的体现了标签与标签之间的关系</li>
</ol>
<img data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/dom树.jpg" style="zoom:33%;" />

<h3 id="4-DOM对象（重要）"><a href="#4-DOM对象（重要）" class="headerlink" title="4. DOM对象（重要）"></a>4. DOM对象（重要）</h3><ol>
<li><p>DOM对象：浏览器根据html标签生成的 JS对象</p>
</li>
<li><p>所有的标签属性都可以在这个对象上面找到</p>
</li>
<li><p>修改这个对象的属性会自动映射到标签身上</p>
</li>
<li><p>DOM的核心思想: 把网页内容当做对象来处理</p>
</li>
<li><p>document 对象: 是 DOM 里提供的一个对象</p>
</li>
<li><p>所以它提供的属性和方法都是用来访问和操作网页内容的</p>
</li>
<li><p>网页所有内容都在document里面</p>
</li>
<li><p>将 HTML 文档以树状结构直观的表现出来，我们称之为文档树或 DOM 树</p>
</li>
<li><p>作用：文档树直观的体现了标签与标签之间的关系</p>
</li>
<li><p>浏览器根据html标签生成的 JS对象（DOM对象）</p>
</li>
<li><p>DOM的核心就是把内容当对象来处理</p>
</li>
<li><p>是 DOM 里提供的一个对象</p>
</li>
<li><p>网页所有内容都在document里面</p>
</li>
</ol>
<h3 id="5-获取DOM元素"><a href="#5-获取DOM元素" class="headerlink" title="5. 获取DOM元素"></a>5. 获取DOM元素</h3><h3 id="1-根据CSS选择器来获取DOM元素-重点"><a href="#1-根据CSS选择器来获取DOM元素-重点" class="headerlink" title="1. 根据CSS选择器来获取DOM元素 (重点)"></a>1. 根据CSS选择器来获取DOM元素 (重点)</h3><ol>
<li>选择匹配的第一个元素</li>
</ol>
<p>包含一个或多个有效的CSS选择器 字符串</p>
<p>CSS选择器匹配的第一个元素,一个 HTMLElement对象。 如果没有匹配到，则返回null。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box li:last-child&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>选择匹配的多个元素</li>
</ol>
<p>包含一个或多个有效的CSS选择器 字符串</p>
<p>CSS选择器匹配的NodeList 对象集合</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.box li&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br></pre></td></tr></table></figure>

<ol>
<li>获取一个DOM元素我们使用谁？</li>
</ol>
<p>​    querySelector() </p>
<ol start="2">
<li>获取多个DOM元素我们使用谁？<br>querySelectorAll() </li>
<li>querySelector() 方法能直接操作修改吗？<br>可以 </li>
<li>querySelectorAll() 方法能直接修改吗？ 如果不能可以怎么做到修改？<br>不可以， 只能通过遍历的方式一次给里面的元素做修改</li>
</ol>
<h3 id="2-根据CSS选择器来获取DOM元素-重点"><a href="#2-根据CSS选择器来获取DOM元素-重点" class="headerlink" title="2. 根据CSS选择器来获取DOM元素 (重点)"></a>2. 根据CSS选择器来获取DOM元素 (重点)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过遍历方式 获取每一个dom对象/元素</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.box li&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num1 = <span class="number">0</span>; num1 &lt; num2.<span class="property">length</span>; num1++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num2[num1])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>得到的是一个伪数组：</p>
<ol>
<li>有长度有索引号的数组</li>
<li>但是没有 pop() push() 等数组方法</li>
<li>想要得到里面的每一个对象，则需要遍历（for）的方式获得</li>
<li>哪怕只有一个元素，通过querySelectAll() 获取过来的也是一个伪数组，里面只有一个元素而已</li>
</ol>
<h4 id="3-其他获取DOM元素方法（了解）"><a href="#3-其他获取DOM元素方法（了解）" class="headerlink" title="3. 其他获取DOM元素方法（了解）"></a>3. 其他获取DOM元素方法（了解）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 根据id获取元素</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;num&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1)</span><br><span class="line"><span class="comment">// 2. 根据标签获取页面所有div</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num2)</span><br><span class="line"><span class="comment">// 3. 根据类目获取页面所有类目</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;nav&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num3)</span><br></pre></td></tr></table></figure>

<ol>
<li>获取页面中的标签我们最终常用那两种方式？</li>
</ol>
<p>querySelectorAll() 和 querySelector()</p>
<ol start="2">
<li>他们两者的区别是什么？</li>
</ol>
<p>querySelector() 只能选择一个元素， 可以直接操作</p>
<p>querySelectorAll() 可以选择多个元素，得到的是伪数组，需要遍历得到每一个元素</p>
<ol start="3">
<li>他们两者小括号里面的参数有神马注意事项？</li>
</ol>
<p>里面写css选择器, 必须是字符串，也就是必须加引号</p>
<h3 id="6-设置-修改DOM元素内容"><a href="#6-设置-修改DOM元素内容" class="headerlink" title="6. 设置/修改DOM元素内容"></a>6. 设置/修改DOM元素内容</h3><p>DOM对象都是根据标签生成的,所以操作标签,本质上就是操作DOM对象, 就是操作对象使用的点语法。</p>
<ol>
<li>document.write()</li>
</ol>
<p>只能将文本内容追加到  前面的位置, 文本中包含的标签会被解析</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;哈喽&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>元素innerText 属性<br>将文本内容添加/更新到任意标签位置, 文本中包含的标签不会被解析</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">num.<span class="property">innerText</span> = <span class="string">&#x27;&lt;h3&gt;你好&lt;/h3&gt;&#x27;</span></span><br><span class="line">num.<span class="property">innerText</span> = <span class="string">&#x27;你好呀&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>元素innerHTML 属性<br>将文本内容添加/更新到任意标签位置, 文本中包含的标签会被解析</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">num.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;h3&gt;您好啊&lt;/h3&gt;&#x27;</span></span><br></pre></td></tr></table></figure>

<ol>
<li><p>document.write() 方法 只能追加到body中</p>
</li>
<li><p>元素.innerText 属性 只识别内容，不能解析标签</p>
</li>
<li><p>元素.innerHTML 属性 能够解析标签</p>
</li>
<li><p>如果还在纠结到底用谁，你可以选择innerHTML</p>
</li>
<li><h4 id="随机抽取的名字显示到指定的标签内部"><a href="#随机抽取的名字显示到指定的标签内部" class="headerlink" title="随机抽取的名字显示到指定的标签内部"></a>随机抽取的名字显示到指定的标签内部</h4></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 随机名字显示标签内部</span></span><br><span class="line"><span class="keyword">let</span> num1 = [<span class="string">&#x27;赵云&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>, <span class="string">&#x27;马超&#x27;</span>, <span class="string">&#x27;曹操&#x27;</span>, <span class="string">&#x27;吕布&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="title function_">fn</span>(<span class="number">0</span>, num1.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line"><span class="comment">// 通过innerHTML写入元素内部</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>)</span><br><span class="line">num3.<span class="property">innerHTML</span> = num1[num2]</span><br></pre></td></tr></table></figure>

<h3 id="7-设置-修改DOM元素属性"><a href="#7-设置-修改DOM元素属性" class="headerlink" title="7. 设置/修改DOM元素属性"></a>7. 设置/修改DOM元素属性</h3><h4 id="1-通过-JS-设置-修改标签元素属性，比如通过-src更换-图片"><a href="#1-通过-JS-设置-修改标签元素属性，比如通过-src更换-图片" class="headerlink" title="1. 通过 JS 设置/修改标签元素属性，比如通过 src更换 图片"></a>1. 通过 JS 设置/修改标签元素属性，比如通过 src更换 图片</h4><ol>
<li>最常见的属性比如： href、title、src 等</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line"><span class="comment">// 修改标签元素 图片src title href 等...</span></span><br><span class="line">num.<span class="property">src</span> = <span class="string">&#x27;./images/1.webp&#x27;</span></span><br><span class="line">num.<span class="property">title</span> = <span class="string">&#x27;这是刘德华&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-页面刷新-图片随机更换"><a href="#1-页面刷新-图片随机更换" class="headerlink" title="1. 页面刷新, 图片随机更换"></a>1. 页面刷新, 图片随机更换</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.img1&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="title function_">fn</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">num1.<span class="property">src</span> = <span class="string">`./images/<span class="subst">$&#123;num2&#125;</span>.webp`</span></span><br></pre></td></tr></table></figure>

<h4 id="2-可以通过-JS-设置-修改标签元素的样式属性"><a href="#2-可以通过-JS-设置-修改标签元素的样式属性" class="headerlink" title="2. 可以通过 JS 设置/修改标签元素的样式属性"></a>2. 可以通过 JS 设置/修改标签元素的样式属性</h4><ol>
<li>比如通过 轮播图小圆点自动更换颜色样式</li>
<li>点击按钮可以滚动图片，这是移动的图片的位置 left 等等</li>
</ol>
<h4 id="1-通过-style-属性操作CSS"><a href="#1-通过-style-属性操作CSS" class="headerlink" title="1. 通过 style 属性操作CSS"></a>1. 通过 style 属性操作CSS</h4><ol>
<li>修改样式通过style属性引出</li>
<li>如果属性有-连接符，需要转换为小驼峰命名法</li>
<li>赋值的时候，需要的时候不要忘记加css单位</li>
<li>因为我们是样式属性，一定别忘记，大部分数字后面都需要加单位</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果有 - 连接符 转换为小驼峰命名法</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line">num.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;skyblue&#x27;</span></span><br><span class="line">num.<span class="property">style</span>.<span class="property">borderRadius</span> = <span class="string">&#x27;10px&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-操作类名-className-操作CSS"><a href="#2-操作类名-className-操作CSS" class="headerlink" title="2. 操作类名(className) 操作CSS"></a>2. 操作类名(className) 操作CSS</h4><ol>
<li>如果修改的样式比较多，直接通过style属性修改比较繁琐，我们可以通过借助于css类名的形式</li>
<li>由于class是关键字, 所以使用className去代替</li>
<li>className是使用新值换旧值, 如果需要添加一个类,需要保留之前的类名</li>
<li>可以同时修改多个样式</li>
<li>直接使用 className 赋值会覆盖以前的类名</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用ClassName修改样式 可修改多个样式 但会覆盖以前类名</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.one&#x27;</span>)</span><br><span class="line">num.<span class="property">className</span> = <span class="string">&#x27;one box1&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-通过-classList-操作类控制CSS"><a href="#3-通过-classList-操作类控制CSS" class="headerlink" title="3. 通过 classList 操作类控制CSS"></a>3. 通过 classList 操作类控制CSS</h4><ol>
<li>为了解决className 容易覆盖以前的类名，我们可以通过classList方式追加和删除类名</li>
<li>修改大量样式的更方便</li>
<li>修改不多样式的时候方便</li>
<li>classList 是追加和删除不影响以前类名</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用ClaaList修改样式 修改样式方便 追加删除不影响以前类名</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.one1&#x27;</span>)</span><br><span class="line"><span class="comment">// add 是个方法 添加/追加</span></span><br><span class="line">num1.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;two&#x27;</span>)</span><br><span class="line"><span class="comment">// remove 移除</span></span><br><span class="line">num1.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;two&#x27;</span>)</span><br><span class="line"><span class="comment">// toggle 切换 有就删 没有就加</span></span><br><span class="line">num1.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;two&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="2-页面刷新，页面随机更换背景图片"><a href="#2-页面刷新，页面随机更换背景图片" class="headerlink" title="2. 页面刷新，页面随机更换背景图片"></a>2. 页面刷新，页面随机更换背景图片</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num2 = [<span class="string">&#x27;skyblue&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> num3 = <span class="title function_">fn</span>(<span class="number">0</span>, num2.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line">num1.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">`<span class="subst">$&#123;num2[num3]&#125;</span>`</span></span><br></pre></td></tr></table></figure>

<h3 id="8-设置-修改DOM元素属性"><a href="#8-设置-修改DOM元素属性" class="headerlink" title="8. 设置/修改DOM元素属性"></a>8. 设置/修改DOM元素属性</h3><ol>
<li>表单很多情况，也需要修改属性，比如点击眼睛，可以看到密码，本质是把表单类型转换为文本框</li>
<li>正常的有属性有取值的 跟其他的标签属性没有任何区别</li>
<li>获取: DOM对象.属性名, 设置: DOM对象.属性名 = 新值</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;请输入密码&quot;</span>&gt;</span><br><span class="line"><span class="comment">// 可取值/设置值 </span></span><br><span class="line">num1.<span class="property">value</span> = <span class="string">&#x27;请输入&#x27;</span></span><br><span class="line">num1.<span class="property">type</span> = <span class="string">&#x27;password&#x27;</span></span><br></pre></td></tr></table></figure>

<p>表单属性中添加就有效果,移除就没有效果,一律使用布尔值表示 如果为true 代表添加了该属性 如果是false 代 表移除了该属性</p>
<p>比如： disabled、checked、selected</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;button disabled&gt;按钮&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">// 1. disabled/不可用</span></span><br><span class="line"><span class="language-xml">let num1 = document.querySelector(&#x27;button&#x27;)</span></span><br><span class="line"><span class="language-xml">num1.disabled = false </span></span><br><span class="line"><span class="language-xml">// 2. checkbox 使用场景</span></span><br><span class="line"><span class="language-xml">let num2 = document.querySelector(&#x27;.box&#x27;)</span></span><br><span class="line"><span class="language-xml">num2.checked = true</span></span><br></pre></td></tr></table></figure>

<h2 id="9-定时器-间歇函数"><a href="#9-定时器-间歇函数" class="headerlink" title="9. 定时器-间歇函数"></a>9. 定时器-间歇函数</h2><p>网页中经常会需要一种功能：每隔一段时间需要自动执行一段代码，不需要我们手动去触发</p>
<p>可以根据时间自动重复执行某些代码</p>
<h4 id="定时器函数可以开启和关闭定时器"><a href="#定时器函数可以开启和关闭定时器" class="headerlink" title="定时器函数可以开启和关闭定时器"></a>定时器函数可以开启和关闭定时器</h4><h4 id="1-开启定时器"><a href="#1-开启定时器" class="headerlink" title="1. 开启定时器"></a>1. 开启定时器</h4><ol>
<li>作用：每隔一段时间调用这个函数, 间隔时间单位是毫秒</li>
<li>函数名字不需要加括号, 定时器返回的是一个id数字</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;前端&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;前端工程师&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> num = <span class="built_in">setInterval</span>(fn, <span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<h4 id="2-关闭定时器"><a href="#2-关闭定时器" class="headerlink" title="2. 关闭定时器"></a>2. 关闭定时器</h4><ol>
<li>一般不会刚创建就停止，而是满足一定条件再停止</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">clearInterval</span>(num)</span><br></pre></td></tr></table></figure>

<h4 id="3-倒计时效果"><a href="#3-倒计时效果" class="headerlink" title="3. 倒计时效果"></a>3. 倒计时效果</h4><ol>
<li>开始先把按钮禁用（disabled 属性）</li>
<li>一定要获取元素</li>
<li>函数内处理逻辑 秒数开始减减 </li>
<li>按钮里面的文字跟着一起变化 </li>
<li>如果秒数等于0 停止定时器 里面文字变为 同意 最后 按钮可以点击</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea cols=<span class="string">&quot;30&quot;</span> rows=<span class="string">&quot;10&quot;</span>&gt;用户注册协议欢迎注册成为京东用户&lt;/textarea&gt;&lt;br&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">disabled</span>&gt;</span>我已阅读用户协议(6)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="comment">// 1.获取 button 元素</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line"><span class="comment">// 2.需要一个变量来计数</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="number">6</span></span><br><span class="line"><span class="comment">// 3.开启定时器 num3 序号id</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    num2--</span><br><span class="line">    num1.<span class="property">innerHTML</span> = <span class="string">`我已阅读用户协议(<span class="subst">$&#123;num2&#125;</span>)`</span></span><br><span class="line">    <span class="keyword">if</span> (num2 === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 4.停止 清除定时器</span></span><br><span class="line">        <span class="built_in">clearInterval</span>(num3)</span><br><span class="line">        <span class="comment">// 5.开启 button 按钮</span></span><br><span class="line">        num1.<span class="property">disabled</span> = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// 6.开启后更换文字</span></span><br><span class="line">        num1.<span class="property">innerHTML</span> = <span class="string">&#x27;我同意用户协议&#x27;</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;, <span class="number">200</span>)</span><br></pre></td></tr></table></figure>

<h3 id="10-网页轮播图效果"><a href="#10-网页轮播图效果" class="headerlink" title="10. 网页轮播图效果"></a>10. 网页轮播图效果</h3><ol>
<li>获取元素 (图片和文字)</li>
<li>设置定时器函数 </li>
<li>设置一个变量++ </li>
<li>更改图片张数 </li>
<li>更改文字信息</li>
<li>处理图片自动复原从头播放 </li>
<li>如果图片播放到最后一张就是第9张 </li>
<li>则把变量重置为0 </li>
<li>注意逻辑代码写到图片和文字变化的前面</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/b01.jpg&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>挑战云歌单，欢迎你来<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">imgSrc</span>: <span class="string">&#x27;images/b01.jpg&#x27;</span>,</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;挑战云歌单，欢迎你来&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 1. 获取 图片/文字</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.img&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.text&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 记录图片张数</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    num3++</span><br><span class="line">    <span class="comment">// 3. 修改图片和文字属性</span></span><br><span class="line">    num1.<span class="property">src</span> = data[num3].<span class="property">imgSrc</span></span><br><span class="line">    num2.<span class="property">innerHTML</span> = data[num3].<span class="property">title</span></span><br><span class="line">    <span class="comment">// 无缝衔接 3种方法</span></span><br><span class="line">    <span class="keyword">if</span> (num3 === <span class="number">8</span>) &#123;</span><br><span class="line">        num3 = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">200</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="本节单词"><a href="#本节单词" class="headerlink" title="本节单词:"></a>本节单词:</h4><ol>
<li>setInterval</li>
<li>clearInterval</li>
<li>querySelector</li>
<li>querySelectorAll</li>
<li>innerText</li>
<li>innerHTML</li>
<li>disabled</li>
<li>className</li>
<li>classList</li>
<li>add</li>
<li>remove</li>
<li>toggle</li>
<li>getElementById</li>
<li>getElementsByTagName</li>
<li>getElementsByClassName</li>
</ol>
</article><div class="post-copyright"><div class="post-copyright__author_group"><a class="post-copyright__author_img" href="/about/"><img class="post-copyright__author_img_front" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"></a><div class="post-copyright__author_name">XC's Blog</div><div class="post-copyright__author_desc"></div></div><div class="post-tools" id="post-tools"><div class="post-tools-left"><div id="quit-box" onclick="RemoveRewardMask()"></div></div></div><div class="post-copyright__notice"><span class="post-copyright-info">本文是原创文章，采用<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0</a>协议，完整转载请注明来自<a href="/">XC's Blog</a></span></div></div><div class="post-tools-right"><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-punctuation"></span>Web APIs笔记<span class="tagsPageCount">10</span></a></div></div></div><nav class="needEndHide pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%BA%8C%E5%A4%A9"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">Web APIs第二天</div></div></a></div><div class="next-post pull-right"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">WebAPIs学习笔记</div></div></a></div></nav><div class="relatedPosts"><div class="headline"><i class="scoicon sco-star-smile-fill"></i><span>喜欢这篇的人也看了</span><div class="relatedPosts-link"><a onclick="event.preventDefault(); toRandomPost();" href="javascript:void(0);" rel="external nofollow" data-pjax-state="">随便逛逛</a></div></div><div class="relatedPosts-list"><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%B8%83%E5%A4%A9" title="Web APIs第七天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第七天</div></div></a></div><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9" title="Web APIs第六天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第六天</div></div></a></div></div></div></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="card-content"><div class="card-info-avatar is-center"><div class="author-info__top-group"><div class="author-info__sayhi" id="author-info__sayhi" onclick="sco.changeSayHelloText()">sayhello.morning</div></div></div><div class="avatar-img-group"><img class="avatar-img" alt="头像" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><div class="avatar-sticker"><img class="avatar-sticker-img" data-lazy-src="https://bu.dusays.com/2023/12/30/659011053e246.png" alt="心情贴纸"></div></div><div class="author-info__description_group"><div class="author-info__description">分享自己对编程的<b>热爱</b>，对美好生活的<b>向往</b>，对知识海洋<b>探索历程</b>。</div><div class="author-info__description2">相信你可以在这里找到对你有用的知识和教程。</div></div><div class="author-info__bottom-group"><a class="author-info__bottom-group-left" href="/about/"><div class="author-info__name">XC's Blog</div><div class="author-info__desc"></div></a><div class="card-info-social-icons is-center"></div></div></div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="scoicon sco-menu-line"></i><span>文章目录</span></div><div class="toc-content" id="toc-content"><ol class="toc"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0%E3%80%81%E4%BF%AE%E6%94%B9%E5%B1%9E%E6%80%A7"><span class="toc-text">获取DOM元素、修改属性</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-Web-API-%E5%9F%BA%E6%9C%AC%E8%AE%A4%E7%9F%A5"><span class="toc-text">1. Web API 基本认知</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E4%BB%80%E4%B9%88%E6%98%AFDOM"><span class="toc-text">2. 什么是DOM</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#3-DOM%E6%A0%91"><span class="toc-text">3. DOM树</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#4-DOM%E5%AF%B9%E8%B1%A1%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89"><span class="toc-text">4. DOM对象（重要）</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#5-%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0"><span class="toc-text">5. 获取DOM元素</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E6%A0%B9%E6%8D%AECSS%E9%80%89%E6%8B%A9%E5%99%A8%E6%9D%A5%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0-%E9%87%8D%E7%82%B9"><span class="toc-text">1. 根据CSS选择器来获取DOM元素 (重点)</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E6%A0%B9%E6%8D%AECSS%E9%80%89%E6%8B%A9%E5%99%A8%E6%9D%A5%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0-%E9%87%8D%E7%82%B9"><span class="toc-text">2. 根据CSS选择器来获取DOM元素 (重点)</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E5%85%B6%E4%BB%96%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0%E6%96%B9%E6%B3%95%EF%BC%88%E4%BA%86%E8%A7%A3%EF%BC%89"><span class="toc-text">3. 其他获取DOM元素方法（了解）</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#6-%E8%AE%BE%E7%BD%AE-%E4%BF%AE%E6%94%B9DOM%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9"><span class="toc-text">6. 设置&#x2F;修改DOM元素内容</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E9%9A%8F%E6%9C%BA%E6%8A%BD%E5%8F%96%E7%9A%84%E5%90%8D%E5%AD%97%E6%98%BE%E7%A4%BA%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E6%A0%87%E7%AD%BE%E5%86%85%E9%83%A8"><span class="toc-text">随机抽取的名字显示到指定的标签内部</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#7-%E8%AE%BE%E7%BD%AE-%E4%BF%AE%E6%94%B9DOM%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7"><span class="toc-text">7. 设置&#x2F;修改DOM元素属性</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E9%80%9A%E8%BF%87-JS-%E8%AE%BE%E7%BD%AE-%E4%BF%AE%E6%94%B9%E6%A0%87%E7%AD%BE%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7%EF%BC%8C%E6%AF%94%E5%A6%82%E9%80%9A%E8%BF%87-src%E6%9B%B4%E6%8D%A2-%E5%9B%BE%E7%89%87"><span class="toc-text">1. 通过 JS 设置&#x2F;修改标签元素属性，比如通过 src更换 图片</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E9%A1%B5%E9%9D%A2%E5%88%B7%E6%96%B0-%E5%9B%BE%E7%89%87%E9%9A%8F%E6%9C%BA%E6%9B%B4%E6%8D%A2"><span class="toc-text">1. 页面刷新, 图片随机更换</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87-JS-%E8%AE%BE%E7%BD%AE-%E4%BF%AE%E6%94%B9%E6%A0%87%E7%AD%BE%E5%85%83%E7%B4%A0%E7%9A%84%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7"><span class="toc-text">2. 可以通过 JS 设置&#x2F;修改标签元素的样式属性</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E9%80%9A%E8%BF%87-style-%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9CCSS"><span class="toc-text">1. 通过 style 属性操作CSS</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E6%93%8D%E4%BD%9C%E7%B1%BB%E5%90%8D-className-%E6%93%8D%E4%BD%9CCSS"><span class="toc-text">2. 操作类名(className) 操作CSS</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E9%80%9A%E8%BF%87-classList-%E6%93%8D%E4%BD%9C%E7%B1%BB%E6%8E%A7%E5%88%B6CSS"><span class="toc-text">3. 通过 classList 操作类控制CSS</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E9%A1%B5%E9%9D%A2%E5%88%B7%E6%96%B0%EF%BC%8C%E9%A1%B5%E9%9D%A2%E9%9A%8F%E6%9C%BA%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87"><span class="toc-text">2. 页面刷新，页面随机更换背景图片</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#8-%E8%AE%BE%E7%BD%AE-%E4%BF%AE%E6%94%B9DOM%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7"><span class="toc-text">8. 设置&#x2F;修改DOM元素属性</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#9-%E5%AE%9A%E6%97%B6%E5%99%A8-%E9%97%B4%E6%AD%87%E5%87%BD%E6%95%B0"><span class="toc-text">9. 定时器-间歇函数</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%AE%9A%E6%97%B6%E5%99%A8%E5%87%BD%E6%95%B0%E5%8F%AF%E4%BB%A5%E5%BC%80%E5%90%AF%E5%92%8C%E5%85%B3%E9%97%AD%E5%AE%9A%E6%97%B6%E5%99%A8"><span class="toc-text">定时器函数可以开启和关闭定时器</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%BC%80%E5%90%AF%E5%AE%9A%E6%97%B6%E5%99%A8"><span class="toc-text">1. 开启定时器</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E5%85%B3%E9%97%AD%E5%AE%9A%E6%97%B6%E5%99%A8"><span class="toc-text">2. 关闭定时器</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E5%80%92%E8%AE%A1%E6%97%B6%E6%95%88%E6%9E%9C"><span class="toc-text">3. 倒计时效果</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#10-%E7%BD%91%E9%A1%B5%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%95%88%E6%9E%9C"><span class="toc-text">10. 网页轮播图效果</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E8%8A%82%E5%8D%95%E8%AF%8D"><span class="toc-text">本节单词:</span></a></li></ol></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="scoicon sco-map-line"></i><span>最近发布</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题"><img alt="整个前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题">整个前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题"><img alt="常见前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题">常见前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台"><img alt="硅谷甄选运营平台" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台">硅谷甄选运营平台</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天"><img alt="Vue第三天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天">Vue第三天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天"><img alt="Vue第二天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天">Vue第二天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9">Vue框架笔记</a></div></div></div></div></div></div></main><footer id="footer"><div id="sco-footer-bar"><div class="footer-logo"><span class="scoicon">XC's Blog</span></div><div class="footer-bar-description">来自XC's Blog - 的文章</div><a class="footer-bar-link" href="/">了解更多</a></div><div id="footer_deal"><div class="footer_mini_logo" id="footer_mini_logo" title="返回顶部" onclick="sco.toTop()"><img data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg" alt="返回顶部"></div></div><div id="sco-footer"></div><div id="footer-bar"><div class="footer-bar-links"><div class="footer-bar-left"><div class="copyright">© 2021 - 2024 By&nbsp;<a class="footer-bar-link" href="/">XC's Blog</a></div></div><div class="footer-bar-right"><a class="footer-bar-link" target="_blank" rel="noopener" href="https://github.com/wleelw/hexo-theme-solitude" title="主题">主题</a><a class="footer-bar-link cc"><i class="scoicon sco-copyright-line"></i><i class="scoicon sco-creative-commons-by-line"></i><i class="scoicon sco-creative-commons-nc-line"></i><i class="scoicon sco-creative-commons-nd-line"></i></a></div></div></div></footer></div><!-- inject body--><div><script src="/js/main.js?v=1.5.1"></script><script src="/js/utils.js?v=1.5.1"></script><script src="https://cdn.cbd.int/solitude-source/js/universe.min.js"></script><script>dark()
</script><script src="https://cdn.staticfile.org/pjax/0.2.8/pjax.min.js"></script><script src="https://cdn.staticfile.org/vanilla-lazyload/17.8.5/lazyload.iife.min.js"></script><script src="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.js"></script><script src="/js/sco-ai.min.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js"></script><script src="https://cdn.staticfile.org/meting/2.0.1/Meting.min.js"></script><script>const meting_api = 'https://meting.qjqq.cn/?server=:server&type=:type&id=:id&auth=:auth&r=:r';
</script><script src="/js/covercolor/local.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/pace/1.2.4/pace.min.js"></script></div><div id="js-pjax"><script async src="https://cdn.staticfile.org/busuanzi/2.3.0/bsz.pure.mini.min.js"></script><script id="config-diff">var PAGE_CONFIG = {
    is_post: true,
    is_page: false,
    is_home: false,
    page: 'post',
    toc: true,
    comment: false,
}
</script></div><!-- newest comment--><!-- pjax--><script>let pjaxSelectors = [
    'title',
    '#body-wrap',
    '#site-config',
    'meta[name="description"]',
    '#js-pjax',
    'meta[property^="og:"]',
]

const pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
})

document.querySelectorAll('script[data-pjax]').forEach(item => {
    const newScript = document.createElement('script')
    const content = item.text || item.textContent || item.innerHTML || ""
    Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
    newScript.appendChild(document.createTextNode(content))
    item.parentNode.replaceChild(newScript, item)
})

document.addEventListener('pjax:complete', () => {
    window.refreshFn()
})

document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
        pjax.loadUrl('/404.html')
    }
})</script><!-- theme--><script>initTheme = () => {
    const cachedMode = saveToLocal.get('theme');
    if (cachedMode === undefined)
        document.documentElement.setAttribute('data-theme', 'light');
    else
        document.documentElement.setAttribute('data-theme', cachedMode);
}
initTheme()</script><!-- search--><!-- music--><div class="needEndHide" id="nav-music" onclick="sco.musicToggle()"><div id="nav-music-hoverTips">音乐已暂停</div><meting-js id="8407304077" server="netease" type="playlist" mutex="true" preload="none" data-lrctype="0" order="random" theme="var(--sco-main)"></meting-js></div></body></html><script>const posts=["Vue笔记/前端面试题","Vue笔记/面试题","Vue笔记/硅谷甄选项目笔记","Vue笔记/vue第三天","Vue笔记/vue第二天","Vue笔记/Vue第一天","Vue笔记/vue框架笔记","Vue前置基础/5.ES6模块化与Webpack入门","Vue前置基础/1.Vue前置JS功底","Vue前置基础/4.跨域的基本概念","Vue前置基础/3.NPM的使用","Vue前置基础/2.Nodejs基础","Ajax学习笔记/黑马头条数据管理平台","Ajax学习笔记/Promise笔记","Ajax学习笔记/Ajax第四天","Ajax学习笔记/Ajax第三天","Ajax学习笔记/Ajax第二天","Ajax学习笔记/Ajax第一天","WebAPI学习笔记/JS进阶复习","WebAPI学习笔记/JS进阶第四天","WebAPI学习笔记/JS进阶第三天","WebAPI学习笔记/JS进阶第二天","WebAPI学习笔记/JS进阶第一天","WebAPI学习笔记/WebAPIs第七天","WebAPI学习笔记/WebAPIs第六天","WebAPI学习笔记/WebAPIs第五天","WebAPI学习笔记/WebAPIs第四天","WebAPI学习笔记/WebAPIs第三天","WebAPI学习笔记/WebAPIs第二天","WebAPI学习笔记/WebAPIs第一天","WebAPI学习笔记/WebAPIs学习笔记","WebAPI学习笔记/JS-ES6模块化","WebAPI学习笔记/JavaScript进阶","JavaScript学习笔记/JavaScript第五天","JavaScript学习笔记/JavaScript第四天","JavaScript学习笔记/JavaScript第三天","JavaScript学习笔记/JavaScript第二天","JavaScript学习笔记/JavaScript第一天","基础学习路线/移动开发-响应式布局","基础学习路线/移动开发-rem布局","基础学习路线/移动开发-flex布局","基础学习路线/移动开发-流式布局","基础学习路线/CSS3转换问题","基础学习路线/CSS-2D-3D转换","基础学习路线/前端168个单词","基础学习路线/CSS高级技巧","前端技术栈/前端路线","Hexo/图床方案汇总","其他技术栈/Windows软件推荐","Hexo/Butterfly主题配置","Hexo/Qexo","JavaScript/This指向与改变This指向","JavaScript/JS防抖与节流","JavaScript/如何在1分钟内完美解释什么是 JSONP 请求？","前端技术栈/移动端最佳适配解决方案","GitHub/Git常用命令","前端技术栈/来自2.5年前端小白的总结","网站资源/如何买到合适的域名","其他技术栈/CentOS一键安装Docker","网站资源/阿里云资源合集","其他技术栈/15个前端必备学习网站","其他技术栈/CSS3（圆角边框、阴影、浮动详解及示例）","网络协议/浅谈 HTTP 和 HTTPS","学习笔记/CSS属性大全","基础学习路线/CSS第五天-定位","基础学习路线/CSS第四天-浮动","基础学习路线/CSS第三天","基础学习路线/CSS第二天","基础学习路线/CSS第一天","基础学习路线/HTML第二天","基础学习路线/HTML第一天","学习笔记/「学习笔记」JavaScript基础","学习笔记/HTML与CSS进阶","Vue笔记/Vue X-数组对象的双向数据绑定","学习笔记/「学习笔记」CSS基础","学习笔记/「学习笔记」HTML基础","学习笔记/HTML基础","Windows/PE-Win10教程","Windows/Win系统网站-KMS","安卓玩机/Magisk卡刷-通刷官方-了解Fastboot","其他技术栈/前端开发免费资源大汇总","GitHub/Git基础-Github自定义域名","学习笔记/CSS笔记","Vscode/Vscode笔记-24款插件","其他技术栈/免费常用的前端CDN库","其他技术栈/软件及网站推荐","Vscode/记录 Vscode 插件","Hexo/Hexo音乐排行-Netlify CMS","GitHub/玩转GitHub","jQuery/jQuery自动触发事件与bootstrapjQuery插件用法","Hexo/使用Hexo和Github搭建个人博客","Hexo/Hexo博客搭建指南","Hexo/Hexo相关","Markdown/Markdown基础--高级教程","Markdown/Markdown基础教程"];function toRandomPost(){ pjax.loadUrl('/'+posts[Math.floor(Math.random()*posts.length)]); };</script>