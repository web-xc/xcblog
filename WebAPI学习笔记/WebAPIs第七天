<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Web APIs第七天 | XC's Blog</title><noscript>开启JavaScript才能访问本站哦~</noscript><link rel="icon" href="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><!-- index.css--><link rel="stylesheet" href="/css/index.css?v=1.5.1"><!-- inject head--><link rel="stylesheet" href="https://cdn.cbd.int/solitude-source/icon/scoicon.min.css"><link rel="stylesheet" href="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.css"><!-- aplayer--><link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css"><!-- swiper--><!-- Open Graph--><meta name="description" content="Web APIs第七天-正则表达式1. 正则表达式 正则表达式（Regular Expression）是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象 通常用来查找、替换那些符合正则表达式的文本，许多语言都支持正则表达式 正则表达式在 JavaScript中的使用"><!-- pwa--><script>(win => {
        win.saveToLocal = {
            set: function setWithExpiry(key, value, ttl) {
                if (ttl === 0)
                    return
                const now = new Date()
                const expiryDay = ttl * 86400000
                const item = {
                    value: value,
                    expiry: now.getTime() + expiryDay,
                }
                localStorage.setItem(key, JSON.stringify(item))
            },

            get: function getWithExpiry(key) {
                const itemStr = localStorage.getItem(key)

                if (!itemStr) {
                    return undefined
                }
                const item = JSON.parse(itemStr)
                const now = new Date()

                if (now.getTime() > item.expiry) {
                    localStorage.removeItem(key)
                    return undefined
                }
                return item.value
            }
        }

        const DarkModeStatus = localStorage.getItem('theme')
        if (DarkModeStatus !== null) {
            if (DarkModeStatus === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark')
            } else {
                document.documentElement.setAttribute('data-theme', 'light')
            }
        }

        const asideStatus = saveToLocal.get('aside-status')
        if (asideStatus !== undefined) {
            if (asideStatus === 'hide') {
                document.documentElement.classList.add('hide-aside')
            } else {
                document.documentElement.classList.remove('hide-aside')
            }
        }
    }
)(window)

console.log(
    "%c Program: Hexo %c Theme: Hexo-Theme-Solitude %c Version: v1.5.1",
    "border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#ff3842;margin:10px 0",
    "padding: 5px 10px;color:white;background:#3e9f50;",
    "border-radius:0 5px 5px 0;padding: 5px 10px;background:#0084ff;"
);</script><!-- global head--><script>const GLOBAL_CONFIG = {
    root: '/',
    algolia: undefined,
    localsearch: undefined,
    runtime: '2021-04-20 00:00:00',
    lazyload: {
        enable: true,
        error: '/img/error_load.png'
    },
    hightlight: {
        enable: true,
        limit: 200,
        expand: false,
        copy: true,
    },
    randomlinks: false,
    lang: {
        theme: {
            dark: '已切换至深色模式',
            light: '已切换至浅色模式',
        },
        copy: {
            success: '复制成功',
            error: '复制失败',
        },
        backtop: '返回顶部',
        time: {
            recent: '最近',
            yesterday: '昨天',
            berforeyesterday: '前天',
            daybefore: '天前',
            runtime: '天',
        },
        search: {
            empty: '找不到你查询的内容：${query}',
            hit: '找到 ${hits} 条结果，用时 ${time} 毫秒',
            placeholder: '输入关键词快速查找',
        },
        chs: {
            chs_to_cht: '繁體中文',
            cht_to_chs: '简体中文',
        }
    },
    aside: {
        sayhello: {
            morning: '一日之计在于晨',
            noon: '吃饱了才有力气干活',
            afternoon: '集中精力，攻克难关',
            night: '不要太劳累了，早睡更健康',
            goodnight: '睡个好觉，保证精力充沛',
        },
        sayhello2: ["🤖️ 数码科技爱好者","🔍 分享与热心帮助","🏠 智能家居小能手","🔨 设计开发一条龙","🤝 专修交互与设计","🏃 脚踏实地行动派","🧱 团队小组发动机","💢 壮汉人狠话不多","🎮 电竞游戏爱好者"],
    },
    covercolor: {
        enable: true
    },
    comment: {
        enable: false,
        type: '',
        commentBarrage: false,
        randomInfoStart: ["聪敏的","可爱的","美丽的"],
        randomInfoEnd: ["白菜","小可爱","小仙女"],
        twikoo: {
            url: '',
            accessToken: ''
        },
        waline: {
            url: '',
        }
    },
    lightbox: 'null',
    rightside: {
        enable: false
    },
    ai: {
        enable: true,
        key: '',
        talk: '我是王卓Sco开发的摘要生成助理ScoGPT，ScoGPT在静态部署时进行摘要的撰写，并且在访客访问时通过ScoCorrection转译后的文本摘要实现工具。我在这里只负责已经生成的摘要显示，你无法与我直接沟通，但我可以回答一些预设的问题。',
        randomPost: false,
    },
    music: {
        enable: false,
    },
    translate: undefined,
};</script><meta name="generator" content="Hexo 6.3.0"></head><body id="body"><!-- universe--><canvas id="universe"></canvas><!-- loading--><!-- console--><div id="console"><div class="close-btn" onclick="sco.hideConsole()"><i class="scoicon sco-close-fill"></i></div><div class="button-group"><div class="console-btn-item"><a class="darkmode_switchbutton" onclick="sco.switchDarkMode()" title="昼夜切换" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i></a></div><div class="console-btn-item" id="consoleHideAside"><a class="asideSwitch" onclick="sco.switchHideAside()" title="边栏显示控制" href="javascript:void(0);"><i class="scoicon sco-side-bar-fill"></i></a></div><div class="console-btn-item" id="consoleMusic" onclick="sco.musicToggle()"><a class="music-switch" title="音乐开关" href="javascript:void(0);"><i class="scoicon sco-disc-fill"></i></a></div></div><div class="console-mask" onclick="sco.hideConsole()"></div></div><!-- sidebar--><div id="sidebar" style="zoom: 1;"><div id="menu-mask" style="display: none;"></div><div id="sidebar-menus"><span class="sidebar-menu-item-title">功能</span><div class="sidebar-menu-item"><a class="darkmode_switchbutton menu-child" onclick="sco.switchDarkMode()" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i><span>显示模式</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div><span class="sidebar-menu-item-title">标签</span><div class="card-widget card-tags card-archives card-webinfo card-allinfo"><div class="card-tag-cloud"><a href="/tags/Ajax%E7%AC%94%E8%AE%B0/">Ajax笔记<sup>6</sup></a><a href="/tags/Hexo/">Hexo<sup>6</sup></a><a href="/tags/Qexo/">Qexo<sup>1</sup></a><a href="/tags/GitHub/">GitHub<sup>3</sup></a><a href="/tags/JavaScript/">JavaScript<sup>3</sup></a><a href="/tags/Markdown/">Markdown<sup>2</sup></a><a href="/tags/JavaScript%E7%AC%94%E8%AE%B0/">JavaScript笔记<sup>5</sup></a><a href="/tags/Vscode/">Vscode<sup>2</sup></a><a href="/tags/Vue%E5%89%8D%E7%BD%AE%E5%9F%BA%E7%A1%80/">Vue前置基础<sup>5</sup></a><a href="/tags/Vue%E6%A1%86%E6%9E%B6%E7%AC%94%E8%AE%B0/">Vue框架笔记<sup>6</sup></a><a href="/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题<sup>2</sup></a><a href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/">Web APIs笔记<sup>10</sup></a><a href="/tags/JavaScript%E9%AB%98%E7%BA%A7/">JavaScript高级<sup>5</sup></a><a href="/tags/Windows/">Windows<sup>3</sup></a><a href="/tags/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF%E6%A0%88/">其他技术栈<sup>6</sup></a><a href="/tags/jQuery/">jQuery<sup>1</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88/">前端技术栈<sup>3</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CSS/">学习笔记-CSS<sup>9</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-HTML/">学习笔记-HTML<sup>2</sup></a><a href="/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/">移动开发<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%BB%8F%E9%AA%8C/">前端经验<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/">前端笔记<sup>3</sup></a><a href="/tags/%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90/">网站资源<sup>2</sup></a><a href="/tags/%E5%AE%89%E5%8D%93%E7%8E%A9%E6%9C%BA/">安卓玩机<sup>1</sup></a><a href="/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/">网络协议<sup>1</sup></a></div></div></div></div><!-- keyboard--><div class="post" id="body-wrap"><header class="post-bg" id="page-header"><nav class="show" id="nav"><div id="nav-group"><div id="blog_name"><a id="site-name" href="/" title="返回博客主页"><span class="title">XC's Blog</span></a></div><div id="page-name-mask"><div id="page-name"><a id="page-name-text" onclick="sco.toTop()">Web APIs第七天</a></div></div><div id="menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div></div><div id="nav-left"></div><div id="nav-right"><div class="nav-button" id="randomPost_button"><a class="site-page" onclick="toRandomPost()" title="随机一篇文章" href="javascript:void(0);"><i class="scoicon sco-signal-tower-fill"></i></a></div><div class="nav-button" id="nav-console"><a class="console_switchbutton" onclick="sco.showConsole()" title="中控台" href="javascript:void(0);"><i class="scoicon sco-dashboard-fill"></i></a></div><div class="nav-button" id="nav-totop" onclick="sco.toTop()"><a class="totopbtn"><i class="scoicon sco-arrow-up-line"></i><span id="percent">0</span></a></div><div id="toggle-menu"><a class="site-page"><i class="scoicon sco-menu-line"></i></a></div></div></div></nav><div class="coverdiv" id="coverdiv"><img class="nolazyload" id="post-cover" src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="Web APIs第七天"></div><div id="post-info"><div id="post-firstinfo"><div class="meta-firstline"><a class="post-meta-original" title="该文章为原创文章，注意版权协议">原创</a><span class="post-meta-categories"><a class="post-meta-categories" href="/categories/Web-APIs笔记/">Web APIs笔记</a></span><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-name tags-punctuation">Web APIs笔记</span></a></div></div></div></div><h1 class="post-title">Web APIs第七天</h1><div id="post-meta"><div class="meta-secondline"></div></div></div><section class="main-hero-waves-area waves-area"><svg class="waves-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z"></path></defs><g class="parallax"><use href="#gentle-wave" x="48" y="0"></use><use href="#gentle-wave" x="48" y="3"></use><use href="#gentle-wave" x="48" y="5"></use><use href="#gentle-wave" x="48" y="7"></use></g></svg></section></header><main class="layout" id="content-inner"><div id="post"><div class="post-ai"><div class="ai-title"><div class="ai-title-left"><i class="ai-title-icon scoicon sco-robot-fill"></i><div class="ai-title-text">文章摘要</div></div><div class="ai-tag" id="ai-tag">GPT 4</div></div><div class="ai-explanation" style="display: block;"></div><div class="ai-suggestions"></div><div class="ai-bottom"><div class="ai-tips">此内容根据文章生成，并经过人工审核，仅用于文章内容的解释与总结</div><a class="ai-report" title="投诉" target="_blank" rel="noopener" href="https://blog.wzsco.top/about/">投诉</a></div></div><article class="post-content" id="article-container"><h3 id="Web-APIs第七天-正则表达式"><a href="#Web-APIs第七天-正则表达式" class="headerlink" title="Web APIs第七天-正则表达式"></a>Web APIs第七天-正则表达式</h3><h2 id="1-正则表达式"><a href="#1-正则表达式" class="headerlink" title="1. 正则表达式"></a>1. 正则表达式</h2><ol>
<li>正则表达式（Regular Expression）是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象</li>
<li>通常用来查找、替换那些符合正则表达式的文本，许多语言都支持正则表达式</li>
</ol>
<blockquote>
<p>正则表达式在 JavaScript中的使用场景：</p>
</blockquote>
<ol>
<li>例如验证表单：用户名表单只能输入英文字母、数字或者下划线， 昵称输入框中可以输入中文(匹配)</li>
<li>比如用户名: /^[a-z0-9_-]{3,16}$/</li>
<li>过滤掉页面内容中的一些敏感词(替换)，或从字符串中获取我们想要的特定部分(提取)等 </li>
<li>正则表达式是用于匹配字符串中字符组合的模式</li>
<li>.正则表达式作用: 表单验证(匹配),、过滤敏感词(替换)、字符串中提取我们想要的部分(提取)</li>
</ol>
<h2 id="2-定义正则表达式语法"><a href="#2-定义正则表达式语法" class="headerlink" title="2. 定义正则表达式语法:"></a>2. 定义正则表达式语法:</h2><ol>
<li>定义规则</li>
<li>查找</li>
</ol>
<blockquote>
<p>JavaScript 中定义正则表达式的语法有两种，我们先学习其中比较简单的方法：</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">其中 / /是正则表达式字面量</span><br><span class="line"><span class="comment">// 1. 定义规则/正则表达式 存的是对象</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/前端/</span></span><br></pre></td></tr></table></figure>

<h2 id="3-判断是否有符合规则的字符串"><a href="#3-判断是否有符合规则的字符串" class="headerlink" title="3. 判断是否有符合规则的字符串"></a>3. 判断是否有符合规则的字符串</h2><h3 id="1-test-方法-用来查看正则表达式与指定的字符串是否匹配"><a href="#1-test-方法-用来查看正则表达式与指定的字符串是否匹配" class="headerlink" title="1. test() 方法 用来查看正则表达式与指定的字符串是否匹配"></a>1. test() 方法 用来查看正则表达式与指定的字符串是否匹配</h3><ol>
<li>定义正则表达式, 检测查找是否匹配</li>
<li>如果正则表达式与指定的字符串匹配 ，返回true，否则false</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查找 检测是否匹配 返回true/false 重点</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="string">&#x27;努力学前端&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(num1))</span><br></pre></td></tr></table></figure>

<h3 id="2-检索（查找）符合规则的字符串："><a href="#2-检索（查找）符合规则的字符串：" class="headerlink" title="2. 检索（查找）符合规则的字符串："></a>2. 检索（查找）符合规则的字符串：</h3><ol>
<li>exec() 方法 在一个指定字符串中执行一个搜索匹配</li>
<li>如果匹配成功，exec() 方法返回一个数组，否则返回null</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检索/查找 符合规则的字符串 返回的数组</span></span><br><span class="line"><span class="keyword">let</span> num2 = reg.<span class="title function_">exec</span>(num1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num2)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>正则表达式检测查找 test方法和exec方法的区别</p>
</blockquote>
<ol>
<li>test方法 用于判断是否有符合规则的字符串，返回的是布尔值 找到返回 true，否则false</li>
<li>exec方法用于检索（查找）符合规则的字符串，找到返回数组，否则为 null</li>
</ol>
<h2 id="4-元字符"><a href="#4-元字符" class="headerlink" title="4. 元字符"></a>4. 元字符</h2><ol>
<li>是一些具有特殊含义的字符，可以极大提高了灵活性和强大的匹配功能, 比如，规定用户只能输入英文26个英文字母，普通字符的话 abcdefghijklm….., 但是换成元字符写法： [a-z] </li>
<li>MDN文档: <a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></li>
<li>正则测试工具: <a target="_blank" rel="noopener" href="http://tool.oschina.net/regex">http://tool.oschina.net/regex</a></li>
</ol>
<h3 id="1-边界符"><a href="#1-边界符" class="headerlink" title="1. 边界符"></a>1. 边界符</h3><ol>
<li><p>正则表达式中的边界符（位置符）用来提示字符所处的位置，主要有两个字符</p>
</li>
<li><p>如果 ^ 和 $ 在一起，表示必须是精确匹配</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>边界符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>匹配行首的文本**(以谁开始)**</td>
</tr>
<tr>
<td>$</td>
<td>匹配行尾的文本**(以谁结束)**</td>
</tr>
</tbody></table>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. ^开头</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈哈/</span>.<span class="title function_">test</span>(<span class="string">&#x27;都哈哈&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈哈/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈大笑&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="comment">// 2. $ 结尾 精确匹配</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈哈$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈你们&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^哈哈$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;哈哈&#x27;</span>)) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="2-量词"><a href="#2-量词" class="headerlink" title="2. 量词"></a>2. 量词</h3><ol>
<li>量词用来 设定某个模式出现的次数</li>
<li>注意： 逗号左右两侧千万不要出现空格</li>
</ol>
<table>
<thead>
<tr>
<th align="left">量词</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">*</td>
<td align="left">重复0次到N次 n &gt;= 0</td>
</tr>
<tr>
<td align="left">+</td>
<td align="left">只重复1次到N次 n &gt;= 1</td>
</tr>
<tr>
<td align="left">?</td>
<td align="left">只重复0次或1次</td>
</tr>
<tr>
<td align="left">{n}</td>
<td align="left">只能出现n次</td>
</tr>
<tr>
<td align="left">{n,}</td>
<td align="left">出现n次或更多次 &gt;= n</td>
</tr>
<tr>
<td align="left">{n,m}</td>
<td align="left">大于N次 小于M次 &gt;= n &lt;= m 注意不能空格</td>
</tr>
</tbody></table>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. * 重复0次到N次 n &gt;= 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a*/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a*/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a*/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a*/</span>.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"><span class="comment">// 2. + 只重复1次到N次 n &gt;= 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a+/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a+/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a+/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a+/</span>.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"><span class="comment">// 3. ? 只重复0次或1次</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a?$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="comment">// 4. &#123;3&#125; 只能出现n次</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaa&#x27;</span>))</span><br><span class="line"><span class="comment">// 5. &#123;3, &#125; 出现n次或更多次 &gt;= n</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaa&#x27;</span>))</span><br><span class="line"><span class="comment">// 6. &#123;3,6&#125; 大于N次 小于M次 &gt;= n &lt;= m 注意不能空格</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,6&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,6&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,6&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaa&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^a&#123;3,6&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aaaaaaa&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h3 id="3-字符类"><a href="#3-字符类" class="headerlink" title="3.字符类"></a>3.字符类</h3><ol>
<li><input disabled="" type="checkbox"> 匹配字符集合, 后面的字符串只要包含 abc 中任意一个字符，都返回 true</li>
<li> [ ] 里面加上 - 连字符, 使用连字符 - 表示一个范围</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 只要包含abc任意一个 都是true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[abc]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[abc]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;ab&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[abc]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;admin&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[abc]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;csy&#x27;</span>))</span><br><span class="line"><span class="comment">// 2. 连字符 只能选取一个</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[abc]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[abc]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[abc]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[abc]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[abc]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;aa&#x27;</span>))</span><br><span class="line"><span class="comment">// 3. 26个字母选取任意一个</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;d&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;f&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;F&#x27;</span>))</span><br><span class="line"><span class="comment">// 4. 26个字符 包含大小写</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;D&#x27;</span>))</span><br><span class="line"><span class="comment">// 5. 26个字母 包含大小写和数字</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z0-9]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;8&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z0-9]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;9&#x27;</span>))</span><br><span class="line"><span class="comment">// 6. 只能字母数字下划线</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[a-zA-Z0-9-_]$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>))</span><br><span class="line"><span class="comment">// 7. &#123;4,&#125; 只对前面一个生效</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^[1-9][0-9]&#123;4,&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&#x27;10000&#x27;</span>))</span><br><span class="line"><span class="comment">// 8. [^] 取反符号 除了小写字母以外的字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[^a-z]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[^a-z]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line"><span class="comment">// 9. . 匹配换行符之外 任何单个字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/[.a]/</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="comment">// 10. 日期格式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/</span>.<span class="title function_">test</span>(<span class="string">&#x27;20230102&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h3 id="4-用户名验证案例"><a href="#4-用户名验证案例" class="headerlink" title="4. 用户名验证案例"></a>4. 用户名验证案例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户名要求用户英文字母,数字,下划线或者短横线组成，并且用户名长度为 6~16位</span></span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="keyword">let</span> n1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> n2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>)</span><br><span class="line">n1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;blur&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^[a-zA-Z0-9]&#123;6,16&#125;$/</span>.<span class="title function_">test</span>(n1.<span class="property">value</span>)) &#123;</span><br><span class="line">        n2.<span class="property">className</span> = <span class="string">&#x27;right&#x27;</span></span><br><span class="line">        n2.<span class="property">innerHTML</span> = <span class="string">`输入正确`</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        n2.<span class="property">className</span> = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">        n2.<span class="property">innerHTML</span> = <span class="string">&#x27;请输入6~16的字符&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="5-字符类预定类"><a href="#5-字符类预定类" class="headerlink" title="5. 字符类预定类:"></a>5. 字符类预定类:</h3><p> 预定义: 指的是某些常见模式的简写方式</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 日期格式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/</span>.<span class="title function_">test</span>(<span class="string">&#x27;20230102&#x27;</span>))</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">预定类</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\d</td>
<td align="left">匹配0~9之间的任一数字, 相当于[0-9]</td>
</tr>
<tr>
<td align="left">\D</td>
<td align="left">匹配所有0~9以外的字符, 相当于 ^0-9]</td>
</tr>
<tr>
<td align="left">\w</td>
<td align="left">匹配任意的字母、数字和下划线, 相当于[a-zA-Z0-9-__]</td>
</tr>
<tr>
<td align="left">\W</td>
<td align="left">除所有字母、数字下划线以外的字符, 相当于 ^a-zA-Z0-9-__]</td>
</tr>
<tr>
<td align="left">\s</td>
<td align="left">匹配空格(换行符、制表符、空格符等), 相当于[\t\r\n\v\f]</td>
</tr>
<tr>
<td align="left">\S</td>
<td align="left">匹配非空格(的字符, 相当于 ^\t\r\n\v\f]</td>
</tr>
</tbody></table>
<h3 id="6-修饰符"><a href="#6-修饰符" class="headerlink" title="6. 修饰符"></a>6. 修饰符</h3><ol>
<li>修饰符约束正则执行的某些细节行为，如是否区分大小写、是否支持多行匹配等</li>
<li>i 是单词 ignore 的缩写，正则匹配时字母不区分大小写</li>
<li>g 是单词 global 的缩写，匹配所有满足正则表达式的结果</li>
<li>replace 敏感词替换 搭配 g 使用 </li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. i 不区分大小写</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a/i</span>.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/a/i</span>.<span class="title function_">test</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. g 选出所有满足表达式的结果</span></span><br><span class="line"><span class="comment">// 3. replace 敏感词替换 搭配 g 使用  </span></span><br><span class="line">&lt;textarea name=<span class="string">&quot;&quot;</span> cols=<span class="string">&quot;30&quot;</span> rows=<span class="string">&quot;10&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">let n1 = document.querySelector(&#x27;textarea&#x27;)</span></span><br><span class="line"><span class="language-xml">let n2 = document.querySelector(&#x27;button&#x27;)</span></span><br><span class="line"><span class="language-xml">let n3 = document.querySelector(&#x27;div&#x27;)</span></span><br><span class="line"><span class="language-xml">n2.addEventListener(&#x27;click&#x27;, function () &#123;</span></span><br><span class="line"><span class="language-xml">    // n3.innerHTML = n1.value</span></span><br><span class="line"><span class="language-xml">    // replace 敏感词替换 搭配 g全局替换 使用 </span></span><br><span class="line"><span class="language-xml">    n3.innerHTML = n1.value.replace(/你好|你哈/g, (&#x27;**&#x27;))</span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br></pre></td></tr></table></figure>

<h2 id="5-综合案例"><a href="#5-综合案例" class="headerlink" title="5. 综合案例"></a>5. 综合案例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. change 事件 当表单发生变化时触发 和blur不一样</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. input 事件 输入就触发</span></span><br><span class="line"><span class="comment">// 3. change 事件 离开表单才触发 并且值得有变化</span></span><br><span class="line">num1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 发送验证码 用户点5秒后重新获取验证码 立即执行函数</span></span><br><span class="line">  (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> btnMsg = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.code&#x27;</span>)</span><br><span class="line">    btnMsg.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> num1 = <span class="number">5</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;05秒后重新获取&#x27;</span></span><br><span class="line">      <span class="keyword">let</span> time = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          num1--</span><br><span class="line">        btnMsg.<span class="property">innerHTML</span> = <span class="string">`0<span class="subst">$&#123;num1&#125;</span>秒后重新获取`</span></span><br><span class="line">        <span class="keyword">if</span> (num1 == <span class="number">0</span>) &#123;</span><br><span class="line">            btnMsg.<span class="property">innerHTML</span> = <span class="string">&#x27;发送验证码&#x27;</span></span><br><span class="line">          <span class="built_in">clearInterval</span>(time)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="comment">// 2. 用户名验证 </span></span><br><span class="line">    <span class="keyword">let</span> user = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=username]&#x27;</span>)</span><br><span class="line">    user.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, verify)</span><br><span class="line">    <span class="comment">// *鼠标离开 下一步都需要表单验证 所以封装成函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">verify</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> reg = <span class="regexp">/^[a-zA-Z0-9-_]&#123;6,16&#125;$/</span></span><br><span class="line">      <span class="keyword">let</span> span = user.<span class="property">nextElementSibling</span></span><br><span class="line">      <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(user.<span class="property">value</span>)) &#123;</span><br><span class="line">          span.<span class="property">innerHTML</span> = <span class="string">&#x27;请输入6~16的字符&#x27;</span></span><br><span class="line">        <span class="comment">// *如果是false 则返回false/true 为下一步按钮做判断</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">      span.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3. 手机号验证</span></span><br><span class="line">    <span class="keyword">let</span> phone = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=phone]&#x27;</span>)</span><br><span class="line">    phone.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, verifyphone)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">verifyphone</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// *11位手机号验证 正则表达式</span></span><br><span class="line">        <span class="keyword">let</span> reg = <span class="regexp">/^1(3\d|4[5-9]|5[0-35-9]|6[567]|7[0-8]|8\d|9[0-35-9])\d&#123;8&#125;$/</span></span><br><span class="line">      <span class="keyword">let</span> span = phone.<span class="property">nextElementSibling</span></span><br><span class="line">      <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(phone.<span class="property">value</span>)) &#123;</span><br><span class="line">          span.<span class="property">innerHTML</span> = <span class="string">&#x27;请输入11位的手机号&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">      span.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 4. 验证码验证</span></span><br><span class="line">    <span class="keyword">let</span> code = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=code]&#x27;</span>)</span><br><span class="line">    code.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, verifycode)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">verifycode</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// *6位数验证码验证 正则表达式</span></span><br><span class="line">        <span class="keyword">let</span> reg = <span class="regexp">/^\d&#123;6&#125;$/</span></span><br><span class="line">      <span class="keyword">let</span> span = code.<span class="property">nextElementSibling</span></span><br><span class="line">      <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(code.<span class="property">value</span>)) &#123;</span><br><span class="line">          span.<span class="property">innerHTML</span> = <span class="string">&#x27;请输入6位数的验证码&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">      span.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 5. 密码验证</span></span><br><span class="line">    <span class="keyword">let</span> password = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=password]&#x27;</span>)</span><br><span class="line">    password.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, verifypassword)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">verifypassword</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// *6~20位密码验证 正则表达式</span></span><br><span class="line">        <span class="keyword">let</span> reg = <span class="regexp">/^[a-zA-Z0-9-_]&#123;6,20&#125;$/</span></span><br><span class="line">      <span class="keyword">let</span> span = password.<span class="property">nextElementSibling</span></span><br><span class="line">      <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(password.<span class="property">value</span>)) &#123;</span><br><span class="line">          span.<span class="property">innerHTML</span> = <span class="string">&#x27;请输入6~20位密码&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">      span.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 6. 再次密码验证</span></span><br><span class="line">    <span class="keyword">let</span> pass = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=confirm]&#x27;</span>)</span><br><span class="line">    pass.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, verifypass)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">verifypass</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> span = pass.<span class="property">nextElementSibling</span></span><br><span class="line">        <span class="keyword">if</span> (pass.<span class="property">value</span> !== password.<span class="property">value</span>) &#123;</span><br><span class="line">          span.<span class="property">innerHTML</span> = <span class="string">&#x27;两次密码不一致&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">      span.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 7. 同意按钮样式切换 queren2选中样式</span></span><br><span class="line">    <span class="keyword">let</span> btnIocn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.icon-queren&#x27;</span>)</span><br><span class="line">    btnIocn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;icon-queren2&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 8. 提交按钮模块</span></span><br><span class="line">    <span class="keyword">let</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>)</span><br><span class="line">    form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="comment">// *如果 返回的false就不执行了 所以使用 !false就是 true</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_">verify</span>()) &#123;</span><br><span class="line">          <span class="comment">// *preventDefault 阻止默认行为</span></span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_">verifyphone</span>()) &#123;</span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_">verifycode</span>()) &#123;</span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_">verifypassword</span>()) &#123;</span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_">verifypass</span>()) &#123;</span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="comment">// 9. 勾选模块</span></span><br><span class="line">        <span class="comment">// *contains 看有没有包含类 有就true 没有就false</span></span><br><span class="line">        <span class="keyword">if</span> (!btnIocn.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;icon-queren2&#x27;</span>)) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;请勾选同意协议&#x27;</span>)</span><br><span class="line">          e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;())</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 登录复选框按钮 为false弹窗提示框 </span></span><br><span class="line"><span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.dl&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> check = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.remember&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=username]&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> password = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=password]&#x27;</span>)</span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// *阻止默认行为</span></span><br><span class="line">  e.<span class="title function_">preventDefault</span>()</span><br><span class="line">  <span class="keyword">if</span> (!check.<span class="property">checked</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;请勾选协议&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 2. 为true则记住用户名密码 存储到本地</span></span><br><span class="line">  <span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">username</span>: username.<span class="property">value</span>,</span><br><span class="line">    <span class="attr">password</span>: password.<span class="property">value</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;name&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj))</span><br><span class="line">  <span class="comment">// *跳转到主页</span></span><br><span class="line">  location.<span class="property">href</span> = <span class="string">&#x27;./index.html&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 3. 为true则记住用户名密码 存储到本地</span></span><br><span class="line"><span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> (obj) &#123;</span><br><span class="line">  username.<span class="property">value</span> = obj.<span class="property">username</span></span><br><span class="line">  password.<span class="property">value</span> = obj.<span class="property">password</span></span><br><span class="line">  check.<span class="property">checked</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 如果本地存储有数据 则显示 你好xxx</span></span><br><span class="line"><span class="comment">// 否则 则显示 请先注册登录</span></span><br><span class="line"><span class="keyword">let</span> li = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.xtx_navs li:first-child a&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> (obj) &#123;</span><br><span class="line">  li.<span class="property">innerHTML</span> = <span class="string">`你好 <span class="subst">$&#123;obj.username&#125;</span>, 欢迎来到小兔鲜儿购物`</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  li.<span class="property">innerHTML</span> = <span class="string">&#x27;请先注册登录&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="本节单词"><a href="#本节单词" class="headerlink" title="本节单词:"></a>本节单词:</h4><ol>
<li>reg</li>
<li>test</li>
<li>exec</li>
<li>replace</li>
<li>change</li>
</ol>
</article><div class="post-copyright"><div class="post-copyright__author_group"><a class="post-copyright__author_img" href="/about/"><img class="post-copyright__author_img_front" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"></a><div class="post-copyright__author_name">XC's Blog</div><div class="post-copyright__author_desc"></div></div><div class="post-tools" id="post-tools"><div class="post-tools-left"><div id="quit-box" onclick="RemoveRewardMask()"></div></div></div><div class="post-copyright__notice"><span class="post-copyright-info">本文是原创文章，采用<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0</a>协议，完整转载请注明来自<a href="/">XC's Blog</a></span></div></div><div class="post-tools-right"><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-punctuation"></span>Web APIs笔记<span class="tagsPageCount">10</span></a></div></div></div><nav class="needEndHide pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JS%E8%BF%9B%E9%98%B6%E7%AC%AC%E4%B8%80%E5%A4%A9"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">JS进阶第一天</div></div></a></div><div class="next-post pull-right"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">Web APIs第六天</div></div></a></div></nav><div class="relatedPosts"><div class="headline"><i class="scoicon sco-star-smile-fill"></i><span>喜欢这篇的人也看了</span><div class="relatedPosts-link"><a onclick="event.preventDefault(); toRandomPost();" href="javascript:void(0);" rel="external nofollow" data-pjax-state="">随便逛逛</a></div></div><div class="relatedPosts-list"><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9" title="Web APIs第六天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第六天</div></div></a></div><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%BA%94%E5%A4%A9" title="Web APIs第五天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第五天</div></div></a></div></div></div></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="card-content"><div class="card-info-avatar is-center"><div class="author-info__top-group"><div class="author-info__sayhi" id="author-info__sayhi" onclick="sco.changeSayHelloText()">sayhello.morning</div></div></div><div class="avatar-img-group"><img class="avatar-img" alt="头像" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><div class="avatar-sticker"><img class="avatar-sticker-img" data-lazy-src="https://bu.dusays.com/2023/12/30/659011053e246.png" alt="心情贴纸"></div></div><div class="author-info__description_group"><div class="author-info__description">分享自己对编程的<b>热爱</b>，对美好生活的<b>向往</b>，对知识海洋<b>探索历程</b>。</div><div class="author-info__description2">相信你可以在这里找到对你有用的知识和教程。</div></div><div class="author-info__bottom-group"><a class="author-info__bottom-group-left" href="/about/"><div class="author-info__name">XC's Blog</div><div class="author-info__desc"></div></a><div class="card-info-social-icons is-center"></div></div></div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="scoicon sco-menu-line"></i><span>文章目录</span></div><div class="toc-content" id="toc-content"><ol class="toc"><li class="toc-item toc-level-3"><a class="toc-link" href="#Web-APIs%E7%AC%AC%E4%B8%83%E5%A4%A9-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F"><span class="toc-text">Web APIs第七天-正则表达式</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#1-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F"><span class="toc-text">1. 正则表达式</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#2-%E5%AE%9A%E4%B9%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95"><span class="toc-text">2. 定义正则表达式语法:</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#3-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%9C%89%E7%AC%A6%E5%90%88%E8%A7%84%E5%88%99%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2"><span class="toc-text">3. 判断是否有符合规则的字符串</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-test-%E6%96%B9%E6%B3%95-%E7%94%A8%E6%9D%A5%E6%9F%A5%E7%9C%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E6%8C%87%E5%AE%9A%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8C%B9%E9%85%8D"><span class="toc-text">1. test() 方法 用来查看正则表达式与指定的字符串是否匹配</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E6%A3%80%E7%B4%A2%EF%BC%88%E6%9F%A5%E6%89%BE%EF%BC%89%E7%AC%A6%E5%90%88%E8%A7%84%E5%88%99%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%9A"><span class="toc-text">2. 检索（查找）符合规则的字符串：</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#4-%E5%85%83%E5%AD%97%E7%AC%A6"><span class="toc-text">4. 元字符</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E8%BE%B9%E7%95%8C%E7%AC%A6"><span class="toc-text">1. 边界符</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E9%87%8F%E8%AF%8D"><span class="toc-text">2. 量词</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-%E5%AD%97%E7%AC%A6%E7%B1%BB"><span class="toc-text">3.字符类</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#4-%E7%94%A8%E6%88%B7%E5%90%8D%E9%AA%8C%E8%AF%81%E6%A1%88%E4%BE%8B"><span class="toc-text">4. 用户名验证案例</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#5-%E5%AD%97%E7%AC%A6%E7%B1%BB%E9%A2%84%E5%AE%9A%E7%B1%BB"><span class="toc-text">5. 字符类预定类:</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#6-%E4%BF%AE%E9%A5%B0%E7%AC%A6"><span class="toc-text">6. 修饰符</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#5-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B"><span class="toc-text">5. 综合案例</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E8%8A%82%E5%8D%95%E8%AF%8D"><span class="toc-text">本节单词:</span></a></li></ol></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="scoicon sco-map-line"></i><span>最近发布</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题"><img alt="整个前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题">整个前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题"><img alt="常见前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题">常见前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台"><img alt="硅谷甄选运营平台" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台">硅谷甄选运营平台</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天"><img alt="Vue第三天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天">Vue第三天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天"><img alt="Vue第二天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天">Vue第二天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9">Vue框架笔记</a></div></div></div></div></div></div></main><footer id="footer"><div id="sco-footer-bar"><div class="footer-logo"><span class="scoicon">XC's Blog</span></div><div class="footer-bar-description">来自XC's Blog - 的文章</div><a class="footer-bar-link" href="/">了解更多</a></div><div id="footer_deal"><div class="footer_mini_logo" id="footer_mini_logo" title="返回顶部" onclick="sco.toTop()"><img data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg" alt="返回顶部"></div></div><div id="sco-footer"></div><div id="footer-bar"><div class="footer-bar-links"><div class="footer-bar-left"><div class="copyright">© 2021 - 2024 By&nbsp;<a class="footer-bar-link" href="/">XC's Blog</a></div></div><div class="footer-bar-right"><a class="footer-bar-link" target="_blank" rel="noopener" href="https://github.com/wleelw/hexo-theme-solitude" title="主题">主题</a><a class="footer-bar-link cc"><i class="scoicon sco-copyright-line"></i><i class="scoicon sco-creative-commons-by-line"></i><i class="scoicon sco-creative-commons-nc-line"></i><i class="scoicon sco-creative-commons-nd-line"></i></a></div></div></div></footer></div><!-- inject body--><div><script src="/js/main.js?v=1.5.1"></script><script src="/js/utils.js?v=1.5.1"></script><script src="https://cdn.cbd.int/solitude-source/js/universe.min.js"></script><script>dark()
</script><script src="https://cdn.staticfile.org/pjax/0.2.8/pjax.min.js"></script><script src="https://cdn.staticfile.org/vanilla-lazyload/17.8.5/lazyload.iife.min.js"></script><script src="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.js"></script><script src="/js/sco-ai.min.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js"></script><script src="https://cdn.staticfile.org/meting/2.0.1/Meting.min.js"></script><script>const meting_api = 'https://meting.qjqq.cn/?server=:server&type=:type&id=:id&auth=:auth&r=:r';
</script><script src="/js/covercolor/local.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/pace/1.2.4/pace.min.js"></script></div><div id="js-pjax"><script async src="https://cdn.staticfile.org/busuanzi/2.3.0/bsz.pure.mini.min.js"></script><script id="config-diff">var PAGE_CONFIG = {
    is_post: true,
    is_page: false,
    is_home: false,
    page: 'post',
    toc: true,
    comment: false,
}
</script></div><!-- newest comment--><!-- pjax--><script>let pjaxSelectors = [
    'title',
    '#body-wrap',
    '#site-config',
    'meta[name="description"]',
    '#js-pjax',
    'meta[property^="og:"]',
]

const pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
})

document.querySelectorAll('script[data-pjax]').forEach(item => {
    const newScript = document.createElement('script')
    const content = item.text || item.textContent || item.innerHTML || ""
    Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
    newScript.appendChild(document.createTextNode(content))
    item.parentNode.replaceChild(newScript, item)
})

document.addEventListener('pjax:complete', () => {
    window.refreshFn()
})

document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
        pjax.loadUrl('/404.html')
    }
})</script><!-- theme--><script>initTheme = () => {
    const cachedMode = saveToLocal.get('theme');
    if (cachedMode === undefined)
        document.documentElement.setAttribute('data-theme', 'light');
    else
        document.documentElement.setAttribute('data-theme', cachedMode);
}
initTheme()</script><!-- search--><!-- music--><div class="needEndHide" id="nav-music" onclick="sco.musicToggle()"><div id="nav-music-hoverTips">音乐已暂停</div><meting-js id="8407304077" server="netease" type="playlist" mutex="true" preload="none" data-lrctype="0" order="random" theme="var(--sco-main)"></meting-js></div></body></html><script>const posts=["Vue笔记/前端面试题","Vue笔记/面试题","Vue笔记/硅谷甄选项目笔记","Vue笔记/vue第三天","Vue笔记/vue第二天","Vue笔记/Vue第一天","Vue笔记/vue框架笔记","Vue前置基础/5.ES6模块化与Webpack入门","Vue前置基础/1.Vue前置JS功底","Vue前置基础/4.跨域的基本概念","Vue前置基础/3.NPM的使用","Vue前置基础/2.Nodejs基础","Ajax学习笔记/黑马头条数据管理平台","Ajax学习笔记/Promise笔记","Ajax学习笔记/Ajax第四天","Ajax学习笔记/Ajax第三天","Ajax学习笔记/Ajax第二天","Ajax学习笔记/Ajax第一天","WebAPI学习笔记/JS进阶复习","WebAPI学习笔记/JS进阶第四天","WebAPI学习笔记/JS进阶第三天","WebAPI学习笔记/JS进阶第二天","WebAPI学习笔记/JS进阶第一天","WebAPI学习笔记/WebAPIs第七天","WebAPI学习笔记/WebAPIs第六天","WebAPI学习笔记/WebAPIs第五天","WebAPI学习笔记/WebAPIs第四天","WebAPI学习笔记/WebAPIs第三天","WebAPI学习笔记/WebAPIs第二天","WebAPI学习笔记/WebAPIs第一天","WebAPI学习笔记/WebAPIs学习笔记","WebAPI学习笔记/JS-ES6模块化","WebAPI学习笔记/JavaScript进阶","JavaScript学习笔记/JavaScript第五天","JavaScript学习笔记/JavaScript第四天","JavaScript学习笔记/JavaScript第三天","JavaScript学习笔记/JavaScript第二天","JavaScript学习笔记/JavaScript第一天","基础学习路线/移动开发-响应式布局","基础学习路线/移动开发-rem布局","基础学习路线/移动开发-flex布局","基础学习路线/移动开发-流式布局","基础学习路线/CSS3转换问题","基础学习路线/CSS-2D-3D转换","基础学习路线/前端168个单词","基础学习路线/CSS高级技巧","前端技术栈/前端路线","Hexo/图床方案汇总","其他技术栈/Windows软件推荐","Hexo/Butterfly主题配置","Hexo/Qexo","JavaScript/This指向与改变This指向","JavaScript/JS防抖与节流","JavaScript/如何在1分钟内完美解释什么是 JSONP 请求？","前端技术栈/移动端最佳适配解决方案","GitHub/Git常用命令","前端技术栈/来自2.5年前端小白的总结","网站资源/如何买到合适的域名","其他技术栈/CentOS一键安装Docker","网站资源/阿里云资源合集","其他技术栈/15个前端必备学习网站","其他技术栈/CSS3（圆角边框、阴影、浮动详解及示例）","网络协议/浅谈 HTTP 和 HTTPS","学习笔记/CSS属性大全","基础学习路线/CSS第五天-定位","基础学习路线/CSS第四天-浮动","基础学习路线/CSS第三天","基础学习路线/CSS第二天","基础学习路线/CSS第一天","基础学习路线/HTML第二天","基础学习路线/HTML第一天","学习笔记/「学习笔记」JavaScript基础","学习笔记/HTML与CSS进阶","Vue笔记/Vue X-数组对象的双向数据绑定","学习笔记/「学习笔记」CSS基础","学习笔记/「学习笔记」HTML基础","学习笔记/HTML基础","Windows/PE-Win10教程","Windows/Win系统网站-KMS","安卓玩机/Magisk卡刷-通刷官方-了解Fastboot","其他技术栈/前端开发免费资源大汇总","GitHub/Git基础-Github自定义域名","学习笔记/CSS笔记","Vscode/Vscode笔记-24款插件","其他技术栈/免费常用的前端CDN库","其他技术栈/软件及网站推荐","Vscode/记录 Vscode 插件","Hexo/Hexo音乐排行-Netlify CMS","GitHub/玩转GitHub","jQuery/jQuery自动触发事件与bootstrapjQuery插件用法","Hexo/使用Hexo和Github搭建个人博客","Hexo/Hexo博客搭建指南","Hexo/Hexo相关","Markdown/Markdown基础--高级教程","Markdown/Markdown基础教程"];function toRandomPost(){ pjax.loadUrl('/'+posts[Math.floor(Math.random()*posts.length)]); };</script>