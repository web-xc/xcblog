<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Web APIs第五天 | XC's Blog</title><noscript>开启JavaScript才能访问本站哦~</noscript><link rel="icon" href="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><!-- index.css--><link rel="stylesheet" href="/css/index.css?v=1.5.1"><!-- inject head--><link rel="stylesheet" href="https://cdn.cbd.int/solitude-source/icon/scoicon.min.css"><link rel="stylesheet" href="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.css"><!-- aplayer--><link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css"><!-- swiper--><!-- Open Graph--><meta name="description" content="DOM- 网页特效1. 滚动事件和加载事件1. 滚动事件scroll 当页面进行滚动时触发的事件 很多网页需要检测用户把页面滚动到某个区域后做一些处理， 比如固定导航栏，比如返回顶部 监听整个页面滚动给 window 或 document 加 监听某个元素的内部滚动直接给某个元素加即可 1"><!-- pwa--><script>(win => {
        win.saveToLocal = {
            set: function setWithExpiry(key, value, ttl) {
                if (ttl === 0)
                    return
                const now = new Date()
                const expiryDay = ttl * 86400000
                const item = {
                    value: value,
                    expiry: now.getTime() + expiryDay,
                }
                localStorage.setItem(key, JSON.stringify(item))
            },

            get: function getWithExpiry(key) {
                const itemStr = localStorage.getItem(key)

                if (!itemStr) {
                    return undefined
                }
                const item = JSON.parse(itemStr)
                const now = new Date()

                if (now.getTime() > item.expiry) {
                    localStorage.removeItem(key)
                    return undefined
                }
                return item.value
            }
        }

        const DarkModeStatus = localStorage.getItem('theme')
        if (DarkModeStatus !== null) {
            if (DarkModeStatus === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark')
            } else {
                document.documentElement.setAttribute('data-theme', 'light')
            }
        }

        const asideStatus = saveToLocal.get('aside-status')
        if (asideStatus !== undefined) {
            if (asideStatus === 'hide') {
                document.documentElement.classList.add('hide-aside')
            } else {
                document.documentElement.classList.remove('hide-aside')
            }
        }
    }
)(window)

console.log(
    "%c Program: Hexo %c Theme: Hexo-Theme-Solitude %c Version: v1.5.1",
    "border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#ff3842;margin:10px 0",
    "padding: 5px 10px;color:white;background:#3e9f50;",
    "border-radius:0 5px 5px 0;padding: 5px 10px;background:#0084ff;"
);</script><!-- global head--><script>const GLOBAL_CONFIG = {
    root: '/',
    algolia: undefined,
    localsearch: undefined,
    runtime: '2021-04-20 00:00:00',
    lazyload: {
        enable: true,
        error: '/img/error_load.png'
    },
    hightlight: {
        enable: true,
        limit: 200,
        expand: false,
        copy: true,
    },
    randomlinks: false,
    lang: {
        theme: {
            dark: '已切换至深色模式',
            light: '已切换至浅色模式',
        },
        copy: {
            success: '复制成功',
            error: '复制失败',
        },
        backtop: '返回顶部',
        time: {
            recent: '最近',
            yesterday: '昨天',
            berforeyesterday: '前天',
            daybefore: '天前',
            runtime: '天',
        },
        search: {
            empty: '找不到你查询的内容：${query}',
            hit: '找到 ${hits} 条结果，用时 ${time} 毫秒',
            placeholder: '输入关键词快速查找',
        },
        chs: {
            chs_to_cht: '繁體中文',
            cht_to_chs: '简体中文',
        }
    },
    aside: {
        sayhello: {
            morning: '一日之计在于晨',
            noon: '吃饱了才有力气干活',
            afternoon: '集中精力，攻克难关',
            night: '不要太劳累了，早睡更健康',
            goodnight: '睡个好觉，保证精力充沛',
        },
        sayhello2: ["🤖️ 数码科技爱好者","🔍 分享与热心帮助","🏠 智能家居小能手","🔨 设计开发一条龙","🤝 专修交互与设计","🏃 脚踏实地行动派","🧱 团队小组发动机","💢 壮汉人狠话不多","🎮 电竞游戏爱好者"],
    },
    covercolor: {
        enable: true
    },
    comment: {
        enable: false,
        type: '',
        commentBarrage: false,
        randomInfoStart: ["聪敏的","可爱的","美丽的"],
        randomInfoEnd: ["白菜","小可爱","小仙女"],
        twikoo: {
            url: '',
            accessToken: ''
        },
        waline: {
            url: '',
        }
    },
    lightbox: 'null',
    rightside: {
        enable: false
    },
    ai: {
        enable: true,
        key: '',
        talk: '我是王卓Sco开发的摘要生成助理ScoGPT，ScoGPT在静态部署时进行摘要的撰写，并且在访客访问时通过ScoCorrection转译后的文本摘要实现工具。我在这里只负责已经生成的摘要显示，你无法与我直接沟通，但我可以回答一些预设的问题。',
        randomPost: false,
    },
    music: {
        enable: false,
    },
    translate: undefined,
};</script><meta name="generator" content="Hexo 6.3.0"></head><body id="body"><!-- universe--><canvas id="universe"></canvas><!-- loading--><!-- console--><div id="console"><div class="close-btn" onclick="sco.hideConsole()"><i class="scoicon sco-close-fill"></i></div><div class="button-group"><div class="console-btn-item"><a class="darkmode_switchbutton" onclick="sco.switchDarkMode()" title="昼夜切换" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i></a></div><div class="console-btn-item" id="consoleHideAside"><a class="asideSwitch" onclick="sco.switchHideAside()" title="边栏显示控制" href="javascript:void(0);"><i class="scoicon sco-side-bar-fill"></i></a></div><div class="console-btn-item" id="consoleMusic" onclick="sco.musicToggle()"><a class="music-switch" title="音乐开关" href="javascript:void(0);"><i class="scoicon sco-disc-fill"></i></a></div></div><div class="console-mask" onclick="sco.hideConsole()"></div></div><!-- sidebar--><div id="sidebar" style="zoom: 1;"><div id="menu-mask" style="display: none;"></div><div id="sidebar-menus"><span class="sidebar-menu-item-title">功能</span><div class="sidebar-menu-item"><a class="darkmode_switchbutton menu-child" onclick="sco.switchDarkMode()" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i><span>显示模式</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div><span class="sidebar-menu-item-title">标签</span><div class="card-widget card-tags card-archives card-webinfo card-allinfo"><div class="card-tag-cloud"><a href="/tags/Ajax%E7%AC%94%E8%AE%B0/">Ajax笔记<sup>6</sup></a><a href="/tags/Hexo/">Hexo<sup>6</sup></a><a href="/tags/Qexo/">Qexo<sup>1</sup></a><a href="/tags/GitHub/">GitHub<sup>3</sup></a><a href="/tags/JavaScript/">JavaScript<sup>3</sup></a><a href="/tags/Markdown/">Markdown<sup>2</sup></a><a href="/tags/JavaScript%E7%AC%94%E8%AE%B0/">JavaScript笔记<sup>5</sup></a><a href="/tags/Vscode/">Vscode<sup>2</sup></a><a href="/tags/Vue%E5%89%8D%E7%BD%AE%E5%9F%BA%E7%A1%80/">Vue前置基础<sup>5</sup></a><a href="/tags/Vue%E6%A1%86%E6%9E%B6%E7%AC%94%E8%AE%B0/">Vue框架笔记<sup>6</sup></a><a href="/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题<sup>2</sup></a><a href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/">Web APIs笔记<sup>10</sup></a><a href="/tags/JavaScript%E9%AB%98%E7%BA%A7/">JavaScript高级<sup>5</sup></a><a href="/tags/Windows/">Windows<sup>3</sup></a><a href="/tags/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF%E6%A0%88/">其他技术栈<sup>6</sup></a><a href="/tags/jQuery/">jQuery<sup>1</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88/">前端技术栈<sup>3</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CSS/">学习笔记-CSS<sup>9</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-HTML/">学习笔记-HTML<sup>2</sup></a><a href="/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/">移动开发<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%BB%8F%E9%AA%8C/">前端经验<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/">前端笔记<sup>3</sup></a><a href="/tags/%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90/">网站资源<sup>2</sup></a><a href="/tags/%E5%AE%89%E5%8D%93%E7%8E%A9%E6%9C%BA/">安卓玩机<sup>1</sup></a><a href="/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/">网络协议<sup>1</sup></a></div></div></div></div><!-- keyboard--><div class="post" id="body-wrap"><header class="post-bg" id="page-header"><nav class="show" id="nav"><div id="nav-group"><div id="blog_name"><a id="site-name" href="/" title="返回博客主页"><span class="title">XC's Blog</span></a></div><div id="page-name-mask"><div id="page-name"><a id="page-name-text" onclick="sco.toTop()">Web APIs第五天</a></div></div><div id="menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div></div><div id="nav-left"></div><div id="nav-right"><div class="nav-button" id="randomPost_button"><a class="site-page" onclick="toRandomPost()" title="随机一篇文章" href="javascript:void(0);"><i class="scoicon sco-signal-tower-fill"></i></a></div><div class="nav-button" id="nav-console"><a class="console_switchbutton" onclick="sco.showConsole()" title="中控台" href="javascript:void(0);"><i class="scoicon sco-dashboard-fill"></i></a></div><div class="nav-button" id="nav-totop" onclick="sco.toTop()"><a class="totopbtn"><i class="scoicon sco-arrow-up-line"></i><span id="percent">0</span></a></div><div id="toggle-menu"><a class="site-page"><i class="scoicon sco-menu-line"></i></a></div></div></div></nav><div class="coverdiv" id="coverdiv"><img class="nolazyload" id="post-cover" src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="Web APIs第五天"></div><div id="post-info"><div id="post-firstinfo"><div class="meta-firstline"><a class="post-meta-original" title="该文章为原创文章，注意版权协议">原创</a><span class="post-meta-categories"><a class="post-meta-categories" href="/categories/Web-APIs笔记/">Web APIs笔记</a></span><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-name tags-punctuation">Web APIs笔记</span></a></div></div></div></div><h1 class="post-title">Web APIs第五天</h1><div id="post-meta"><div class="meta-secondline"></div></div></div><section class="main-hero-waves-area waves-area"><svg class="waves-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z"></path></defs><g class="parallax"><use href="#gentle-wave" x="48" y="0"></use><use href="#gentle-wave" x="48" y="3"></use><use href="#gentle-wave" x="48" y="5"></use><use href="#gentle-wave" x="48" y="7"></use></g></svg></section></header><main class="layout" id="content-inner"><div id="post"><div class="post-ai"><div class="ai-title"><div class="ai-title-left"><i class="ai-title-icon scoicon sco-robot-fill"></i><div class="ai-title-text">文章摘要</div></div><div class="ai-tag" id="ai-tag">GPT 4</div></div><div class="ai-explanation" style="display: block;"></div><div class="ai-suggestions"></div><div class="ai-bottom"><div class="ai-tips">此内容根据文章生成，并经过人工审核，仅用于文章内容的解释与总结</div><a class="ai-report" title="投诉" target="_blank" rel="noopener" href="https://blog.wzsco.top/about/">投诉</a></div></div><article class="post-content" id="article-container"><h3 id="DOM-网页特效"><a href="#DOM-网页特效" class="headerlink" title="DOM- 网页特效"></a>DOM- 网页特效</h3><h2 id="1-滚动事件和加载事件"><a href="#1-滚动事件和加载事件" class="headerlink" title="1. 滚动事件和加载事件"></a>1. 滚动事件和加载事件</h2><h3 id="1-滚动事件scroll"><a href="#1-滚动事件scroll" class="headerlink" title="1. 滚动事件scroll"></a>1. 滚动事件scroll</h3><ol>
<li><p>当页面进行滚动时触发的事件</p>
</li>
<li><p>很多网页需要检测用户把页面滚动到某个区域后做一些处理， 比如固定导航栏，比如返回顶部</p>
</li>
<li><p>监听整个页面滚动给 window 或 document 加</p>
</li>
<li><p>监听某个元素的内部滚动直接给某个元素加即可</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">监听整个页面滚动</span><br><span class="line"><span class="comment">// 1. 滚动事件 监听整个页面滚动 固定导航/返回顶部</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line">num1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-加载事件load"><a href="#2-加载事件load" class="headerlink" title="2. 加载事件load"></a>2. 加载事件load</h3><ol>
<li><p>加载外部资源（如图片、外联CSS和JavaScript等）加载完毕时触发的事件</p>
</li>
<li><p>有些时候需要等页面资源全部处理完了做一些事情</p>
</li>
<li><p>老代码喜欢把 script 写在 head 中，这时候直接找 dom 元素找不到</p>
</li>
<li><p>注意：不光可以监听整个页面资源加载完毕，也可以针对某个资源绑定load事件</p>
</li>
</ol>
<p>监听页面所有资源加载完毕： </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">监听整个页面资源给 <span class="variable language_">window</span> 加</span><br><span class="line"><span class="comment">// 2. 加载事件 监听页面资源加载完毕才执行load事件</span></span><br><span class="line"><span class="comment">// 也可以针对别的资源绑定load事件</span></span><br><span class="line"><span class="comment">// 把js写在head上面 导致dom元素找不到 用load事件</span></span><br><span class="line"><span class="keyword">let</span> n1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-加载事件DOMContentLoaded"><a href="#3-加载事件DOMContentLoaded" class="headerlink" title="3. 加载事件DOMContentLoaded"></a>3. 加载事件DOMContentLoaded</h3><ol>
<li>当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表 、图像等完全加载</li>
</ol>
<p>监听页面DOM加载完毕：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">给 <span class="variable language_">document</span> 添加 <span class="title class_">DOMContentLoaded</span> 事件</span><br><span class="line"><span class="comment">// 2. 加载事件 等HTML文档加载完后再加载 无需等样式 图片就可以加载</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="2-scroll家族"><a href="#2-scroll家族" class="headerlink" title="2. scroll家族"></a>2. scroll家族</h2><ol>
<li><p>我们想要页面滚动一段距离，比如100px，就让某些元素显示隐藏, 就可以使用scroll 来检测页面滚动的距离~~~</p>
</li>
<li><p>获取宽高: 获取元素的内容总宽高（不包含滚动条）返回值不带单位</p>
</li>
<li><p>scrollWidth和scrollHeight</p>
</li>
</ol>
<h5 id="获取位置"><a href="#获取位置" class="headerlink" title="获取位置:"></a>获取位置:</h5><ol>
<li><p>获取元素内容往左、往上滚出去看不到的距离</p>
</li>
<li><p>scrollLeft和scrollTop</p>
</li>
<li><p>这两个属性是可以修改的</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. scroll家族 (了解)</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line"><span class="comment">// // 当前宽度 不包含滚动条</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">scrollWidth</span>)</span><br><span class="line"><span class="comment">// // 内容高度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">scrollHeight</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// // 2. 被卷去的头部和左侧</span></span><br><span class="line">num1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">scrollTop</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h5 id="开发中，我们经常检测页面滚动的距离，比如页面滚动100像素，就可以显示一个元素，或者固定一个元素"><a href="#开发中，我们经常检测页面滚动的距离，比如页面滚动100像素，就可以显示一个元素，或者固定一个元素" class="headerlink" title="开发中，我们经常检测页面滚动的距离，比如页面滚动100像素，就可以显示一个元素，或者固定一个元素"></a>开发中，我们经常检测页面滚动的距离，比如页面滚动100像素，就可以显示一个元素，或者固定一个元素</h5><ol>
<li>document.documentElement HTML 文档返回对象为HTML元素</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3. 检测页面滚动的距离</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 返回HTML元素距离</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>)</span><br><span class="line">    <span class="comment">// 可以给值/修改 但不要带单位</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> = <span class="number">200</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol>
<li><p>被卷去的头部或者左侧用那个属性？是否可以读取和修改？</p>
</li>
<li><p>可以读取，也可以修改（赋值）</p>
</li>
</ol>
<h4 id="页面滚动显示返回顶部按钮"><a href="#页面滚动显示返回顶部按钮" class="headerlink" title="页面滚动显示返回顶部按钮"></a>页面滚动显示返回顶部按钮</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">需求：当页面滚动<span class="number">500</span>像素，就显示返回顶部按钮，否则隐藏， 同时点击按钮，则返回顶部</span><br><span class="line">①：用到页面滚动事件</span><br><span class="line">②：检测页面滚动大于等于<span class="number">100</span>像素，则显示按钮</span><br><span class="line">③：点击按钮，则让页面的scrollTop 重置为 <span class="number">0</span></span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;content&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;backtop&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/close2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">let btn = document.querySelector(&#x27;.backtop&#x27;)</span></span><br><span class="line"><span class="language-xml">// 1. 页面滚动事件</span></span><br><span class="line"><span class="language-xml">window.addEventListener(&#x27;scroll&#x27;, function () &#123;</span></span><br><span class="line"><span class="language-xml">    // 2. 页面检测滚动距离</span></span><br><span class="line"><span class="language-xml">    let num1 = document.documentElement.scrollTop</span></span><br><span class="line"><span class="language-xml">    // 3. 判断显示隐藏</span></span><br><span class="line"><span class="language-xml">    // 如果大于200 就显示 小于隐藏</span></span><br><span class="line"><span class="language-xml">    if (num1 &gt;= 200) &#123;</span></span><br><span class="line"><span class="language-xml">        btn.style.display = &#x27;block&#x27;</span></span><br><span class="line"><span class="language-xml">    &#125; else &#123;</span></span><br><span class="line"><span class="language-xml">        btn.style.display = &#x27;none&#x27;</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">// 4. 点击链接返回顶部</span></span><br><span class="line"><span class="language-xml">btn.children[1].addEventListener(&#x27;click&#x27;, function () &#123;</span></span><br><span class="line"><span class="language-xml">    document.documentElement.scrollTop = 0</span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br></pre></td></tr></table></figure>

<h2 id="3-offset家族"><a href="#3-offset家族" class="headerlink" title="3.offset家族"></a>3.offset家族</h2><ol>
<li><p>使用场景： 前面案例滚动多少距离，都是我们自己算的，最好是页面 滚动到某个元素，就可以做某些事</p>
</li>
<li><p>简单说，就是通过js的方式，得到元素在页面中的位置 这样我们可以做，页面滚动到这个位置，就可以返回 顶部的小盒子显示…</p>
</li>
</ol>
<h4 id="获取宽高"><a href="#获取宽高" class="headerlink" title="获取宽高:"></a>获取宽高:</h4><ol>
<li>获取元素的自身宽高、包含元素自身设置的宽高、padding、border, offsetWidth和offsetHeight</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. offset家族 宽高 (了解)</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line"><span class="comment">// 盒子大小 = 盒子本身宽高 + padding + border</span></span><br><span class="line"><span class="comment">// 盒子多大 offset就多大</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">offsetWidth</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">offsetHeight</span>)</span><br></pre></td></tr></table></figure>

<h4 id="获取位置-1"><a href="#获取位置-1" class="headerlink" title="获取位置:"></a>获取位置:</h4><ol>
<li><p>获取元素距离自己定位父级元素的左、上距离</p>
</li>
<li><p>offsetLeft和offsetTop 注意是只读属性</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2. 位置以带定位的父级 如果没有就以左上角为准</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">offsetTop</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">offsetLeft</span>)</span><br></pre></td></tr></table></figure>

<h4 id="仿京东固定导航栏案例"><a href="#仿京东固定导航栏案例" class="headerlink" title="仿京东固定导航栏案例"></a>仿京东固定导航栏案例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">当页面滚动到秒杀模块，导航栏自动滑入，否则滑出</span><br><span class="line">①：用到页面滚动事件</span><br><span class="line">②：检测页面滚动大于等于 秒杀模块的位置 则滑入，否则滑出</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;header&quot;</span>&gt;我是顶部导航栏&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sk&quot;</span>&gt;</span>秒杀模块<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;backtop&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/close2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">let box = document.querySelector(&#x27;.sk&#x27;)</span></span><br><span class="line"><span class="language-xml">let head = document.querySelector(&#x27;.header&#x27;)</span></span><br><span class="line"><span class="language-xml">// 1.页面滚动事件</span></span><br><span class="line"><span class="language-xml">window.addEventListener(&#x27;scroll&#x27;, function () &#123;</span></span><br><span class="line"><span class="language-xml">// 2.检测页面滚动距离 &gt;= 秒杀模块的offsetTop 则划入</span></span><br><span class="line"><span class="language-xml">    if (document.documentElement.scrollTop &gt;= box.offsetTop) &#123;</span></span><br><span class="line"><span class="language-xml">// 3.如果大于则显示 小于则-80px</span></span><br><span class="line"><span class="language-xml">        head.style.top = &#x27;0px&#x27;</span></span><br><span class="line"><span class="language-xml">    &#125; else &#123;</span></span><br><span class="line"><span class="language-xml">        head.style.top = &#x27;-80px&#x27;</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br></pre></td></tr></table></figure>

<h4 id="电梯导航案例"><a href="#电梯导航案例" class="headerlink" title="电梯导航案例"></a>电梯导航案例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">需求：点击可以页面调到指定效果</span><br><span class="line">①：点击当前 小导航，当前添加active，其余移除active</span><br><span class="line">②：得到对应 内容 的 offsetTop值</span><br><span class="line">③：让页面的 scrollTop 走到 对应 内容 的 offsetTop</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;aside&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span>男装/女装<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>儿童服装/游乐园<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>电子产品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>电影/美食<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;neirong content1&quot;</span>&gt;</span>男装/女装<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;neirong content2&quot;</span>&gt;</span>儿童服装/游乐园<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;neirong content3&quot;</span>&gt;</span>电子产品<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;neirong content4&quot;</span>&gt;</span>电影/美食<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.item&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> btn1 = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.neirong&#x27;</span>)</span><br><span class="line"><span class="comment">// 1. 点击谁谁添加类</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num1 = <span class="number">0</span>; num1 &lt; btn.<span class="property">length</span>; num1++) &#123;</span><br><span class="line">    btn[num1].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.aside .active&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">        <span class="comment">// 2. 右侧内容跟随走动</span></span><br><span class="line">        <span class="comment">// 让页面滚动对应offsettop值位置</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> = btn1[num1].<span class="property">offsetTop</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-client家族"><a href="#4-client家族" class="headerlink" title="4.client家族"></a>4.client家族</h2><ol>
<li><p>获取宽高：获取元素的可见部分宽高（不包含边框，滚动条等）, clientWidth和clientHeight</p>
</li>
<li><p>获取位置： 获取左边框和上边框宽度, clientLeft和clientTop 注意是只读属性</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line"><span class="comment">// 可见区域的宽高 不包含滚动条 边框...</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">clientWidth</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">clientHeight</span>)</span><br><span class="line"><span class="comment">// 3. client TOP/Left (了解) 就是边框的宽高</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">clientTop</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="property">clientLeft</span>)</span><br></pre></td></tr></table></figure>

<h4 id="会在窗口尺寸改变的时候触发事件：resize"><a href="#会在窗口尺寸改变的时候触发事件：resize" class="headerlink" title="会在窗口尺寸改变的时候触发事件：resize"></a>会在窗口尺寸改变的时候触发事件：resize</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2. resize事件 当窗口变化时触发的事件</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 检测屏幕宽度</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>)</span><br><span class="line">    <span class="comment">// 检测页面的宽度不同而改变颜色</span></span><br><span class="line">    <span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span></span><br><span class="line">    <span class="keyword">if</span> (num2 &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;skyblue&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num2 &gt;= <span class="number">850</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="5-三大家族的区别"><a href="#5-三大家族的区别" class="headerlink" title="5. 三大家族的区别"></a>5. 三大家族的区别</h2><h3 id="1-offset家族"><a href="#1-offset家族" class="headerlink" title="1. offset家族"></a>1. offset家族</h3><ol>
<li><p>获取元素自身大小：包括自身设置的宽高、padding、border</p>
</li>
<li><p>获取元素距离定位父级的左和上距离 只读属性</p>
</li>
</ol>
<h3 id="2-scroll家族-1"><a href="#2-scroll家族-1" class="headerlink" title="2. scroll家族"></a>2. scroll家族</h3><ol>
<li><p>获取元素内容的总大小</p>
</li>
<li><p>获取元素向左向上滚出去看不见的距离 可读写属性</p>
</li>
</ol>
<h3 id="3-client家族"><a href="#3-client家族" class="headerlink" title="3. client家族"></a>3. client家族</h3><ol>
<li><p>获取元素可见区域的大小</p>
</li>
<li><p>获取元素左、上边框距离 只读属性</p>
</li>
</ol>
<h2 id="6-轮播图案例"><a href="#6-轮播图案例" class="headerlink" title="6. 轮播图案例"></a>6. 轮播图案例</h2><ol>
<li><p>需求①：小图标鼠标经过事件</p>
</li>
<li><p>需求② ：大图片跟随变化</p>
</li>
<li><p>需求③：右侧按钮播放效果</p>
</li>
<li><p>需求④：解决一个BUG</p>
</li>
<li><p>需求⑤：左侧按钮播放效果</p>
</li>
<li><p>需求⑥： 因为左侧按钮和右侧按钮里面有大量相同的操作，可以抽取封装一个函数 common</p>
</li>
<li><p>需求⑦：开启定时器需求</p>
</li>
<li><p>⑧： 鼠标经过停止定时器 （清除定时器） 鼠标离开开启定时器 （开启定时器）</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">    &lt;div class=&quot;slides&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;./images/b_01.jpg&quot; alt=&quot;第1张图的描述信息&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;./images/b_02.jpg&quot; alt=&quot;第2张图的描述信息&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;div class=&quot;extra&quot;&gt;</span><br><span class="line">            &lt;h3&gt;第1张图的描述信息&lt;/h3&gt;</span><br><span class="line">            &lt;a class=&quot;prev&quot; href=&quot;javascript:;&quot;&gt;&lt;/a&gt;</span><br><span class="line">            &lt;a class=&quot;next&quot; href=&quot;javascript:;&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;indicator&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li class=&quot;active&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;images/s_01.jpg&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;mask&quot;&gt;&lt;/span&gt;</span><br><span class="line">                &lt;span class=&quot;border&quot;&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;img src=&quot;images/s_02.jpg&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;mask&quot;&gt;&lt;/span&gt;</span><br><span class="line">                &lt;span class=&quot;border&quot;&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">let xl = document.querySelectorAll(&#x27;.indicator li&#x27;)</span><br><span class="line">let dl = document.querySelectorAll(&#x27;.slides ul li&#x27;)</span><br><span class="line">let text = document.querySelector(&#x27;.extra h3&#x27;)</span><br><span class="line">let btn = document.querySelector(&#x27;.next&#x27;)</span><br><span class="line">let btn1 = document.querySelector(&#x27;.prev&#x27;)</span><br><span class="line">let main = document.querySelector(&#x27;.main&#x27;)</span><br><span class="line">for (let num1 = 0; num1 &lt; xl.length; num1++) &#123;</span><br><span class="line">    // 1.鼠标经过小图片变高亮</span><br><span class="line">    xl[num1].addEventListener(&#x27;mouseenter&#x27;, function () &#123;</span><br><span class="line">        document.querySelector(&#x27;.indicator .active&#x27;).classList.remove(&#x27;active&#x27;)</span><br><span class="line">        this.classList.add(&#x27;active&#x27;)</span><br><span class="line">    // 2. 鼠标经过当前小图片后大图片变化</span><br><span class="line">    // 利用opacity实现淡入淡出效果</span><br><span class="line">        document.querySelector(&#x27;.slides .active&#x27;).classList.remove(&#x27;active&#x27;)</span><br><span class="line">        dl[num1].classList.add(&#x27;active&#x27;)</span><br><span class="line">    // 3. 鼠标经过图片 文字改变</span><br><span class="line">        text.innerHTML = `第$&#123;num1 + 1&#125;张图的描述信息`</span><br><span class="line"></span><br><span class="line">    // 6. 解决Bug 如果鼠标经过后 再次点击播放会乱序</span><br><span class="line">    // 让index重新赋值为 当前鼠标经过索引号</span><br><span class="line">        index = num1</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 4. 右侧按钮点击事件</span><br><span class="line">// 全局变化量变量 不断自增 控制器/给左右按钮同时使用</span><br><span class="line">let index = 0</span><br><span class="line">btn.addEventListener(&#x27;click&#x27;, function () &#123;</span><br><span class="line">    index++  // 变量点击后自增</span><br><span class="line"></span><br><span class="line">    // 1. 解决点击最后一张后报错 等于10之后index为0</span><br><span class="line">    if (index == 10) &#123;</span><br><span class="line">        index = 0</span><br><span class="line">    &#125;</span><br><span class="line">    // 2. // 10 10 余 0</span><br><span class="line">    // index = index % 10 </span><br><span class="line">    fn()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 5.左侧按钮点击事件</span><br><span class="line">btn1.addEventListener(&#x27;click&#x27;, function () &#123;</span><br><span class="line">    index--</span><br><span class="line">    if (index &lt; 0) &#123;</span><br><span class="line">        index = 9</span><br><span class="line">    &#125;</span><br><span class="line">    // 10 + -1 = 9 % 10 余 1</span><br><span class="line">    // index = (10 + index) % xl.length</span><br><span class="line">    fn()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 6. 因为左右按钮有大量相同代码 可以封装成函数 然后调用</span><br><span class="line">function fn() &#123;</span><br><span class="line">    // 选出 index 大/小图片 排它思想</span><br><span class="line">    document.querySelector(&#x27;.indicator .active&#x27;).classList.remove(&#x27;active&#x27;)</span><br><span class="line">    xl[index].classList.add(&#x27;active&#x27;)</span><br><span class="line">    document.querySelector(&#x27;.slides .active&#x27;).classList.remove(&#x27;active&#x27;)</span><br><span class="line">    dl[index].classList.add(&#x27;active&#x27;)</span><br><span class="line">    text.innerHTML = `第$&#123;index + 1&#125;张图的描述信息`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 7. 开启轮播定时器</span><br><span class="line">let timer = setInterval(function () &#123;</span><br><span class="line">// 自动调用右侧按钮点击事件</span><br><span class="line">    btn.click()</span><br><span class="line">&#125;, 800)</span><br><span class="line"></span><br><span class="line">// 如果不清除 点击哪个就不会停止</span><br><span class="line">// 8.鼠标经过清除定时器</span><br><span class="line">main.addEventListener(&#x27;mouseenter&#x27;, function () &#123;</span><br><span class="line">    clearInterval(timer)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 9. 鼠标经过开启定时器</span><br><span class="line">main.addEventListener(&#x27;mouseleave&#x27;, function () &#123;</span><br><span class="line">// 直接再开启一个定时器 不要重新赋值了</span><br><span class="line">    timer = setInterval(function () &#123;</span><br><span class="line">        btn.click()</span><br><span class="line">    &#125;, 800)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="本节单词"><a href="#本节单词" class="headerlink" title="本节单词:"></a>本节单词:</h4><ol>
<li>scroll</li>
<li>window</li>
<li>load</li>
<li>DOMContentLoaded</li>
<li>offset</li>
<li>client</li>
<li>resize</li>
</ol>
</article><div class="post-copyright"><div class="post-copyright__author_group"><a class="post-copyright__author_img" href="/about/"><img class="post-copyright__author_img_front" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"></a><div class="post-copyright__author_name">XC's Blog</div><div class="post-copyright__author_desc"></div></div><div class="post-tools" id="post-tools"><div class="post-tools-left"><div id="quit-box" onclick="RemoveRewardMask()"></div></div></div><div class="post-copyright__notice"><span class="post-copyright-info">本文是原创文章，采用<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0</a>协议，完整转载请注明来自<a href="/">XC's Blog</a></span></div></div><div class="post-tools-right"><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-punctuation"></span>Web APIs笔记<span class="tagsPageCount">10</span></a></div></div></div><nav class="needEndHide pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">Web APIs第六天</div></div></a></div><div class="next-post pull-right"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%9B%9B%E5%A4%A9"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">Web APIs第四天</div></div></a></div></nav><div class="relatedPosts"><div class="headline"><i class="scoicon sco-star-smile-fill"></i><span>喜欢这篇的人也看了</span><div class="relatedPosts-link"><a onclick="event.preventDefault(); toRandomPost();" href="javascript:void(0);" rel="external nofollow" data-pjax-state="">随便逛逛</a></div></div><div class="relatedPosts-list"><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%B8%83%E5%A4%A9" title="Web APIs第七天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第七天</div></div></a></div><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9" title="Web APIs第六天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第六天</div></div></a></div></div></div></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="card-content"><div class="card-info-avatar is-center"><div class="author-info__top-group"><div class="author-info__sayhi" id="author-info__sayhi" onclick="sco.changeSayHelloText()">sayhello.morning</div></div></div><div class="avatar-img-group"><img class="avatar-img" alt="头像" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><div class="avatar-sticker"><img class="avatar-sticker-img" data-lazy-src="https://bu.dusays.com/2023/12/30/659011053e246.png" alt="心情贴纸"></div></div><div class="author-info__description_group"><div class="author-info__description">分享自己对编程的<b>热爱</b>，对美好生活的<b>向往</b>，对知识海洋<b>探索历程</b>。</div><div class="author-info__description2">相信你可以在这里找到对你有用的知识和教程。</div></div><div class="author-info__bottom-group"><a class="author-info__bottom-group-left" href="/about/"><div class="author-info__name">XC's Blog</div><div class="author-info__desc"></div></a><div class="card-info-social-icons is-center"></div></div></div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="scoicon sco-menu-line"></i><span>文章目录</span></div><div class="toc-content" id="toc-content"><ol class="toc"><li class="toc-item toc-level-3"><a class="toc-link" href="#DOM-%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88"><span class="toc-text">DOM- 网页特效</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#1-%E6%BB%9A%E5%8A%A8%E4%BA%8B%E4%BB%B6%E5%92%8C%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6"><span class="toc-text">1. 滚动事件和加载事件</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E6%BB%9A%E5%8A%A8%E4%BA%8B%E4%BB%B6scroll"><span class="toc-text">1. 滚动事件scroll</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6load"><span class="toc-text">2. 加载事件load</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6DOMContentLoaded"><span class="toc-text">3. 加载事件DOMContentLoaded</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#2-scroll%E5%AE%B6%E6%97%8F"><span class="toc-text">2. scroll家族</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#%E8%8E%B7%E5%8F%96%E4%BD%8D%E7%BD%AE"><span class="toc-text">获取位置:</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#%E5%BC%80%E5%8F%91%E4%B8%AD%EF%BC%8C%E6%88%91%E4%BB%AC%E7%BB%8F%E5%B8%B8%E6%A3%80%E6%B5%8B%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E7%9A%84%E8%B7%9D%E7%A6%BB%EF%BC%8C%E6%AF%94%E5%A6%82%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8100%E5%83%8F%E7%B4%A0%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E6%98%BE%E7%A4%BA%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E6%88%96%E8%80%85%E5%9B%BA%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0"><span class="toc-text">开发中，我们经常检测页面滚动的距离，比如页面滚动100像素，就可以显示一个元素，或者固定一个元素</span></a></li></ol></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E6%98%BE%E7%A4%BA%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE"><span class="toc-text">页面滚动显示返回顶部按钮</span></a></li></ol></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#3-offset%E5%AE%B6%E6%97%8F"><span class="toc-text">3.offset家族</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%8E%B7%E5%8F%96%E5%AE%BD%E9%AB%98"><span class="toc-text">获取宽高:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%8E%B7%E5%8F%96%E4%BD%8D%E7%BD%AE-1"><span class="toc-text">获取位置:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BB%BF%E4%BA%AC%E4%B8%9C%E5%9B%BA%E5%AE%9A%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%A1%88%E4%BE%8B"><span class="toc-text">仿京东固定导航栏案例</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E7%94%B5%E6%A2%AF%E5%AF%BC%E8%88%AA%E6%A1%88%E4%BE%8B"><span class="toc-text">电梯导航案例</span></a></li></ol></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#4-client%E5%AE%B6%E6%97%8F"><span class="toc-text">4.client家族</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BC%9A%E5%9C%A8%E7%AA%97%E5%8F%A3%E5%B0%BA%E5%AF%B8%E6%94%B9%E5%8F%98%E7%9A%84%E6%97%B6%E5%80%99%E8%A7%A6%E5%8F%91%E4%BA%8B%E4%BB%B6%EF%BC%9Aresize"><span class="toc-text">会在窗口尺寸改变的时候触发事件：resize</span></a></li></ol></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#5-%E4%B8%89%E5%A4%A7%E5%AE%B6%E6%97%8F%E7%9A%84%E5%8C%BA%E5%88%AB"><span class="toc-text">5. 三大家族的区别</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-offset%E5%AE%B6%E6%97%8F"><span class="toc-text">1. offset家族</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-scroll%E5%AE%B6%E6%97%8F-1"><span class="toc-text">2. scroll家族</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-client%E5%AE%B6%E6%97%8F"><span class="toc-text">3. client家族</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#6-%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%A1%88%E4%BE%8B"><span class="toc-text">6. 轮播图案例</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E8%8A%82%E5%8D%95%E8%AF%8D"><span class="toc-text">本节单词:</span></a></li></ol></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="scoicon sco-map-line"></i><span>最近发布</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题"><img alt="整个前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题">整个前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题"><img alt="常见前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题">常见前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台"><img alt="硅谷甄选运营平台" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台">硅谷甄选运营平台</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天"><img alt="Vue第三天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天">Vue第三天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天"><img alt="Vue第二天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天">Vue第二天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9">Vue框架笔记</a></div></div></div></div></div></div></main><footer id="footer"><div id="sco-footer-bar"><div class="footer-logo"><span class="scoicon">XC's Blog</span></div><div class="footer-bar-description">来自XC's Blog - 的文章</div><a class="footer-bar-link" href="/">了解更多</a></div><div id="footer_deal"><div class="footer_mini_logo" id="footer_mini_logo" title="返回顶部" onclick="sco.toTop()"><img data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg" alt="返回顶部"></div></div><div id="sco-footer"></div><div id="footer-bar"><div class="footer-bar-links"><div class="footer-bar-left"><div class="copyright">© 2021 - 2024 By&nbsp;<a class="footer-bar-link" href="/">XC's Blog</a></div></div><div class="footer-bar-right"><a class="footer-bar-link" target="_blank" rel="noopener" href="https://github.com/wleelw/hexo-theme-solitude" title="主题">主题</a><a class="footer-bar-link cc"><i class="scoicon sco-copyright-line"></i><i class="scoicon sco-creative-commons-by-line"></i><i class="scoicon sco-creative-commons-nc-line"></i><i class="scoicon sco-creative-commons-nd-line"></i></a></div></div></div></footer></div><!-- inject body--><div><script src="/js/main.js?v=1.5.1"></script><script src="/js/utils.js?v=1.5.1"></script><script src="https://cdn.cbd.int/solitude-source/js/universe.min.js"></script><script>dark()
</script><script src="https://cdn.staticfile.org/pjax/0.2.8/pjax.min.js"></script><script src="https://cdn.staticfile.org/vanilla-lazyload/17.8.5/lazyload.iife.min.js"></script><script src="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.js"></script><script src="/js/sco-ai.min.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js"></script><script src="https://cdn.staticfile.org/meting/2.0.1/Meting.min.js"></script><script>const meting_api = 'https://meting.qjqq.cn/?server=:server&type=:type&id=:id&auth=:auth&r=:r';
</script><script src="/js/covercolor/local.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/pace/1.2.4/pace.min.js"></script></div><div id="js-pjax"><script async src="https://cdn.staticfile.org/busuanzi/2.3.0/bsz.pure.mini.min.js"></script><script id="config-diff">var PAGE_CONFIG = {
    is_post: true,
    is_page: false,
    is_home: false,
    page: 'post',
    toc: true,
    comment: false,
}
</script></div><!-- newest comment--><!-- pjax--><script>let pjaxSelectors = [
    'title',
    '#body-wrap',
    '#site-config',
    'meta[name="description"]',
    '#js-pjax',
    'meta[property^="og:"]',
]

const pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
})

document.querySelectorAll('script[data-pjax]').forEach(item => {
    const newScript = document.createElement('script')
    const content = item.text || item.textContent || item.innerHTML || ""
    Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
    newScript.appendChild(document.createTextNode(content))
    item.parentNode.replaceChild(newScript, item)
})

document.addEventListener('pjax:complete', () => {
    window.refreshFn()
})

document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
        pjax.loadUrl('/404.html')
    }
})</script><!-- theme--><script>initTheme = () => {
    const cachedMode = saveToLocal.get('theme');
    if (cachedMode === undefined)
        document.documentElement.setAttribute('data-theme', 'light');
    else
        document.documentElement.setAttribute('data-theme', cachedMode);
}
initTheme()</script><!-- search--><!-- music--><div class="needEndHide" id="nav-music" onclick="sco.musicToggle()"><div id="nav-music-hoverTips">音乐已暂停</div><meting-js id="8407304077" server="netease" type="playlist" mutex="true" preload="none" data-lrctype="0" order="random" theme="var(--sco-main)"></meting-js></div></body></html><script>const posts=["Vue笔记/前端面试题","Vue笔记/面试题","Vue笔记/硅谷甄选项目笔记","Vue笔记/vue第三天","Vue笔记/vue第二天","Vue笔记/Vue第一天","Vue笔记/vue框架笔记","Vue前置基础/5.ES6模块化与Webpack入门","Vue前置基础/1.Vue前置JS功底","Vue前置基础/4.跨域的基本概念","Vue前置基础/3.NPM的使用","Vue前置基础/2.Nodejs基础","Ajax学习笔记/黑马头条数据管理平台","Ajax学习笔记/Promise笔记","Ajax学习笔记/Ajax第四天","Ajax学习笔记/Ajax第三天","Ajax学习笔记/Ajax第二天","Ajax学习笔记/Ajax第一天","WebAPI学习笔记/JS进阶复习","WebAPI学习笔记/JS进阶第四天","WebAPI学习笔记/JS进阶第三天","WebAPI学习笔记/JS进阶第二天","WebAPI学习笔记/JS进阶第一天","WebAPI学习笔记/WebAPIs第七天","WebAPI学习笔记/WebAPIs第六天","WebAPI学习笔记/WebAPIs第五天","WebAPI学习笔记/WebAPIs第四天","WebAPI学习笔记/WebAPIs第三天","WebAPI学习笔记/WebAPIs第二天","WebAPI学习笔记/WebAPIs第一天","WebAPI学习笔记/WebAPIs学习笔记","WebAPI学习笔记/JS-ES6模块化","WebAPI学习笔记/JavaScript进阶","JavaScript学习笔记/JavaScript第五天","JavaScript学习笔记/JavaScript第四天","JavaScript学习笔记/JavaScript第三天","JavaScript学习笔记/JavaScript第二天","JavaScript学习笔记/JavaScript第一天","基础学习路线/移动开发-响应式布局","基础学习路线/移动开发-rem布局","基础学习路线/移动开发-flex布局","基础学习路线/移动开发-流式布局","基础学习路线/CSS3转换问题","基础学习路线/CSS-2D-3D转换","基础学习路线/前端168个单词","基础学习路线/CSS高级技巧","前端技术栈/前端路线","Hexo/图床方案汇总","其他技术栈/Windows软件推荐","Hexo/Butterfly主题配置","Hexo/Qexo","JavaScript/This指向与改变This指向","JavaScript/JS防抖与节流","JavaScript/如何在1分钟内完美解释什么是 JSONP 请求？","前端技术栈/移动端最佳适配解决方案","GitHub/Git常用命令","前端技术栈/来自2.5年前端小白的总结","网站资源/如何买到合适的域名","其他技术栈/CentOS一键安装Docker","网站资源/阿里云资源合集","其他技术栈/15个前端必备学习网站","其他技术栈/CSS3（圆角边框、阴影、浮动详解及示例）","网络协议/浅谈 HTTP 和 HTTPS","学习笔记/CSS属性大全","基础学习路线/CSS第五天-定位","基础学习路线/CSS第四天-浮动","基础学习路线/CSS第三天","基础学习路线/CSS第二天","基础学习路线/CSS第一天","基础学习路线/HTML第二天","基础学习路线/HTML第一天","学习笔记/「学习笔记」JavaScript基础","学习笔记/HTML与CSS进阶","Vue笔记/Vue X-数组对象的双向数据绑定","学习笔记/「学习笔记」CSS基础","学习笔记/「学习笔记」HTML基础","学习笔记/HTML基础","Windows/PE-Win10教程","Windows/Win系统网站-KMS","安卓玩机/Magisk卡刷-通刷官方-了解Fastboot","其他技术栈/前端开发免费资源大汇总","GitHub/Git基础-Github自定义域名","学习笔记/CSS笔记","Vscode/Vscode笔记-24款插件","其他技术栈/免费常用的前端CDN库","其他技术栈/软件及网站推荐","Vscode/记录 Vscode 插件","Hexo/Hexo音乐排行-Netlify CMS","GitHub/玩转GitHub","jQuery/jQuery自动触发事件与bootstrapjQuery插件用法","Hexo/使用Hexo和Github搭建个人博客","Hexo/Hexo博客搭建指南","Hexo/Hexo相关","Markdown/Markdown基础--高级教程","Markdown/Markdown基础教程"];function toRandomPost(){ pjax.loadUrl('/'+posts[Math.floor(Math.random()*posts.length)]); };</script>