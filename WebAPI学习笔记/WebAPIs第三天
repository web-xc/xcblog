<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Web APIs第三天 | XC's Blog</title><noscript>开启JavaScript才能访问本站哦~</noscript><link rel="icon" href="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><!-- index.css--><link rel="stylesheet" href="/css/index.css?v=1.5.1"><!-- inject head--><link rel="stylesheet" href="https://cdn.cbd.int/solitude-source/icon/scoicon.min.css"><link rel="stylesheet" href="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.css"><!-- aplayer--><link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css"><!-- swiper--><!-- Open Graph--><meta name="description" content="DOM节点操作 重绘与回流1. DOM节点 DOM节点: DOM树里每一个内容都称之为节点 1. 节点类型: 元素节点 • 所有的标签 比如 body、 div • html 是根节点 属性节点 • 所有的属性 比如 href 文本节点 • 所有的文本 重点记住元素节点, 可以更好的让我们理清"><!-- pwa--><script>(win => {
        win.saveToLocal = {
            set: function setWithExpiry(key, value, ttl) {
                if (ttl === 0)
                    return
                const now = new Date()
                const expiryDay = ttl * 86400000
                const item = {
                    value: value,
                    expiry: now.getTime() + expiryDay,
                }
                localStorage.setItem(key, JSON.stringify(item))
            },

            get: function getWithExpiry(key) {
                const itemStr = localStorage.getItem(key)

                if (!itemStr) {
                    return undefined
                }
                const item = JSON.parse(itemStr)
                const now = new Date()

                if (now.getTime() > item.expiry) {
                    localStorage.removeItem(key)
                    return undefined
                }
                return item.value
            }
        }

        const DarkModeStatus = localStorage.getItem('theme')
        if (DarkModeStatus !== null) {
            if (DarkModeStatus === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark')
            } else {
                document.documentElement.setAttribute('data-theme', 'light')
            }
        }

        const asideStatus = saveToLocal.get('aside-status')
        if (asideStatus !== undefined) {
            if (asideStatus === 'hide') {
                document.documentElement.classList.add('hide-aside')
            } else {
                document.documentElement.classList.remove('hide-aside')
            }
        }
    }
)(window)

console.log(
    "%c Program: Hexo %c Theme: Hexo-Theme-Solitude %c Version: v1.5.1",
    "border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#ff3842;margin:10px 0",
    "padding: 5px 10px;color:white;background:#3e9f50;",
    "border-radius:0 5px 5px 0;padding: 5px 10px;background:#0084ff;"
);</script><!-- global head--><script>const GLOBAL_CONFIG = {
    root: '/',
    algolia: undefined,
    localsearch: undefined,
    runtime: '2021-04-20 00:00:00',
    lazyload: {
        enable: true,
        error: '/img/error_load.png'
    },
    hightlight: {
        enable: true,
        limit: 200,
        expand: false,
        copy: true,
    },
    randomlinks: false,
    lang: {
        theme: {
            dark: '已切换至深色模式',
            light: '已切换至浅色模式',
        },
        copy: {
            success: '复制成功',
            error: '复制失败',
        },
        backtop: '返回顶部',
        time: {
            recent: '最近',
            yesterday: '昨天',
            berforeyesterday: '前天',
            daybefore: '天前',
            runtime: '天',
        },
        search: {
            empty: '找不到你查询的内容：${query}',
            hit: '找到 ${hits} 条结果，用时 ${time} 毫秒',
            placeholder: '输入关键词快速查找',
        },
        chs: {
            chs_to_cht: '繁體中文',
            cht_to_chs: '简体中文',
        }
    },
    aside: {
        sayhello: {
            morning: '一日之计在于晨',
            noon: '吃饱了才有力气干活',
            afternoon: '集中精力，攻克难关',
            night: '不要太劳累了，早睡更健康',
            goodnight: '睡个好觉，保证精力充沛',
        },
        sayhello2: ["🤖️ 数码科技爱好者","🔍 分享与热心帮助","🏠 智能家居小能手","🔨 设计开发一条龙","🤝 专修交互与设计","🏃 脚踏实地行动派","🧱 团队小组发动机","💢 壮汉人狠话不多","🎮 电竞游戏爱好者"],
    },
    covercolor: {
        enable: true
    },
    comment: {
        enable: false,
        type: '',
        commentBarrage: false,
        randomInfoStart: ["聪敏的","可爱的","美丽的"],
        randomInfoEnd: ["白菜","小可爱","小仙女"],
        twikoo: {
            url: '',
            accessToken: ''
        },
        waline: {
            url: '',
        }
    },
    lightbox: 'null',
    rightside: {
        enable: false
    },
    ai: {
        enable: true,
        key: '',
        talk: '我是王卓Sco开发的摘要生成助理ScoGPT，ScoGPT在静态部署时进行摘要的撰写，并且在访客访问时通过ScoCorrection转译后的文本摘要实现工具。我在这里只负责已经生成的摘要显示，你无法与我直接沟通，但我可以回答一些预设的问题。',
        randomPost: false,
    },
    music: {
        enable: false,
    },
    translate: undefined,
};</script><meta name="generator" content="Hexo 6.3.0"></head><body id="body"><!-- universe--><canvas id="universe"></canvas><!-- loading--><!-- console--><div id="console"><div class="close-btn" onclick="sco.hideConsole()"><i class="scoicon sco-close-fill"></i></div><div class="button-group"><div class="console-btn-item"><a class="darkmode_switchbutton" onclick="sco.switchDarkMode()" title="昼夜切换" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i></a></div><div class="console-btn-item" id="consoleHideAside"><a class="asideSwitch" onclick="sco.switchHideAside()" title="边栏显示控制" href="javascript:void(0);"><i class="scoicon sco-side-bar-fill"></i></a></div><div class="console-btn-item" id="consoleMusic" onclick="sco.musicToggle()"><a class="music-switch" title="音乐开关" href="javascript:void(0);"><i class="scoicon sco-disc-fill"></i></a></div></div><div class="console-mask" onclick="sco.hideConsole()"></div></div><!-- sidebar--><div id="sidebar" style="zoom: 1;"><div id="menu-mask" style="display: none;"></div><div id="sidebar-menus"><span class="sidebar-menu-item-title">功能</span><div class="sidebar-menu-item"><a class="darkmode_switchbutton menu-child" onclick="sco.switchDarkMode()" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i><span>显示模式</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div><span class="sidebar-menu-item-title">标签</span><div class="card-widget card-tags card-archives card-webinfo card-allinfo"><div class="card-tag-cloud"><a href="/tags/Ajax%E7%AC%94%E8%AE%B0/">Ajax笔记<sup>6</sup></a><a href="/tags/Hexo/">Hexo<sup>6</sup></a><a href="/tags/Qexo/">Qexo<sup>1</sup></a><a href="/tags/GitHub/">GitHub<sup>3</sup></a><a href="/tags/JavaScript/">JavaScript<sup>3</sup></a><a href="/tags/Markdown/">Markdown<sup>2</sup></a><a href="/tags/JavaScript%E7%AC%94%E8%AE%B0/">JavaScript笔记<sup>5</sup></a><a href="/tags/Vscode/">Vscode<sup>2</sup></a><a href="/tags/Vue%E5%89%8D%E7%BD%AE%E5%9F%BA%E7%A1%80/">Vue前置基础<sup>5</sup></a><a href="/tags/Vue%E6%A1%86%E6%9E%B6%E7%AC%94%E8%AE%B0/">Vue框架笔记<sup>6</sup></a><a href="/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题<sup>2</sup></a><a href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/">Web APIs笔记<sup>10</sup></a><a href="/tags/JavaScript%E9%AB%98%E7%BA%A7/">JavaScript高级<sup>5</sup></a><a href="/tags/Windows/">Windows<sup>3</sup></a><a href="/tags/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF%E6%A0%88/">其他技术栈<sup>6</sup></a><a href="/tags/jQuery/">jQuery<sup>1</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88/">前端技术栈<sup>3</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CSS/">学习笔记-CSS<sup>9</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-HTML/">学习笔记-HTML<sup>2</sup></a><a href="/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/">移动开发<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%BB%8F%E9%AA%8C/">前端经验<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/">前端笔记<sup>3</sup></a><a href="/tags/%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90/">网站资源<sup>2</sup></a><a href="/tags/%E5%AE%89%E5%8D%93%E7%8E%A9%E6%9C%BA/">安卓玩机<sup>1</sup></a><a href="/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/">网络协议<sup>1</sup></a></div></div></div></div><!-- keyboard--><div class="post" id="body-wrap"><header class="post-bg" id="page-header"><nav class="show" id="nav"><div id="nav-group"><div id="blog_name"><a id="site-name" href="/" title="返回博客主页"><span class="title">XC's Blog</span></a></div><div id="page-name-mask"><div id="page-name"><a id="page-name-text" onclick="sco.toTop()">Web APIs第三天</a></div></div><div id="menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div></div><div id="nav-left"></div><div id="nav-right"><div class="nav-button" id="randomPost_button"><a class="site-page" onclick="toRandomPost()" title="随机一篇文章" href="javascript:void(0);"><i class="scoicon sco-signal-tower-fill"></i></a></div><div class="nav-button" id="nav-console"><a class="console_switchbutton" onclick="sco.showConsole()" title="中控台" href="javascript:void(0);"><i class="scoicon sco-dashboard-fill"></i></a></div><div class="nav-button" id="nav-totop" onclick="sco.toTop()"><a class="totopbtn"><i class="scoicon sco-arrow-up-line"></i><span id="percent">0</span></a></div><div id="toggle-menu"><a class="site-page"><i class="scoicon sco-menu-line"></i></a></div></div></div></nav><div class="coverdiv" id="coverdiv"><img class="nolazyload" id="post-cover" src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="Web APIs第三天"></div><div id="post-info"><div id="post-firstinfo"><div class="meta-firstline"><a class="post-meta-original" title="该文章为原创文章，注意版权协议">原创</a><span class="post-meta-categories"><a class="post-meta-categories" href="/categories/Web-APIs笔记/">Web APIs笔记</a></span><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-name tags-punctuation">Web APIs笔记</span></a></div></div></div></div><h1 class="post-title">Web APIs第三天</h1><div id="post-meta"><div class="meta-secondline"></div></div></div><section class="main-hero-waves-area waves-area"><svg class="waves-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z"></path></defs><g class="parallax"><use href="#gentle-wave" x="48" y="0"></use><use href="#gentle-wave" x="48" y="3"></use><use href="#gentle-wave" x="48" y="5"></use><use href="#gentle-wave" x="48" y="7"></use></g></svg></section></header><main class="layout" id="content-inner"><div id="post"><div class="post-ai"><div class="ai-title"><div class="ai-title-left"><i class="ai-title-icon scoicon sco-robot-fill"></i><div class="ai-title-text">文章摘要</div></div><div class="ai-tag" id="ai-tag">GPT 4</div></div><div class="ai-explanation" style="display: block;"></div><div class="ai-suggestions"></div><div class="ai-bottom"><div class="ai-tips">此内容根据文章生成，并经过人工审核，仅用于文章内容的解释与总结</div><a class="ai-report" title="投诉" target="_blank" rel="noopener" href="https://blog.wzsco.top/about/">投诉</a></div></div><article class="post-content" id="article-container"><h2 id="DOM节点操作-重绘与回流"><a href="#DOM节点操作-重绘与回流" class="headerlink" title="DOM节点操作 重绘与回流"></a>DOM节点操作 重绘与回流</h2><h3 id="1-DOM节点"><a href="#1-DOM节点" class="headerlink" title="1. DOM节点"></a>1. DOM节点</h3><ol>
<li>DOM节点: DOM树里每一个内容都称之为节点</li>
</ol>
<img data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG@main/postss/dom节点.jpg" style="zoom: 25%;" />

<h5 id="1-节点类型"><a href="#1-节点类型" class="headerlink" title="1. 节点类型:"></a>1. 节点类型:</h5><ol>
<li>元素节点 • 所有的标签 比如 body、 div • html 是根节点</li>
<li>属性节点 • 所有的属性 比如 href</li>
<li>文本节点 • 所有的文本</li>
<li>重点记住元素节点, 可以更好的让我们理清标签元素之间的关系</li>
</ol>
<h3 id="1-查找节点"><a href="#1-查找节点" class="headerlink" title="1. 查找节点"></a>1. 查找节点</h3><h4 id="1-查找父节点"><a href="#1-查找父节点" class="headerlink" title="1.查找父节点:"></a>1.查找父节点:</h4><ol>
<li>parentNode 属性, 返回最近一级的父节点 找不到返回为null</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="comment">// 1. parentNode 查找父节点</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box1&#x27;</span>)</span><br><span class="line">num.<span class="property">parentNode</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>关闭二维码案例:</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>x<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="comment">//点击关闭按钮， 关闭的是二维码的盒子， 还要获取erweima盒子</span></span><br><span class="line"><span class="comment">//点击关闭按钮， 直接关闭它的爸爸，就无需获取erweima元素了</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box1&#x27;</span>)</span><br><span class="line">num.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>关闭多个二维码案例</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="comment">//多个二维码，点击谁，谁关闭</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.box2&#x27;</span>)</span><br><span class="line"><span class="comment">// 绑定多个事件给box3</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num2 = <span class="number">0</span>; num2 &lt; num1.<span class="property">length</span>; num2++) &#123;</span><br><span class="line">    num1[num2].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 关闭当前二维码 点击谁 就关闭父元素</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-查找子节点"><a href="#2-查找子节点" class="headerlink" title="2. 查找子节点"></a>2. 查找子节点</h4><ol>
<li>childNodes: 获得所有子节点、包括文本节点(空格、换行)、注释节点等</li>
<li>children[重点]: 仅获得所有元素节点, 返回的还是一个伪数组</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 查找子节点 children 伪元素</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line">num1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> num3 = <span class="number">0</span>; num3 &lt; num2.<span class="property">children</span>.<span class="property">length</span>; num3++) &#123;</span><br><span class="line">        num2.<span class="property">children</span>[num3].<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="3-兄弟关系查找"><a href="#3-兄弟关系查找" class="headerlink" title="3. 兄弟关系查找"></a>3. 兄弟关系查找</h4><h5 id="1-下一个兄弟节点"><a href="#1-下一个兄弟节点" class="headerlink" title="1. 下一个兄弟节点"></a>1. 下一个兄弟节点</h5><ol>
<li>nextElementSibling 属性</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.two&#x27;</span>)</span><br><span class="line">num1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 1.查找下一个节点</span></span><br><span class="line">num2.<span class="property">nextElementSibling</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-上一个兄弟节点"><a href="#2-上一个兄弟节点" class="headerlink" title="2. 上一个兄弟节点"></a>2. 上一个兄弟节点</h5><ol>
<li>previousElementSibling 属性</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2 查找上一个节点</span></span><br><span class="line">num2.<span class="property">previousElementSibling</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;pink&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-增加节点"><a href="#2-增加节点" class="headerlink" title="2. 增加节点"></a>2. 增加节点</h3><h4 id="1-创建节点"><a href="#1-创建节点" class="headerlink" title="1. 创建节点"></a>1. 创建节点</h4><ol>
<li>即创造出一个新的网页元素，再添加到网页内，一般先创建节点，然后插入节点</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">num2.<span class="property">innerHTML</span> = <span class="string">&#x27;我是创建新节点/追加节点&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-追加节点"><a href="#2-追加节点" class="headerlink" title="2. 追加节点"></a>2. 追加节点</h4><ol>
<li>要想在界面看到, 还得插入到某个父元素中</li>
</ol>
<h5 id="1-插入到父元素的最后一个子元素"><a href="#1-插入到父元素的最后一个子元素" class="headerlink" title="1. 插入到父元素的最后一个子元素:"></a>1. 插入到父元素的最后一个子元素:</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line">num1.<span class="title function_">appendChild</span>(num2)</span><br></pre></td></tr></table></figure>

<h5 id="2-插入到父元素中某个子元素的前面"><a href="#2-插入到父元素中某个子元素的前面" class="headerlink" title="2. 插入到父元素中某个子元素的前面:"></a>2. 插入到父元素中某个子元素的前面:</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num1.<span class="title function_">insertBefore</span>(num2, num1.<span class="property">children</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>

<h5 id="3-学成在线案例渲染"><a href="#3-学成在线案例渲染" class="headerlink" title="3. 学成在线案例渲染"></a>3. 学成在线案例渲染</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">src</span>: <span class="string">&#x27;images/course01.png&#x27;</span>,</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;Think PHP 5.0 博客系统实战项目演练&#x27;</span>,</span><br><span class="line">        <span class="attr">num</span>: <span class="number">1125</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num1 = <span class="number">0</span>; num1 &lt; data.<span class="property">length</span>; num1++) &#123;</span><br><span class="line">    <span class="keyword">let</span> num3 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">    num3.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;img src=<span class="subst">$&#123;data[num1].src&#125;</span> alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;h4&gt;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;data[num1].title&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/h4&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;info&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span&gt;高级&lt;/span&gt; • &lt;span&gt; <span class="subst">$&#123;data[num1].num&#125;</span>&lt;/span&gt;人在学习</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">    num2.<span class="title function_">appendChild</span>(num3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-克隆节点"><a href="#3-克隆节点" class="headerlink" title="3. 克隆节点"></a>3. 克隆节点</h4><ol>
<li>cloneNode会克隆出一个跟原标签一样的元素，括号内传入布尔值</li>
<li>若为true，则代表克隆时会包含后代节点一起克隆</li>
<li>若为false，则代表克隆时不包含后代节点, 默认为false</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line"><span class="comment">// 括号默认为false 则不克隆后代节点</span></span><br><span class="line"><span class="comment">// 若是true 则克隆后代</span></span><br><span class="line"><span class="keyword">let</span> num2 = num1.<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(num2)</span><br></pre></td></tr></table></figure>

<h4 id="4-删除节点"><a href="#4-删除节点" class="headerlink" title="4. 删除节点"></a>4. 删除节点</h4><ol>
<li>若一个节点在页面中已不需要时，可以删除它</li>
<li>在 JavaScript 原生DOM操作中，要删除元素必须通过父元素删除</li>
<li>如不存在父子关系则删除不成功</li>
<li>删除节点和隐藏节点（display:none） 有区别的： 隐藏节点还是存在的，但是删除，则从html中删除节点</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num3 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> num4 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ol&#x27;</span>)</span><br><span class="line">num3.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 语法: 父元素.removeChild(子元素)</span></span><br><span class="line">    num4.<span class="title function_">removeChild</span>(num4.<span class="property">children</span>[<span class="number">0</span>])</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-时间对象"><a href="#3-时间对象" class="headerlink" title="3. 时间对象"></a>3. 时间对象</h3><ol>
<li>时间对象：用来表示时间的对象, 作用：可以得到当前系统时间</li>
</ol>
<h4 id="1-实例化"><a href="#1-实例化" class="headerlink" title="1. 实例化"></a>1. 实例化</h4><ol>
<li>在代码中发现了 new 关键字时，一般将这个操作称为实例化</li>
<li>创建一个时间对象并获取时间</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小括号为空 可获得当前时间</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num1)</span><br><span class="line"><span class="comment">// 小括号写时间 可返回指定时间</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023-3-31 00:00&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num2)</span><br></pre></td></tr></table></figure>

<h4 id="2-时间对象方法"><a href="#2-时间对象方法" class="headerlink" title="2. 时间对象方法"></a>2. 时间对象方法</h4><ol>
<li>因为时间对象返回的数据我们不能直接使用，所以需要转换为实际开发中常用的格式</li>
</ol>
<table>
<thead>
<tr>
<th align="left">方法</th>
<th align="left">作用</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">getFullYear()</td>
<td align="left">获得年份</td>
<td align="left">获取四位年份</td>
</tr>
<tr>
<td align="left">getMonth()</td>
<td align="left">获得月份</td>
<td align="left">取值为0~11</td>
</tr>
<tr>
<td align="left">getDate()</td>
<td align="left">获得月份中的每一天</td>
<td align="left">不同月份取值也不同</td>
</tr>
<tr>
<td align="left">getDay()</td>
<td align="left">获取星期</td>
<td align="left">取值为0~6</td>
</tr>
<tr>
<td align="left">getHours()</td>
<td align="left">获取小时</td>
<td align="left">取值为0~23</td>
</tr>
<tr>
<td align="left">getMinutes()</td>
<td align="left">获取分钟</td>
<td align="left">取值为0~59</td>
</tr>
<tr>
<td align="left">getSeconds()</td>
<td align="left">获取秒</td>
<td align="left">取值为0~59</td>
</tr>
</tbody></table>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 年月日</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getFullYear</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getMonth</span>() + <span class="number">1</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getDay</span>())</span><br><span class="line"><span class="comment">// 时分秒</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getHours</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getMinutes</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1.<span class="title function_">getSeconds</span>())</span><br></pre></td></tr></table></figure>

<h5 id="页面显示时间"><a href="#页面显示时间" class="headerlink" title="页面显示时间:"></a>页面显示时间:</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 显示时间案例</span></span><br><span class="line"><span class="title function_">fn</span>() <span class="comment">// 先调用函数 省去1秒空白期</span></span><br><span class="line"><span class="built_in">setInterval</span>(fn, <span class="number">1000</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 实例化时间对象 写到定时器里才行</span></span><br><span class="line">    <span class="keyword">let</span> arr = [<span class="string">&#x27;星期日&#x27;</span>, <span class="string">&#x27;星期一&#x27;</span>, <span class="string">&#x27;星期二&#x27;</span>, <span class="string">&#x27;星期三&#x27;</span>, <span class="string">&#x27;星期四&#x27;</span>, <span class="string">&#x27;星期五&#x27;</span>, <span class="string">&#x27;星期六&#x27;</span>]</span><br><span class="line">    <span class="keyword">let</span> num3 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    <span class="keyword">let</span> n1 = num3.<span class="title function_">getFullYear</span>()</span><br><span class="line">    <span class="keyword">let</span> n2 = num3.<span class="title function_">getMonth</span>() + <span class="number">1</span></span><br><span class="line">    <span class="keyword">let</span> n3 = num3.<span class="title function_">getDate</span>()</span><br><span class="line">    <span class="keyword">let</span> n4 = num3.<span class="title function_">getDay</span>()</span><br><span class="line">    <span class="keyword">let</span> n5 = num3.<span class="title function_">getHours</span>()</span><br><span class="line">    <span class="keyword">let</span> n6 = num3.<span class="title function_">getMinutes</span>()</span><br><span class="line">    <span class="keyword">let</span> n7 = num3.<span class="title function_">getSeconds</span>()</span><br><span class="line">    <span class="keyword">let</span> n8 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line">    n8.<span class="property">innerHTML</span> = <span class="string">`今天是<span class="subst">$&#123;n1&#125;</span>年<span class="subst">$&#123;n2&#125;</span>月<span class="subst">$&#123;n3&#125;</span>日 <span class="subst">$&#123;arr[n4]&#125;</span> <span class="subst">$&#123;n5&#125;</span>:<span class="subst">$&#123;n6&#125;</span>:<span class="subst">$&#123;n7&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-时间戳"><a href="#3-时间戳" class="headerlink" title="3. 时间戳"></a>3. 时间戳</h4><ol>
<li>时间戳: 是指1970年1月1日0时0分0秒起至现在的毫秒数, 它是一种特殊的计量时间的方式</li>
<li>时间对象里面的方法转换实际所用</li>
<li>重点记住 +new Date() 因为可以返回当前时间戳或者指定的时间戳</li>
</ol>
<h4 id="1-三种方式获取时间戳"><a href="#1-三种方式获取时间戳" class="headerlink" title="1. 三种方式获取时间戳:"></a>1. 三种方式获取时间戳:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无需实例化</span></span><br><span class="line"><span class="comment">// 但是只能得到当前的时间戳， 而前面两种可以返回指定时间的时间戳</span></span><br><span class="line"><span class="comment">// 利用将来时间减 现在时间戳 = 剩余时间毫秒</span></span><br><span class="line"><span class="comment">// 1.getTime() 方法</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num1.<span class="title function_">getTime</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.new +Date()</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(+<span class="keyword">new</span> <span class="title class_">Date</span>()) <span class="comment">// 当前时间戳</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(+<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023-4-1 00:00:00&#x27;</span>)) <span class="comment">// 指定时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.Date.now 只能得到当前</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>())</span><br></pre></td></tr></table></figure>

<h4 id="2-毕业倒计时效果"><a href="#2-毕业倒计时效果" class="headerlink" title="2. 毕业倒计时效果"></a>2. 毕业倒计时效果</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fn</span>()</span><br><span class="line"><span class="built_in">setInterval</span>(fn, <span class="number">1000</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1.获取当前时间戳</span></span><br><span class="line">    <span class="keyword">let</span> n1 = +<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.获取指定时间戳</span></span><br><span class="line">    <span class="keyword">let</span> n2 = +<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2023-4-1 00:00:00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.计算剩余毫秒 / 1000 = 剩余秒数</span></span><br><span class="line">    <span class="keyword">let</span> n3 = (n2 - n1) / <span class="number">1000</span></span><br><span class="line">    <span class="comment">// console.log(n3)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.转换时分秒</span></span><br><span class="line">    <span class="keyword">let</span> h = <span class="built_in">parseInt</span>(n3 / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>)</span><br><span class="line">    h = h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h</span><br><span class="line">    <span class="keyword">let</span> m = <span class="built_in">parseInt</span>(n3 / <span class="number">60</span> % <span class="number">60</span>)</span><br><span class="line">    m = m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m</span><br><span class="line">    <span class="keyword">let</span> s = <span class="built_in">parseInt</span>(n3 % <span class="number">60</span>)</span><br><span class="line">    s = s &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + s : s</span><br><span class="line">    <span class="comment">// console.log(h, m, s)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> m1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#hour&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> m2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#minutes&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> m3 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#scond&#x27;</span>)</span><br><span class="line">    m1.<span class="property">innerHTML</span> = h</span><br><span class="line">    m2.<span class="property">innerHTML</span> = m</span><br><span class="line">    m3.<span class="property">innerHTML</span> = s</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> m4 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.next&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> m5 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tips&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> m6 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    <span class="keyword">let</span> m7 = m6.<span class="title function_">getFullYear</span>()</span><br><span class="line">    <span class="keyword">let</span> m8 = m6.<span class="title function_">getMonth</span>() + <span class="number">1</span></span><br><span class="line">    <span class="keyword">let</span> m9 = m6.<span class="title function_">getDate</span>()</span><br><span class="line">    <span class="keyword">let</span> m10 = m6.<span class="title function_">getHours</span>()</span><br><span class="line">    <span class="keyword">let</span> m11 = m6.<span class="title function_">getMinutes</span>()</span><br><span class="line">    <span class="keyword">let</span> m12 = m6.<span class="title function_">getSeconds</span>()</span><br><span class="line">    m4.<span class="property">innerHTML</span> = <span class="string">`今天是<span class="subst">$&#123;m7&#125;</span>年<span class="subst">$&#123;m8&#125;</span>月<span class="subst">$&#123;m9&#125;</span>日`</span></span><br><span class="line">    m5.<span class="property">innerHTML</span> = <span class="string">`现在是<span class="subst">$&#123;m10&#125;</span>:<span class="subst">$&#123;m11&#125;</span>:<span class="subst">$&#123;m12&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-重绘和回流"><a href="#4-重绘和回流" class="headerlink" title="4. 重绘和回流"></a>4. 重绘和回流</h3><blockquote>
<p><strong>浏览器是如何进行界面渲染的:</strong></p>
</blockquote>
<ol>
<li>解析（Parser）HTML，生成DOM树(DOM Tree)</li>
<li>同时解析（Parser） CSS，生成样式规则 (Style Rules)</li>
<li>根据DOM树和样式规则，生成渲染树(Render Tree)</li>
<li>进行布局 Layout(回流/重排):根据生成的渲染树，得到节点的几何信息(位置，大小)</li>
<li>进行绘制 Painting(重绘): 根据计算和获取的信息进行整个页面的绘制</li>
<li>Display: 展示在页面上</li>
</ol>
<img data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG@main/postss/重绘与回流.jpg" style="zoom:33%;" />

<h4 id="1-回流-重排"><a href="#1-回流-重排" class="headerlink" title="1. 回流(重排)"></a>1. 回流(重排)</h4><ol>
<li>当 Render Tree 中部分或者全部元素的尺寸、结构、布局等发生改变时，浏览器就会重新渲染部分或全部文档的过 程称为 回流</li>
</ol>
<h4 id="2-重绘"><a href="#2-重绘" class="headerlink" title="2. 重绘"></a>2. 重绘</h4><ol>
<li>由于节点(元素)的样式的改变并不影响它在文档流中的位置和文档布局时(比如：color、background-color、 outline等), 称为重绘</li>
</ol>
<h4 id="3-重绘不一定引起回流-而回流一定会引起重绘"><a href="#3-重绘不一定引起回流-而回流一定会引起重绘" class="headerlink" title="3. 重绘不一定引起回流, 而回流一定会引起重绘"></a>3. 重绘不一定引起回流, 而回流一定会引起重绘</h4><h4 id="4-重绘和回流-重排-会导致回流的操作："><a href="#4-重绘和回流-重排-会导致回流的操作：" class="headerlink" title="4. 重绘和回流(重排) 会导致回流的操作："></a>4. 重绘和回流(重排) 会导致回流的操作：</h4><ol>
<li>页面的首次刷新</li>
<li>浏览器的窗口大小发生改变</li>
<li>元素的大小或位置发生改变</li>
<li>改变字体的大小</li>
<li>内容的变化（如：input框的输入，图片的大小)</li>
<li>激活css伪类(如：:hover)</li>
<li>脚本操作DOM（添加或者删除可见的DOM元素)</li>
<li>简单理解影响到布局了，就会有回流</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span></span><br><span class="line">s.<span class="property">padding</span> = <span class="string">&#x27;1px&#x27;</span> <span class="comment">// 重排 + 重绘</span></span><br><span class="line">s.<span class="property">border</span> = <span class="string">&#x27;1px solid red&#x27;</span> <span class="comment">// 重排 + 重绘</span></span><br><span class="line">s.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span> <span class="comment">// 重绘</span></span><br><span class="line">s.<span class="property">backgroundColor</span> = <span class="string">&#x27;#000&#x27;</span> <span class="comment">// 重绘</span></span><br><span class="line">s.<span class="property">fontSize</span> = <span class="string">&#x27;14px&#x27;</span> <span class="comment">// 重排 + 重绘</span></span><br></pre></td></tr></table></figure>

<h3 id="5-发布微博案例"><a href="#5-发布微博案例" class="headerlink" title="5. 发布微博案例"></a>5. 发布微博案例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">  &#123; <span class="attr">uname</span>: <span class="string">&#x27;鲁班&#x27;</span>, <span class="attr">imgSrc</span>: <span class="string">&#x27;./images/9.5/01.jpg&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">uname</span>: <span class="string">&#x27;李白&#x27;</span>, <span class="attr">imgSrc</span>: <span class="string">&#x27;./images/9.5/02.jpg&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 1. 检测用户输入字数</span></span><br><span class="line"><span class="keyword">let</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;textarea&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> useCount = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.useCount&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#list&#x27;</span>)</span><br><span class="line">text.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  useCount.<span class="property">innerHTML</span> = <span class="variable language_">this</span>.<span class="property">value</span>.<span class="property">length</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 发布内容不能为空</span></span><br><span class="line"><span class="comment">// 点击button后判断 内容为空 则提示不能输入为空 并直接return 不能为空</span></span><br><span class="line"><span class="comment">// 使用字符串.trim()去掉首尾空格</span></span><br><span class="line"><span class="comment">// 并将表单value值设置为空字符串 同时字数设置为0</span></span><br><span class="line"><span class="keyword">let</span> send = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#send&#x27;</span>)</span><br><span class="line">send.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (text.<span class="property">value</span>.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    text.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    useCount.<span class="property">innerHTML</span>  = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;内容不能为空&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4. 发布随机数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min + min) + min)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> fn1 = <span class="title function_">fn</span>(<span class="number">0</span>, data.<span class="property">length</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3. 新增留言</span></span><br><span class="line">  <span class="comment">// 创建小li 通过innerHTML追加数据</span></span><br><span class="line">  <span class="comment">// 随机获取数据数组内容 替换图片名字及留言内容</span></span><br><span class="line">  <span class="comment">// 利用时间对象将时间动态化 new Date().toLocaleString()</span></span><br><span class="line">  <span class="keyword">let</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">  li.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;info&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;img class=&quot;userpic&quot; src=<span class="subst">$&#123;data[fn1].imgSrc&#125;</span> /&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;username&quot;&gt;<span class="subst">$&#123;data[fn1].uname&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;p class=&quot;send-time&quot;&gt;发布于 <span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;content&quot;&gt;<span class="subst">$&#123;text.value&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;the_del&quot;&gt;X&lt;/span&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 5. 删除留言操作 放到追加的前面</span></span><br><span class="line">  <span class="comment">// 在事件处理函数里获取点击按钮 注册点击事件</span></span><br><span class="line">  <span class="comment">// 易错点: 必须在事件里获取 外面获取不到</span></span><br><span class="line">  <span class="comment">// 放到追加ul的前面 创建元素同时顺便绑定了事件</span></span><br><span class="line">  <span class="keyword">let</span> del = li.<span class="title function_">querySelector</span>(<span class="string">&#x27;.the_del&#x27;</span>)</span><br><span class="line">  del.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    ul.<span class="title function_">removeChild</span>(li)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 追加给ul 用父元素.insertBefore(子元素, 元素前面)</span></span><br><span class="line">  ul.<span class="title function_">insertBefore</span>(li, ul.<span class="property">children</span>[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 6. 重置表单域内容为空</span></span><br><span class="line">  text.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  useCount.<span class="property">innerHTML</span> = <span class="number">0</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="本节单词"><a href="#本节单词" class="headerlink" title="本节单词:"></a>本节单词:</h4><ol>
<li>parentNode</li>
<li>children</li>
<li>nextElementSibling</li>
<li>previousElementSibling</li>
<li>createElement</li>
<li>appendChild</li>
<li>insertBefore</li>
<li>cloneNode</li>
<li>removeChild</li>
<li>new Date</li>
<li>getTime</li>
<li>now</li>
<li>FullYear</li>
<li>Month</li>
<li>Day</li>
<li>Hours</li>
<li>Minutes</li>
<li>Seconds</li>
<li>trim</li>
<li>toLocaleString</li>
</ol>
</article><div class="post-copyright"><div class="post-copyright__author_group"><a class="post-copyright__author_img" href="/about/"><img class="post-copyright__author_img_front" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"></a><div class="post-copyright__author_name">XC's Blog</div><div class="post-copyright__author_desc"></div></div><div class="post-tools" id="post-tools"><div class="post-tools-left"><div id="quit-box" onclick="RemoveRewardMask()"></div></div></div><div class="post-copyright__notice"><span class="post-copyright-info">本文是原创文章，采用<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0</a>协议，完整转载请注明来自<a href="/">XC's Blog</a></span></div></div><div class="post-tools-right"><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/"><span class="tags-punctuation"></span>Web APIs笔记<span class="tagsPageCount">10</span></a></div></div></div><nav class="needEndHide pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%9B%9B%E5%A4%A9"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">Web APIs第四天</div></div></a></div><div class="next-post pull-right"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%BA%8C%E5%A4%A9"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">Web APIs第二天</div></div></a></div></nav><div class="relatedPosts"><div class="headline"><i class="scoicon sco-star-smile-fill"></i><span>喜欢这篇的人也看了</span><div class="relatedPosts-link"><a onclick="event.preventDefault(); toRandomPost();" href="javascript:void(0);" rel="external nofollow" data-pjax-state="">随便逛逛</a></div></div><div class="relatedPosts-list"><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E4%B8%83%E5%A4%A9" title="Web APIs第七天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第七天</div></div></a></div><div><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/WebAPIs%E7%AC%AC%E5%85%AD%E5%A4%A9" title="Web APIs第六天"><img class="cover" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/webapis.jpg" alt="cover"><div class="content is-center"><div class="title">Web APIs第六天</div></div></a></div></div></div></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="card-content"><div class="card-info-avatar is-center"><div class="author-info__top-group"><div class="author-info__sayhi" id="author-info__sayhi" onclick="sco.changeSayHelloText()">sayhello.morning</div></div></div><div class="avatar-img-group"><img class="avatar-img" alt="头像" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><div class="avatar-sticker"><img class="avatar-sticker-img" data-lazy-src="https://bu.dusays.com/2023/12/30/659011053e246.png" alt="心情贴纸"></div></div><div class="author-info__description_group"><div class="author-info__description">分享自己对编程的<b>热爱</b>，对美好生活的<b>向往</b>，对知识海洋<b>探索历程</b>。</div><div class="author-info__description2">相信你可以在这里找到对你有用的知识和教程。</div></div><div class="author-info__bottom-group"><a class="author-info__bottom-group-left" href="/about/"><div class="author-info__name">XC's Blog</div><div class="author-info__desc"></div></a><div class="card-info-social-icons is-center"></div></div></div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="scoicon sco-menu-line"></i><span>文章目录</span></div><div class="toc-content" id="toc-content"><ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#DOM%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C-%E9%87%8D%E7%BB%98%E4%B8%8E%E5%9B%9E%E6%B5%81"><span class="toc-text">DOM节点操作 重绘与回流</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-DOM%E8%8A%82%E7%82%B9"><span class="toc-text">1. DOM节点</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#1-%E8%8A%82%E7%82%B9%E7%B1%BB%E5%9E%8B"><span class="toc-text">1. 节点类型:</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E6%9F%A5%E6%89%BE%E8%8A%82%E7%82%B9"><span class="toc-text">1. 查找节点</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E6%9F%A5%E6%89%BE%E7%88%B6%E8%8A%82%E7%82%B9"><span class="toc-text">1.查找父节点:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E6%9F%A5%E6%89%BE%E5%AD%90%E8%8A%82%E7%82%B9"><span class="toc-text">2. 查找子节点</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E5%85%84%E5%BC%9F%E5%85%B3%E7%B3%BB%E6%9F%A5%E6%89%BE"><span class="toc-text">3. 兄弟关系查找</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#1-%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9"><span class="toc-text">1. 下一个兄弟节点</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#2-%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9"><span class="toc-text">2. 上一个兄弟节点</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E5%A2%9E%E5%8A%A0%E8%8A%82%E7%82%B9"><span class="toc-text">2. 增加节点</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9"><span class="toc-text">1. 创建节点</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E8%BF%BD%E5%8A%A0%E8%8A%82%E7%82%B9"><span class="toc-text">2. 追加节点</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#1-%E6%8F%92%E5%85%A5%E5%88%B0%E7%88%B6%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%90%E5%85%83%E7%B4%A0"><span class="toc-text">1. 插入到父元素的最后一个子元素:</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#2-%E6%8F%92%E5%85%A5%E5%88%B0%E7%88%B6%E5%85%83%E7%B4%A0%E4%B8%AD%E6%9F%90%E4%B8%AA%E5%AD%90%E5%85%83%E7%B4%A0%E7%9A%84%E5%89%8D%E9%9D%A2"><span class="toc-text">2. 插入到父元素中某个子元素的前面:</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#3-%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF%E6%A1%88%E4%BE%8B%E6%B8%B2%E6%9F%93"><span class="toc-text">3. 学成在线案例渲染</span></a></li></ol></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E5%85%8B%E9%9A%86%E8%8A%82%E7%82%B9"><span class="toc-text">3. 克隆节点</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#4-%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9"><span class="toc-text">4. 删除节点</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-%E6%97%B6%E9%97%B4%E5%AF%B9%E8%B1%A1"><span class="toc-text">3. 时间对象</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%AE%9E%E4%BE%8B%E5%8C%96"><span class="toc-text">1. 实例化</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E6%97%B6%E9%97%B4%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95"><span class="toc-text">2. 时间对象方法</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4"><span class="toc-text">页面显示时间:</span></a></li></ol></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E6%97%B6%E9%97%B4%E6%88%B3"><span class="toc-text">3. 时间戳</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E6%88%B3"><span class="toc-text">1. 三种方式获取时间戳:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E6%AF%95%E4%B8%9A%E5%80%92%E8%AE%A1%E6%97%B6%E6%95%88%E6%9E%9C"><span class="toc-text">2. 毕业倒计时效果</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#4-%E9%87%8D%E7%BB%98%E5%92%8C%E5%9B%9E%E6%B5%81"><span class="toc-text">4. 重绘和回流</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%9B%9E%E6%B5%81-%E9%87%8D%E6%8E%92"><span class="toc-text">1. 回流(重排)</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E9%87%8D%E7%BB%98"><span class="toc-text">2. 重绘</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E9%87%8D%E7%BB%98%E4%B8%8D%E4%B8%80%E5%AE%9A%E5%BC%95%E8%B5%B7%E5%9B%9E%E6%B5%81-%E8%80%8C%E5%9B%9E%E6%B5%81%E4%B8%80%E5%AE%9A%E4%BC%9A%E5%BC%95%E8%B5%B7%E9%87%8D%E7%BB%98"><span class="toc-text">3. 重绘不一定引起回流, 而回流一定会引起重绘</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#4-%E9%87%8D%E7%BB%98%E5%92%8C%E5%9B%9E%E6%B5%81-%E9%87%8D%E6%8E%92-%E4%BC%9A%E5%AF%BC%E8%87%B4%E5%9B%9E%E6%B5%81%E7%9A%84%E6%93%8D%E4%BD%9C%EF%BC%9A"><span class="toc-text">4. 重绘和回流(重排) 会导致回流的操作：</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#5-%E5%8F%91%E5%B8%83%E5%BE%AE%E5%8D%9A%E6%A1%88%E4%BE%8B"><span class="toc-text">5. 发布微博案例</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E8%8A%82%E5%8D%95%E8%AF%8D"><span class="toc-text">本节单词:</span></a></li></ol></li></ol></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="scoicon sco-map-line"></i><span>最近发布</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题"><img alt="整个前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题">整个前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题"><img alt="常见前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题">常见前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台"><img alt="硅谷甄选运营平台" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台">硅谷甄选运营平台</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天"><img alt="Vue第三天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天">Vue第三天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天"><img alt="Vue第二天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天">Vue第二天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9">Vue框架笔记</a></div></div></div></div></div></div></main><footer id="footer"><div id="sco-footer-bar"><div class="footer-logo"><span class="scoicon">XC's Blog</span></div><div class="footer-bar-description">来自XC's Blog - 的文章</div><a class="footer-bar-link" href="/">了解更多</a></div><div id="footer_deal"><div class="footer_mini_logo" id="footer_mini_logo" title="返回顶部" onclick="sco.toTop()"><img data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg" alt="返回顶部"></div></div><div id="sco-footer"></div><div id="footer-bar"><div class="footer-bar-links"><div class="footer-bar-left"><div class="copyright">© 2021 - 2024 By&nbsp;<a class="footer-bar-link" href="/">XC's Blog</a></div></div><div class="footer-bar-right"><a class="footer-bar-link" target="_blank" rel="noopener" href="https://github.com/wleelw/hexo-theme-solitude" title="主题">主题</a><a class="footer-bar-link cc"><i class="scoicon sco-copyright-line"></i><i class="scoicon sco-creative-commons-by-line"></i><i class="scoicon sco-creative-commons-nc-line"></i><i class="scoicon sco-creative-commons-nd-line"></i></a></div></div></div></footer></div><!-- inject body--><div><script src="/js/main.js?v=1.5.1"></script><script src="/js/utils.js?v=1.5.1"></script><script src="https://cdn.cbd.int/solitude-source/js/universe.min.js"></script><script>dark()
</script><script src="https://cdn.staticfile.org/pjax/0.2.8/pjax.min.js"></script><script src="https://cdn.staticfile.org/vanilla-lazyload/17.8.5/lazyload.iife.min.js"></script><script src="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.js"></script><script src="/js/sco-ai.min.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js"></script><script src="https://cdn.staticfile.org/meting/2.0.1/Meting.min.js"></script><script>const meting_api = 'https://meting.qjqq.cn/?server=:server&type=:type&id=:id&auth=:auth&r=:r';
</script><script src="/js/covercolor/local.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/pace/1.2.4/pace.min.js"></script></div><div id="js-pjax"><script async src="https://cdn.staticfile.org/busuanzi/2.3.0/bsz.pure.mini.min.js"></script><script id="config-diff">var PAGE_CONFIG = {
    is_post: true,
    is_page: false,
    is_home: false,
    page: 'post',
    toc: true,
    comment: false,
}
</script></div><!-- newest comment--><!-- pjax--><script>let pjaxSelectors = [
    'title',
    '#body-wrap',
    '#site-config',
    'meta[name="description"]',
    '#js-pjax',
    'meta[property^="og:"]',
]

const pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
})

document.querySelectorAll('script[data-pjax]').forEach(item => {
    const newScript = document.createElement('script')
    const content = item.text || item.textContent || item.innerHTML || ""
    Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
    newScript.appendChild(document.createTextNode(content))
    item.parentNode.replaceChild(newScript, item)
})

document.addEventListener('pjax:complete', () => {
    window.refreshFn()
})

document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
        pjax.loadUrl('/404.html')
    }
})</script><!-- theme--><script>initTheme = () => {
    const cachedMode = saveToLocal.get('theme');
    if (cachedMode === undefined)
        document.documentElement.setAttribute('data-theme', 'light');
    else
        document.documentElement.setAttribute('data-theme', cachedMode);
}
initTheme()</script><!-- search--><!-- music--><div class="needEndHide" id="nav-music" onclick="sco.musicToggle()"><div id="nav-music-hoverTips">音乐已暂停</div><meting-js id="8407304077" server="netease" type="playlist" mutex="true" preload="none" data-lrctype="0" order="random" theme="var(--sco-main)"></meting-js></div></body></html><script>const posts=["Vue笔记/前端面试题","Vue笔记/面试题","Vue笔记/硅谷甄选项目笔记","Vue笔记/vue第三天","Vue笔记/vue第二天","Vue笔记/Vue第一天","Vue笔记/vue框架笔记","Vue前置基础/5.ES6模块化与Webpack入门","Vue前置基础/1.Vue前置JS功底","Vue前置基础/4.跨域的基本概念","Vue前置基础/3.NPM的使用","Vue前置基础/2.Nodejs基础","Ajax学习笔记/黑马头条数据管理平台","Ajax学习笔记/Promise笔记","Ajax学习笔记/Ajax第四天","Ajax学习笔记/Ajax第三天","Ajax学习笔记/Ajax第二天","Ajax学习笔记/Ajax第一天","WebAPI学习笔记/JS进阶复习","WebAPI学习笔记/JS进阶第四天","WebAPI学习笔记/JS进阶第三天","WebAPI学习笔记/JS进阶第二天","WebAPI学习笔记/JS进阶第一天","WebAPI学习笔记/WebAPIs第七天","WebAPI学习笔记/WebAPIs第六天","WebAPI学习笔记/WebAPIs第五天","WebAPI学习笔记/WebAPIs第四天","WebAPI学习笔记/WebAPIs第三天","WebAPI学习笔记/WebAPIs第二天","WebAPI学习笔记/WebAPIs第一天","WebAPI学习笔记/WebAPIs学习笔记","WebAPI学习笔记/JS-ES6模块化","WebAPI学习笔记/JavaScript进阶","JavaScript学习笔记/JavaScript第五天","JavaScript学习笔记/JavaScript第四天","JavaScript学习笔记/JavaScript第三天","JavaScript学习笔记/JavaScript第二天","JavaScript学习笔记/JavaScript第一天","基础学习路线/移动开发-响应式布局","基础学习路线/移动开发-rem布局","基础学习路线/移动开发-flex布局","基础学习路线/移动开发-流式布局","基础学习路线/CSS3转换问题","基础学习路线/CSS-2D-3D转换","基础学习路线/前端168个单词","基础学习路线/CSS高级技巧","前端技术栈/前端路线","Hexo/图床方案汇总","其他技术栈/Windows软件推荐","Hexo/Butterfly主题配置","Hexo/Qexo","JavaScript/This指向与改变This指向","JavaScript/JS防抖与节流","JavaScript/如何在1分钟内完美解释什么是 JSONP 请求？","前端技术栈/移动端最佳适配解决方案","GitHub/Git常用命令","前端技术栈/来自2.5年前端小白的总结","网站资源/如何买到合适的域名","其他技术栈/CentOS一键安装Docker","网站资源/阿里云资源合集","其他技术栈/15个前端必备学习网站","其他技术栈/CSS3（圆角边框、阴影、浮动详解及示例）","网络协议/浅谈 HTTP 和 HTTPS","学习笔记/CSS属性大全","基础学习路线/CSS第五天-定位","基础学习路线/CSS第四天-浮动","基础学习路线/CSS第三天","基础学习路线/CSS第二天","基础学习路线/CSS第一天","基础学习路线/HTML第二天","基础学习路线/HTML第一天","学习笔记/「学习笔记」JavaScript基础","学习笔记/HTML与CSS进阶","Vue笔记/Vue X-数组对象的双向数据绑定","学习笔记/「学习笔记」CSS基础","学习笔记/「学习笔记」HTML基础","学习笔记/HTML基础","Windows/PE-Win10教程","Windows/Win系统网站-KMS","安卓玩机/Magisk卡刷-通刷官方-了解Fastboot","其他技术栈/前端开发免费资源大汇总","GitHub/Git基础-Github自定义域名","学习笔记/CSS笔记","Vscode/Vscode笔记-24款插件","其他技术栈/免费常用的前端CDN库","其他技术栈/软件及网站推荐","Vscode/记录 Vscode 插件","Hexo/Hexo音乐排行-Netlify CMS","GitHub/玩转GitHub","jQuery/jQuery自动触发事件与bootstrapjQuery插件用法","Hexo/使用Hexo和Github搭建个人博客","Hexo/Hexo博客搭建指南","Hexo/Hexo相关","Markdown/Markdown基础--高级教程","Markdown/Markdown基础教程"];function toRandomPost(){ pjax.loadUrl('/'+posts[Math.floor(Math.random()*posts.length)]); };</script>