<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>JavaScript 第五天 | XC's Blog</title><noscript>开启JavaScript才能访问本站哦~</noscript><link rel="icon" href="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><!-- index.css--><link rel="stylesheet" href="/css/index.css?v=1.5.1"><!-- inject head--><link rel="stylesheet" href="https://cdn.cbd.int/solitude-source/icon/scoicon.min.css"><link rel="stylesheet" href="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.css"><!-- aplayer--><link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css"><!-- swiper--><!-- Open Graph--><meta name="description" content="1. 什么是对象: 对象是一种数据类型, 是一种无序的数据集合 用多个变量保存散乱, 用对象比较统一 保存用户信息, 姓名年龄电话…用之前的数据类型不方便, 很难区分 1. 对象是属性和方法组成: 属性: 信息或特征 (名词), 比如手机尺寸、颜色、重量… 方法: 功能或行为 (动词), 比如打"><!-- pwa--><script>(win => {
        win.saveToLocal = {
            set: function setWithExpiry(key, value, ttl) {
                if (ttl === 0)
                    return
                const now = new Date()
                const expiryDay = ttl * 86400000
                const item = {
                    value: value,
                    expiry: now.getTime() + expiryDay,
                }
                localStorage.setItem(key, JSON.stringify(item))
            },

            get: function getWithExpiry(key) {
                const itemStr = localStorage.getItem(key)

                if (!itemStr) {
                    return undefined
                }
                const item = JSON.parse(itemStr)
                const now = new Date()

                if (now.getTime() > item.expiry) {
                    localStorage.removeItem(key)
                    return undefined
                }
                return item.value
            }
        }

        const DarkModeStatus = localStorage.getItem('theme')
        if (DarkModeStatus !== null) {
            if (DarkModeStatus === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark')
            } else {
                document.documentElement.setAttribute('data-theme', 'light')
            }
        }

        const asideStatus = saveToLocal.get('aside-status')
        if (asideStatus !== undefined) {
            if (asideStatus === 'hide') {
                document.documentElement.classList.add('hide-aside')
            } else {
                document.documentElement.classList.remove('hide-aside')
            }
        }
    }
)(window)

console.log(
    "%c Program: Hexo %c Theme: Hexo-Theme-Solitude %c Version: v1.5.1",
    "border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#ff3842;margin:10px 0",
    "padding: 5px 10px;color:white;background:#3e9f50;",
    "border-radius:0 5px 5px 0;padding: 5px 10px;background:#0084ff;"
);</script><!-- global head--><script>const GLOBAL_CONFIG = {
    root: '/',
    algolia: undefined,
    localsearch: undefined,
    runtime: '2021-04-20 00:00:00',
    lazyload: {
        enable: true,
        error: '/img/error_load.png'
    },
    hightlight: {
        enable: true,
        limit: 200,
        expand: false,
        copy: true,
    },
    randomlinks: false,
    lang: {
        theme: {
            dark: '已切换至深色模式',
            light: '已切换至浅色模式',
        },
        copy: {
            success: '复制成功',
            error: '复制失败',
        },
        backtop: '返回顶部',
        time: {
            recent: '最近',
            yesterday: '昨天',
            berforeyesterday: '前天',
            daybefore: '天前',
            runtime: '天',
        },
        search: {
            empty: '找不到你查询的内容：${query}',
            hit: '找到 ${hits} 条结果，用时 ${time} 毫秒',
            placeholder: '输入关键词快速查找',
        },
        chs: {
            chs_to_cht: '繁體中文',
            cht_to_chs: '简体中文',
        }
    },
    aside: {
        sayhello: {
            morning: '一日之计在于晨',
            noon: '吃饱了才有力气干活',
            afternoon: '集中精力，攻克难关',
            night: '不要太劳累了，早睡更健康',
            goodnight: '睡个好觉，保证精力充沛',
        },
        sayhello2: ["🤖️ 数码科技爱好者","🔍 分享与热心帮助","🏠 智能家居小能手","🔨 设计开发一条龙","🤝 专修交互与设计","🏃 脚踏实地行动派","🧱 团队小组发动机","💢 壮汉人狠话不多","🎮 电竞游戏爱好者"],
    },
    covercolor: {
        enable: true
    },
    comment: {
        enable: false,
        type: '',
        commentBarrage: false,
        randomInfoStart: ["聪敏的","可爱的","美丽的"],
        randomInfoEnd: ["白菜","小可爱","小仙女"],
        twikoo: {
            url: '',
            accessToken: ''
        },
        waline: {
            url: '',
        }
    },
    lightbox: 'null',
    rightside: {
        enable: false
    },
    ai: {
        enable: true,
        key: '',
        talk: '我是王卓Sco开发的摘要生成助理ScoGPT，ScoGPT在静态部署时进行摘要的撰写，并且在访客访问时通过ScoCorrection转译后的文本摘要实现工具。我在这里只负责已经生成的摘要显示，你无法与我直接沟通，但我可以回答一些预设的问题。',
        randomPost: false,
    },
    music: {
        enable: false,
    },
    translate: undefined,
};</script><meta name="generator" content="Hexo 6.3.0"></head><body id="body"><!-- universe--><canvas id="universe"></canvas><!-- loading--><!-- console--><div id="console"><div class="close-btn" onclick="sco.hideConsole()"><i class="scoicon sco-close-fill"></i></div><div class="button-group"><div class="console-btn-item"><a class="darkmode_switchbutton" onclick="sco.switchDarkMode()" title="昼夜切换" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i></a></div><div class="console-btn-item" id="consoleHideAside"><a class="asideSwitch" onclick="sco.switchHideAside()" title="边栏显示控制" href="javascript:void(0);"><i class="scoicon sco-side-bar-fill"></i></a></div><div class="console-btn-item" id="consoleMusic" onclick="sco.musicToggle()"><a class="music-switch" title="音乐开关" href="javascript:void(0);"><i class="scoicon sco-disc-fill"></i></a></div></div><div class="console-mask" onclick="sco.hideConsole()"></div></div><!-- sidebar--><div id="sidebar" style="zoom: 1;"><div id="menu-mask" style="display: none;"></div><div id="sidebar-menus"><span class="sidebar-menu-item-title">功能</span><div class="sidebar-menu-item"><a class="darkmode_switchbutton menu-child" onclick="sco.switchDarkMode()" href="javascript:void(0);"><i class="scoicon sco-moon-clear-fill"></i><span>显示模式</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div><span class="sidebar-menu-item-title">标签</span><div class="card-widget card-tags card-archives card-webinfo card-allinfo"><div class="card-tag-cloud"><a href="/tags/Ajax%E7%AC%94%E8%AE%B0/">Ajax笔记<sup>6</sup></a><a href="/tags/Hexo/">Hexo<sup>6</sup></a><a href="/tags/Qexo/">Qexo<sup>1</sup></a><a href="/tags/GitHub/">GitHub<sup>3</sup></a><a href="/tags/JavaScript/">JavaScript<sup>3</sup></a><a href="/tags/Markdown/">Markdown<sup>2</sup></a><a href="/tags/JavaScript%E7%AC%94%E8%AE%B0/">JavaScript笔记<sup>5</sup></a><a href="/tags/Vscode/">Vscode<sup>2</sup></a><a href="/tags/Vue%E5%89%8D%E7%BD%AE%E5%9F%BA%E7%A1%80/">Vue前置基础<sup>5</sup></a><a href="/tags/Vue%E6%A1%86%E6%9E%B6%E7%AC%94%E8%AE%B0/">Vue框架笔记<sup>6</sup></a><a href="/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题<sup>2</sup></a><a href="/tags/Web-APIs%E7%AC%94%E8%AE%B0/">Web APIs笔记<sup>10</sup></a><a href="/tags/JavaScript%E9%AB%98%E7%BA%A7/">JavaScript高级<sup>5</sup></a><a href="/tags/Windows/">Windows<sup>3</sup></a><a href="/tags/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF%E6%A0%88/">其他技术栈<sup>6</sup></a><a href="/tags/jQuery/">jQuery<sup>1</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88/">前端技术栈<sup>3</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-CSS/">学习笔记-CSS<sup>9</sup></a><a href="/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-HTML/">学习笔记-HTML<sup>2</sup></a><a href="/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/">移动开发<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%BB%8F%E9%AA%8C/">前端经验<sup>4</sup></a><a href="/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/">前端笔记<sup>3</sup></a><a href="/tags/%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90/">网站资源<sup>2</sup></a><a href="/tags/%E5%AE%89%E5%8D%93%E7%8E%A9%E6%9C%BA/">安卓玩机<sup>1</sup></a><a href="/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/">网络协议<sup>1</sup></a></div></div></div></div><!-- keyboard--><div class="post" id="body-wrap"><header class="post-bg" id="page-header"><nav class="show" id="nav"><div id="nav-group"><div id="blog_name"><a id="site-name" href="/" title="返回博客主页"><span class="title">XC's Blog</span></a></div><div id="page-name-mask"><div id="page-name"><a id="page-name-text" onclick="sco.toTop()">JavaScript 第五天</a></div></div><div id="menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><span>首页</span></a></div></div></div><div id="nav-left"></div><div id="nav-right"><div class="nav-button" id="randomPost_button"><a class="site-page" onclick="toRandomPost()" title="随机一篇文章" href="javascript:void(0);"><i class="scoicon sco-signal-tower-fill"></i></a></div><div class="nav-button" id="nav-console"><a class="console_switchbutton" onclick="sco.showConsole()" title="中控台" href="javascript:void(0);"><i class="scoicon sco-dashboard-fill"></i></a></div><div class="nav-button" id="nav-totop" onclick="sco.toTop()"><a class="totopbtn"><i class="scoicon sco-arrow-up-line"></i><span id="percent">0</span></a></div><div id="toggle-menu"><a class="site-page"><i class="scoicon sco-menu-line"></i></a></div></div></div></nav><div class="coverdiv" id="coverdiv"><img class="nolazyload" id="post-cover" src="https://npm.elemecdn.com/webxc/cover/js1.webp" alt="JavaScript 第五天"></div><div id="post-info"><div id="post-firstinfo"><div class="meta-firstline"><a class="post-meta-original" title="该文章为原创文章，注意版权协议">原创</a><span class="post-meta-categories"><a class="post-meta-categories" href="/categories/JavaScript笔记/">JavaScript笔记</a></span><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/JavaScript%E7%AC%94%E8%AE%B0/"><span class="tags-name tags-punctuation">JavaScript笔记</span></a></div></div></div></div><h1 class="post-title">JavaScript 第五天</h1><div id="post-meta"><div class="meta-secondline"></div></div></div><section class="main-hero-waves-area waves-area"><svg class="waves-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z"></path></defs><g class="parallax"><use href="#gentle-wave" x="48" y="0"></use><use href="#gentle-wave" x="48" y="3"></use><use href="#gentle-wave" x="48" y="5"></use><use href="#gentle-wave" x="48" y="7"></use></g></svg></section></header><main class="layout" id="content-inner"><div id="post"><div class="post-ai"><div class="ai-title"><div class="ai-title-left"><i class="ai-title-icon scoicon sco-robot-fill"></i><div class="ai-title-text">文章摘要</div></div><div class="ai-tag" id="ai-tag">GPT 4</div></div><div class="ai-explanation" style="display: block;"></div><div class="ai-suggestions"></div><div class="ai-bottom"><div class="ai-tips">此内容根据文章生成，并经过人工审核，仅用于文章内容的解释与总结</div><a class="ai-report" title="投诉" target="_blank" rel="noopener" href="https://blog.wzsco.top/about/">投诉</a></div></div><article class="post-content" id="article-container"><h3 id="1-什么是对象"><a href="#1-什么是对象" class="headerlink" title="1. 什么是对象:"></a>1. 什么是对象:</h3><ol>
<li>对象是一种数据类型, 是一种无序的数据集合</li>
<li>用多个变量保存散乱, 用对象比较统一 </li>
<li>保存用户信息, 姓名年龄电话…用之前的数据类型不方便, 很难区分</li>
</ol>
<h4 id="1-对象是属性和方法组成"><a href="#1-对象是属性和方法组成" class="headerlink" title="1. 对象是属性和方法组成:"></a>1. 对象是属性和方法组成:</h4><ul>
<li>属性: 信息或特征 (名词), 比如手机尺寸、颜色、重量…</li>
<li>方法: 功能或行为 (动词), 比如打电话、发短信、玩游戏…</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 对象名 = &#123;</span><br><span class="line">    属性名: 属性值,</span><br><span class="line">    方法名: 函数</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>对象属性没有顺序, 属性和值<strong>用 : 隔开</strong>  多个属性<strong>用 ; 逗号隔开</strong></li>
<li>可使用””或’’ , 一般省略, 除非遇到特殊符号 空格、中横线等</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;mark&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(num1)</span><br></pre></td></tr></table></figure>

<h4 id="2-属性访问"><a href="#2-属性访问" class="headerlink" title="2. 属性访问:"></a>2. 属性访问:</h4><ol>
<li>简单理解就是<strong>获得对象里的属性值</strong></li>
<li>两种方式: 1. 点形式: 对象.属性   2. []形式: 对象[‘属性’]</li>
<li><strong>1. 点属性名不要加引号  2. []属性名加引号 3. 后期不同场景会用到不同写法</strong></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Mark&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num.<span class="property">age</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num[<span class="string">&#x27;sex&#x27;</span>])</span><br></pre></td></tr></table></figure>

<h4 id="3-对象中的方法和访问"><a href="#3-对象中的方法和访问" class="headerlink" title="3. 对象中的方法和访问:"></a>3. 对象中的方法和访问:</h4><ol>
<li><p>数据行为信息叫方法, 方法名和函数构成, 使用 : 分隔</p>
</li>
<li><p>多个属性使用英文 , 分隔</p>
</li>
<li><p>方法名可使用” “或’’，一般省略, 除非遇到特殊符号空格、中横线等</p>
</li>
<li><p>声明对象, 添加若干方法后, 可使用 . 调用对象函数, 称为方法调用</p>
</li>
<li><p>对象.方法(), person.sayHi()</p>
</li>
<li><p>注意: 别忘了给方法名后面加小括号</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象中使用匿名函数</span></span><br><span class="line"><span class="keyword">let</span> num = &#123;</span><br><span class="line">    <span class="attr">say</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;你好&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">say1</span>: <span class="keyword">function</span> (<span class="params">a</span>) &#123; <span class="comment">// 传参</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(a)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用方法 对象.方法名()</span></span><br><span class="line">num.<span class="title function_">say</span>()</span><br><span class="line">num.<span class="title function_">say1</span>(<span class="string">&#x27;你好&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="2-操作对象"><a href="#2-操作对象" class="headerlink" title="2. 操作对象"></a>2. 操作对象</h3><ol>
<li>操作数据无非是增删改查</li>
<li>查询对象: 对象.属性、对象[‘属性’]、对象.方法()</li>
<li>重新赋值: 对象.属性 = 值、对象.方法 = function() {}</li>
<li>对象添加新的数据: 对象名.新属性名 = 新值</li>
<li>删除对象中属性: delete 对象名.属性名 (了解)</li>
</ol>
<h5 id="1-增加对象属性"><a href="#1-增加对象属性" class="headerlink" title="1. 增加对象属性"></a>1. 增加对象属性</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num3.<span class="property">sex</span> = <span class="string">&#x27;男&#x27;</span></span><br><span class="line">num3.<span class="property">say3</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="number">22</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num3.<span class="property">sex</span>)</span><br><span class="line">num3.<span class="title function_">say3</span>()</span><br></pre></td></tr></table></figure>

<h5 id="2-重新赋值对象属性"><a href="#2-重新赋值对象属性" class="headerlink" title="2. 重新赋值对象属性"></a>2. 重新赋值对象属性</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无论是属性或方法, 同一对象中名称一样, 后面的会覆盖前面的</span></span><br><span class="line"><span class="comment">// 重新赋值对象属性值</span></span><br><span class="line"><span class="keyword">let</span> num1 = &#123;</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">say</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1. 对象.属性 = 值</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num1.<span class="property">age</span> = <span class="number">20</span>)</span><br><span class="line"><span class="comment">// 2. 对象.方法 = function() &#123;&#125;</span></span><br><span class="line">num3.<span class="property">say</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="number">3</span>)</span><br><span class="line">&#125; </span><br><span class="line">num3.<span class="title function_">say2</span>()</span><br></pre></td></tr></table></figure>

<h5 id="3-删除属性-了解"><a href="#3-删除属性-了解" class="headerlink" title="3. 删除属性(了解)"></a>3. 删除属性(了解)</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> num3.<span class="property">sex</span></span><br></pre></td></tr></table></figure>

<h3 id="3-遍历对象"><a href="#3-遍历对象" class="headerlink" title="3. 遍历对象"></a>3. 遍历对象</h3><ol>
<li>对象没有length属性没有下标, 无法确定长度</li>
<li>主要用for in来遍历对象, 不用它来遍历数组</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 变量名 k 或者key value</span></span><br><span class="line"><span class="comment">// 代入法: k 本身存的就是属性名 k = &#x27;sex&#x27;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> num1) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(num1[k])</span><br><span class="line">    <span class="comment">// document.write(k) // 属性名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="1-遍历数组对象"><a href="#1-遍历数组对象" class="headerlink" title="1. 遍历数组对象"></a>1. 遍历数组对象</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组可以放任何数据类型</span></span><br><span class="line"><span class="keyword">let</span> num1 = [</span><br><span class="line">    &#123;<span class="attr">uname</span>: <span class="string">&#x27;小红&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">home</span>: <span class="string">&#x27;广东省&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">uname</span>: <span class="string">&#x27;小刚&#x27;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>, <span class="attr">home</span>: <span class="string">&#x27;河南省&#x27;</span>&#125;,</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 里面每一个对象都是数组里的元素 值 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> num1) &#123; <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(num1[key].<span class="property">uname</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(num1[key].<span class="property">age</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-遍历数组对象-根据数据渲染生成表格"><a href="#2-遍历数组对象-根据数据渲染生成表格" class="headerlink" title="2. 遍历数组对象: 根据数据渲染生成表格"></a>2. 遍历数组对象: 根据数据渲染生成表格</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = [</span><br><span class="line">    &#123;<span class="attr">uname</span>: <span class="string">&#x27;小红&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">home</span>: <span class="string">&#x27;广东省&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">uname</span>: <span class="string">&#x27;小刚&#x27;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>, <span class="attr">home</span>: <span class="string">&#x27;河南省&#x27;</span>&#125;,</span><br><span class="line">]</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`</span></span><br><span class="line"><span class="string">    &lt;table&gt;</span></span><br><span class="line"><span class="string">       &lt;caption&gt;学生列表&lt;/caption&gt;</span></span><br><span class="line"><span class="string">       &lt;tr&gt;</span></span><br><span class="line"><span class="string">           &lt;th&gt;序号&lt;/th&gt;</span></span><br><span class="line"><span class="string">           &lt;th&gt;姓名&lt;/th&gt;</span></span><br><span class="line"><span class="string">           &lt;th&gt;年龄&lt;/th&gt;</span></span><br><span class="line"><span class="string">           &lt;th&gt;性别&lt;/th&gt;</span></span><br><span class="line"><span class="string">           &lt;th&gt;家乡&lt;/th&gt;</span></span><br><span class="line"><span class="string">       &lt;/tr&gt; </span></span><br><span class="line"><span class="string">`</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> num2 = <span class="number">0</span>; num2 &lt; num1.<span class="property">length</span>; num2++) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;tr&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;num2 + <span class="number">1</span>&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;num1[num2].uname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;num1[num2].age&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;num1[num2].sex&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;td&gt;<span class="subst">$&#123;num1[num2].home&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">        &lt;/tr&gt; </span></span><br><span class="line"><span class="string">    `</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;/table&gt;`</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-内置对象"><a href="#4-内置对象" class="headerlink" title="4. 内置对象"></a>4. 内置对象</h3><ol>
<li>JS内部提供的对象, 各种属性和方法供开发者调用</li>
<li>Math对象是JS提供的 ‘数学高手’ 对象, 提供一系列数学运算方法</li>
</ol>
<h3 id="5-Math对象方法："><a href="#5-Math对象方法：" class="headerlink" title="5. Math对象方法："></a>5. Math对象方法：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.圆周率</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="property">PI</span>)</span><br><span class="line"><span class="comment">// 2.随机数 返回是小数 能得到0 得不到1</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>())</span><br><span class="line"><span class="comment">// 3.向上取整 返回是整数</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">1.5</span>))</span><br><span class="line"><span class="comment">// 4.floor 向下取整 round 就近取整</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">1.5</span>))</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">1.6</span>))</span><br><span class="line"><span class="comment">// 5.找最大数</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line"><span class="comment">// 6.找最小数</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line"><span class="comment">// pow：幂运算  2. abs：绝对值...</span></span><br></pre></td></tr></table></figure>

<ol>
<li><h5 id="生成0-10的随机数"><a href="#生成0-10的随机数" class="headerlink" title="生成0-10的随机数"></a>生成0-10的随机数</h5></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">10</span> + <span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><h5 id="生成5-10的随机数"><a href="#生成5-10的随机数" class="headerlink" title="生成5-10的随机数"></a>生成5-10的随机数</h5></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">5</span> + <span class="number">1</span>)) + <span class="number">5</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><h5 id="生成N-N之间的随机数"><a href="#生成N-N之间的随机数" class="headerlink" title="生成N-N之间的随机数"></a>生成N-N之间的随机数</h5></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (M - N + <span class="number">1</span>)) + N</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">10</span> - <span class="number">1</span> + <span class="number">1</span>) + <span class="number">1</span>))</span><br><span class="line"><span class="comment">// 函数封装法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min - min) + min)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> re = <span class="title function_">fn</span>(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(re)</span><br></pre></td></tr></table></figure>

<h5 id="4-随机点名"><a href="#4-随机点名" class="headerlink" title="4. 随机点名"></a>4. 随机点名</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// floor random 随机显示数组里名字</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min - min) + min)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> num1 = [<span class="string">&#x27;赵云&#x27;</span>, <span class="string">&#x27;黄忠&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>, <span class="string">&#x27;马超&#x27;</span>, <span class="string">&#x27;曹操&#x27;</span>, <span class="string">&#x27;刘备&#x27;</span>]</span><br><span class="line"><span class="comment">// 调用函数随机数 生成1个随机数 作为数组索引号</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="title function_">fn</span>(<span class="number">0</span>, num1.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num1[num2])</span><br></pre></td></tr></table></figure>

<h5 id="5-随机点名-改进版-点完名后不重复"><a href="#5-随机点名-改进版-点完名后不重复" class="headerlink" title="5. 随机点名 (改进版: 点完名后不重复)"></a>5. 随机点名 (改进版: 点完名后不重复)</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点名后不重复点名 删除它</span></span><br><span class="line"><span class="comment">// 数组中删除刚才抽中的索引号</span></span><br><span class="line">num1.<span class="title function_">splice</span>(num2, <span class="number">1</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1)</span><br></pre></td></tr></table></figure>

<h5 id="6-猜数字游戏"><a href="#6-猜数字游戏" class="headerlink" title="6. 猜数字游戏"></a>6. 猜数字游戏</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户输入一个数 生成1 ~ 10之间的随机数</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="title function_">fn</span>(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">// 无限弹窗 直到输入正确为止</span></span><br><span class="line">    <span class="keyword">let</span> num2 = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入您猜的数字&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (num1 &lt; num2) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;你猜大了, 继续猜吧!&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num1 &gt; num2) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;你猜小了, 继续猜吧!&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;恭喜您猜对了!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="7-学成在线页面渲染"><a href="#7-学成在线页面渲染" class="headerlink" title="7. 学成在线页面渲染"></a>7. 学成在线页面渲染</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;box w&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-hd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>精品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-bd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                let data = [</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                        src: &#x27;images/course01.png&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                        title: &#x27;Think PHP 5.0 博客系统实战项目演练&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                        num: 1125</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                ]</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                // 根据data数据个数渲染有多少个li</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                for (let num = 0; num &lt; data.length; num++) &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    document.write(`</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">$&#123;data[num].src&#125;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                         <span class="tag">&lt;<span class="name">h4</span>&gt;</span>$&#123;data[num].title&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                         <span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span> • <span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;data[num].num&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>人在学习</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    `)</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="6-术语解释"><a href="#6-术语解释" class="headerlink" title="6. 术语解释"></a>6. 术语解释</h3><table>
<thead>
<tr>
<th align="left">术语</th>
<th align="left">解释</th>
<th align="left">举例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">关键字</td>
<td align="left">在JS中有特殊意义的词汇</td>
<td align="left">let、var、function、if、else、switch、case、break</td>
</tr>
<tr>
<td align="left">保留字</td>
<td align="left">目前JS中没意义, 以后具有特殊意义的词汇</td>
<td align="left">int、short、long、char</td>
</tr>
<tr>
<td align="left">标识符</td>
<td align="left">变量名、函数名另一种叫法</td>
<td align="left">无</td>
</tr>
<tr>
<td align="left">表达式</td>
<td align="left">能产生值的代码, 配合运算符出现</td>
<td align="left">10+3、age &gt;= 18</td>
</tr>
<tr>
<td align="left">语句</td>
<td align="left">按用途会分类: 输出、声明、 分支语句</td>
<td align="left">无</td>
</tr>
</tbody></table>
<h4 id="1-基本数据和引用数据类型"><a href="#1-基本数据和引用数据类型" class="headerlink" title="1. 基本数据和引用数据类型"></a>1. 基本数据和引用数据类型</h4><ol>
<li>简单类型又叫基本数据或值类型, 复杂类型又叫引用类型</li>
<li>值类型: 简单数据/基本数据, 在存储时变量中存储的是值本身, 因此叫值类型</li>
<li>引用类型: 复杂数据, 在存储时变量中存储的仅仅是地址(引用), 因此叫引用数据类型 <img data-lazy-src="https://npm.elemecdn.com/webxc/post/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.jpg" style="zoom:33%;" /></li>
</ol>
<h4 id="2-堆-栈-空间分配区别："><a href="#2-堆-栈-空间分配区别：" class="headerlink" title="2. 堆/栈 空间分配区别："></a>2. 堆/栈 空间分配区别：</h4><ol>
<li>简单数据类型存放到栈里 2. 引用数据类型存放到堆里</li>
<li>栈(操作系统): 由操作系统自动分配存放函数的参数值、局部变量的值等, 操作方式类似于数据结构中的栈 </li>
<li>堆(操作系统): 存储复杂类型(对象), 由程序员分配释放, 若不释放, 由垃圾回收机制回收 </li>
</ol>
<h4 id="3-简单类型的内存分配"><a href="#3-简单类型的内存分配" class="headerlink" title="3. 简单类型的内存分配"></a>3. 简单类型的内存分配</h4><ol>
<li>值类型(简单数据类型): string、number、boolean、undefined、null</li>
<li>值类型变量的数据直接存放在变量(栈空间)中<img data-lazy-src="https://npm.elemecdn.com/webxc/post/%E7%AE%80%E5%8D%95%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D.jpg" style="zoom:33%;" />
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单数据类型存储值 10</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="number">10</span></span><br><span class="line"><span class="keyword">let</span> num2 = num1</span><br><span class="line">num2 = <span class="number">20</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(num1)</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="4-复杂类型的内存分配"><a href="#4-复杂类型的内存分配" class="headerlink" title="4. 复杂类型的内存分配"></a>4. 复杂类型的内存分配</h4><ol>
<li>引用类型(复杂数据类型): 通过new关键字创建的对象(系统对象、自定义对象) 如Object、Array、Date…</li>
<li>引用类型变量(栈空间)里存放的是地址, 真正的对象实例存放在堆空间中 <img data-lazy-src="https://npm.elemecdn.com/webxc/post/%E5%A4%8D%E6%9D%82%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D.jpg" style="zoom:33%;" /></li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象 引用数据类型 栈里存储的是地址 20</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj2 = obj1</span><br><span class="line">obj2.<span class="property">age</span> = <span class="number">20</span></span><br><span class="line"><span class="comment">// 因为它们是复杂数据类型 栈都指向同一地址</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(obj1.<span class="property">age</span>, obj2.<span class="property">age</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="本节单词"><a href="#本节单词" class="headerlink" title="本节单词:"></a>本节单词:</h4><ol>
<li>key、value</li>
<li>in</li>
<li>math</li>
<li>object</li>
<li>PI、random、ceil、floor、round、max、min</li>
<li>uname、age、sex、goods、address、weight</li>
<li>dir</li>
<li>delete</li>
</ol>
</article><div class="post-copyright"><div class="post-copyright__author_group"><a class="post-copyright__author_img" href="/about/"><img class="post-copyright__author_img_front" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"></a><div class="post-copyright__author_name">XC's Blog</div><div class="post-copyright__author_desc"></div></div><div class="post-tools" id="post-tools"><div class="post-tools-left"><div id="quit-box" onclick="RemoveRewardMask()"></div></div></div><div class="post-copyright__notice"><span class="post-copyright-info">本文是原创文章，采用<a target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">CC BY-NC-SA 4.0</a>协议，完整转载请注明来自<a href="/">XC's Blog</a></span></div></div><div class="post-tools-right"><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/JavaScript%E7%AC%94%E8%AE%B0/"><span class="tags-punctuation"></span>JavaScript笔记<span class="tagsPageCount">5</span></a></div></div></div><nav class="needEndHide pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/WebAPI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript%E8%BF%9B%E9%98%B6"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">JavaScript 进阶</div></div></a></div><div class="next-post pull-right"><a href="/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript%E7%AC%AC%E5%9B%9B%E5%A4%A9"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">JavaScript 第四天</div></div></a></div></nav><div class="relatedPosts"><div class="headline"><i class="scoicon sco-star-smile-fill"></i><span>喜欢这篇的人也看了</span><div class="relatedPosts-link"><a onclick="event.preventDefault(); toRandomPost();" href="javascript:void(0);" rel="external nofollow" data-pjax-state="">随便逛逛</a></div></div><div class="relatedPosts-list"><div><a href="/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript%E7%AC%AC%E5%9B%9B%E5%A4%A9" title="JavaScript 第四天"><img class="cover" data-lazy-src="https://npm.elemecdn.com/webxc/cover/js1.webp" alt="cover"><div class="content is-center"><div class="title">JavaScript 第四天</div></div></a></div><div><a href="/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript%E7%AC%AC%E4%B8%89%E5%A4%A9" title="JavaScript 第三天"><img class="cover" data-lazy-src="https://npm.elemecdn.com/webxc/cover/js1.webp" alt="cover"><div class="content is-center"><div class="title">JavaScript 第三天</div></div></a></div></div></div></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="card-content"><div class="card-info-avatar is-center"><div class="author-info__top-group"><div class="author-info__sayhi" id="author-info__sayhi" onclick="sco.changeSayHelloText()">sayhello.morning</div></div></div><div class="avatar-img-group"><img class="avatar-img" alt="头像" data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg"><div class="avatar-sticker"><img class="avatar-sticker-img" data-lazy-src="https://bu.dusays.com/2023/12/30/659011053e246.png" alt="心情贴纸"></div></div><div class="author-info__description_group"><div class="author-info__description">分享自己对编程的<b>热爱</b>，对美好生活的<b>向往</b>，对知识海洋<b>探索历程</b>。</div><div class="author-info__description2">相信你可以在这里找到对你有用的知识和教程。</div></div><div class="author-info__bottom-group"><a class="author-info__bottom-group-left" href="/about/"><div class="author-info__name">XC's Blog</div><div class="author-info__desc"></div></a><div class="card-info-social-icons is-center"></div></div></div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="scoicon sco-menu-line"></i><span>文章目录</span></div><div class="toc-content" id="toc-content"><ol class="toc"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E8%B1%A1"><span class="toc-text">1. 什么是对象:</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E7%BB%84%E6%88%90"><span class="toc-text">1. 对象是属性和方法组成:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E5%B1%9E%E6%80%A7%E8%AE%BF%E9%97%AE"><span class="toc-text">2. 属性访问:</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E8%AE%BF%E9%97%AE"><span class="toc-text">3. 对象中的方法和访问:</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%B1%A1"><span class="toc-text">2. 操作对象</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#1-%E5%A2%9E%E5%8A%A0%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7"><span class="toc-text">1. 增加对象属性</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#2-%E9%87%8D%E6%96%B0%E8%B5%8B%E5%80%BC%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7"><span class="toc-text">2. 重新赋值对象属性</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#3-%E5%88%A0%E9%99%A4%E5%B1%9E%E6%80%A7-%E4%BA%86%E8%A7%A3"><span class="toc-text">3. 删除属性(了解)</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1"><span class="toc-text">3. 遍历对象</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#1-%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1"><span class="toc-text">1. 遍历数组对象</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#2-%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1-%E6%A0%B9%E6%8D%AE%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%E7%94%9F%E6%88%90%E8%A1%A8%E6%A0%BC"><span class="toc-text">2. 遍历数组对象: 根据数据渲染生成表格</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#4-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1"><span class="toc-text">4. 内置对象</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#5-Math%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%EF%BC%9A"><span class="toc-text">5. Math对象方法：</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#%E7%94%9F%E6%88%900-10%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0"><span class="toc-text">生成0-10的随机数</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#%E7%94%9F%E6%88%905-10%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0"><span class="toc-text">生成5-10的随机数</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#%E7%94%9F%E6%88%90N-N%E4%B9%8B%E9%97%B4%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0"><span class="toc-text">生成N-N之间的随机数</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#4-%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D"><span class="toc-text">4. 随机点名</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#5-%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D-%E6%94%B9%E8%BF%9B%E7%89%88-%E7%82%B9%E5%AE%8C%E5%90%8D%E5%90%8E%E4%B8%8D%E9%87%8D%E5%A4%8D"><span class="toc-text">5. 随机点名 (改进版: 点完名后不重复)</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#6-%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F"><span class="toc-text">6. 猜数字游戏</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#7-%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93"><span class="toc-text">7. 学成在线页面渲染</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#6-%E6%9C%AF%E8%AF%AD%E8%A7%A3%E9%87%8A"><span class="toc-text">6. 术语解释</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><span class="toc-text">1. 基本数据和引用数据类型</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#2-%E5%A0%86-%E6%A0%88-%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E5%8C%BA%E5%88%AB%EF%BC%9A"><span class="toc-text">2. 堆&#x2F;栈 空间分配区别：</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#3-%E7%AE%80%E5%8D%95%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D"><span class="toc-text">3. 简单类型的内存分配</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#4-%E5%A4%8D%E6%9D%82%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D"><span class="toc-text">4. 复杂类型的内存分配</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E8%8A%82%E5%8D%95%E8%AF%8D"><span class="toc-text">本节单词:</span></a></li></ol></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="scoicon sco-map-line"></i><span>最近发布</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题"><img alt="整个前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98" title="整个前端面试题">整个前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题"><img alt="常见前端面试题" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98" title="常见前端面试题">常见前端面试题</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E9%9D%A2%E8%AF%95%E9%A2%98">面试题</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台"><img alt="硅谷甄选运营平台" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0" title="硅谷甄选运营平台">硅谷甄选运营平台</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天"><img alt="Vue第三天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9" title="Vue第三天">Vue第三天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%B8%89%E5%A4%A9">Vue框架笔记</a></div></div><div class="aside-list-item"><a class="thumbnail" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天"><img alt="Vue第二天" data-lazy-src="https://cdn1.tianli0.top/gh/web-xc/iMG/postss/vue.png"></a><div class="content"><a class="title" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9" title="Vue第二天">Vue第二天</a><a class="article-recent_post_categories" href="/Vue%E7%AC%94%E8%AE%B0/vue%E7%AC%AC%E4%BA%8C%E5%A4%A9">Vue框架笔记</a></div></div></div></div></div></div></main><footer id="footer"><div id="sco-footer-bar"><div class="footer-logo"><span class="scoicon">XC's Blog</span></div><div class="footer-bar-description">来自XC's Blog - 的文章</div><a class="footer-bar-link" href="/">了解更多</a></div><div id="footer_deal"><div class="footer_mini_logo" id="footer_mini_logo" title="返回顶部" onclick="sco.toTop()"><img data-lazy-src="https://npm.elemecdn.com/webxc@1.0.0/logo/logo.jpg" alt="返回顶部"></div></div><div id="sco-footer"></div><div id="footer-bar"><div class="footer-bar-links"><div class="footer-bar-left"><div class="copyright">© 2021 - 2024 By&nbsp;<a class="footer-bar-link" href="/">XC's Blog</a></div></div><div class="footer-bar-right"><a class="footer-bar-link" target="_blank" rel="noopener" href="https://github.com/wleelw/hexo-theme-solitude" title="主题">主题</a><a class="footer-bar-link cc"><i class="scoicon sco-copyright-line"></i><i class="scoicon sco-creative-commons-by-line"></i><i class="scoicon sco-creative-commons-nc-line"></i><i class="scoicon sco-creative-commons-nd-line"></i></a></div></div></div></footer></div><!-- inject body--><div><script src="/js/main.js?v=1.5.1"></script><script src="/js/utils.js?v=1.5.1"></script><script src="https://cdn.cbd.int/solitude-source/js/universe.min.js"></script><script>dark()
</script><script src="https://cdn.staticfile.org/pjax/0.2.8/pjax.min.js"></script><script src="https://cdn.staticfile.org/vanilla-lazyload/17.8.5/lazyload.iife.min.js"></script><script src="https://cdn.staticfile.org/node-snackbar/0.1.16/snackbar.min.js"></script><script src="/js/sco-ai.min.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js"></script><script src="https://cdn.staticfile.org/meting/2.0.1/Meting.min.js"></script><script>const meting_api = 'https://meting.qjqq.cn/?server=:server&type=:type&id=:id&auth=:auth&r=:r';
</script><script src="/js/covercolor/local.js?v=1.5.1"></script><script src="https://cdn.staticfile.org/pace/1.2.4/pace.min.js"></script></div><div id="js-pjax"><script async src="https://cdn.staticfile.org/busuanzi/2.3.0/bsz.pure.mini.min.js"></script><script id="config-diff">var PAGE_CONFIG = {
    is_post: true,
    is_page: false,
    is_home: false,
    page: 'post',
    toc: true,
    comment: false,
}
</script></div><!-- newest comment--><!-- pjax--><script>let pjaxSelectors = [
    'title',
    '#body-wrap',
    '#site-config',
    'meta[name="description"]',
    '#js-pjax',
    'meta[property^="og:"]',
]

const pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
})

document.querySelectorAll('script[data-pjax]').forEach(item => {
    const newScript = document.createElement('script')
    const content = item.text || item.textContent || item.innerHTML || ""
    Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
    newScript.appendChild(document.createTextNode(content))
    item.parentNode.replaceChild(newScript, item)
})

document.addEventListener('pjax:complete', () => {
    window.refreshFn()
})

document.addEventListener('pjax:error', (e) => {
    if (e.request.status === 404) {
        pjax.loadUrl('/404.html')
    }
})</script><!-- theme--><script>initTheme = () => {
    const cachedMode = saveToLocal.get('theme');
    if (cachedMode === undefined)
        document.documentElement.setAttribute('data-theme', 'light');
    else
        document.documentElement.setAttribute('data-theme', cachedMode);
}
initTheme()</script><!-- search--><!-- music--><div class="needEndHide" id="nav-music" onclick="sco.musicToggle()"><div id="nav-music-hoverTips">音乐已暂停</div><meting-js id="8407304077" server="netease" type="playlist" mutex="true" preload="none" data-lrctype="0" order="random" theme="var(--sco-main)"></meting-js></div></body></html><script>const posts=["Vue笔记/前端面试题","Vue笔记/面试题","Vue笔记/硅谷甄选项目笔记","Vue笔记/vue第三天","Vue笔记/vue第二天","Vue笔记/Vue第一天","Vue笔记/vue框架笔记","Vue前置基础/5.ES6模块化与Webpack入门","Vue前置基础/1.Vue前置JS功底","Vue前置基础/4.跨域的基本概念","Vue前置基础/3.NPM的使用","Vue前置基础/2.Nodejs基础","Ajax学习笔记/黑马头条数据管理平台","Ajax学习笔记/Promise笔记","Ajax学习笔记/Ajax第四天","Ajax学习笔记/Ajax第三天","Ajax学习笔记/Ajax第二天","Ajax学习笔记/Ajax第一天","WebAPI学习笔记/JS进阶复习","WebAPI学习笔记/JS进阶第四天","WebAPI学习笔记/JS进阶第三天","WebAPI学习笔记/JS进阶第二天","WebAPI学习笔记/JS进阶第一天","WebAPI学习笔记/WebAPIs第七天","WebAPI学习笔记/WebAPIs第六天","WebAPI学习笔记/WebAPIs第五天","WebAPI学习笔记/WebAPIs第四天","WebAPI学习笔记/WebAPIs第三天","WebAPI学习笔记/WebAPIs第二天","WebAPI学习笔记/WebAPIs第一天","WebAPI学习笔记/WebAPIs学习笔记","WebAPI学习笔记/JS-ES6模块化","WebAPI学习笔记/JavaScript进阶","JavaScript学习笔记/JavaScript第五天","JavaScript学习笔记/JavaScript第四天","JavaScript学习笔记/JavaScript第三天","JavaScript学习笔记/JavaScript第二天","JavaScript学习笔记/JavaScript第一天","基础学习路线/移动开发-响应式布局","基础学习路线/移动开发-rem布局","基础学习路线/移动开发-flex布局","基础学习路线/移动开发-流式布局","基础学习路线/CSS3转换问题","基础学习路线/CSS-2D-3D转换","基础学习路线/前端168个单词","基础学习路线/CSS高级技巧","前端技术栈/前端路线","Hexo/图床方案汇总","其他技术栈/Windows软件推荐","Hexo/Butterfly主题配置","Hexo/Qexo","JavaScript/This指向与改变This指向","JavaScript/JS防抖与节流","JavaScript/如何在1分钟内完美解释什么是 JSONP 请求？","前端技术栈/移动端最佳适配解决方案","GitHub/Git常用命令","前端技术栈/来自2.5年前端小白的总结","网站资源/如何买到合适的域名","其他技术栈/CentOS一键安装Docker","网站资源/阿里云资源合集","其他技术栈/15个前端必备学习网站","其他技术栈/CSS3（圆角边框、阴影、浮动详解及示例）","网络协议/浅谈 HTTP 和 HTTPS","学习笔记/CSS属性大全","基础学习路线/CSS第五天-定位","基础学习路线/CSS第四天-浮动","基础学习路线/CSS第三天","基础学习路线/CSS第二天","基础学习路线/CSS第一天","基础学习路线/HTML第二天","基础学习路线/HTML第一天","学习笔记/「学习笔记」JavaScript基础","学习笔记/HTML与CSS进阶","Vue笔记/Vue X-数组对象的双向数据绑定","学习笔记/「学习笔记」CSS基础","学习笔记/「学习笔记」HTML基础","学习笔记/HTML基础","Windows/PE-Win10教程","Windows/Win系统网站-KMS","安卓玩机/Magisk卡刷-通刷官方-了解Fastboot","其他技术栈/前端开发免费资源大汇总","GitHub/Git基础-Github自定义域名","学习笔记/CSS笔记","Vscode/Vscode笔记-24款插件","其他技术栈/免费常用的前端CDN库","其他技术栈/软件及网站推荐","Vscode/记录 Vscode 插件","Hexo/Hexo音乐排行-Netlify CMS","GitHub/玩转GitHub","jQuery/jQuery自动触发事件与bootstrapjQuery插件用法","Hexo/使用Hexo和Github搭建个人博客","Hexo/Hexo博客搭建指南","Hexo/Hexo相关","Markdown/Markdown基础--高级教程","Markdown/Markdown基础教程"];function toRandomPost(){ pjax.loadUrl('/'+posts[Math.floor(Math.random()*posts.length)]); };</script>